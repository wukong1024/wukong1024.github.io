<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://wukong1024.github.io/atom.xml" rel="self"/>
  
  <link href="https://wukong1024.github.io/"/>
  <updated>2022-04-02T04:00:18.181Z</updated>
  <id>https://wukong1024.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>当然我在胡扯</title>
    <link href="https://wukong1024.github.io/2020/12/30/%E5%BD%93%E7%84%B6%E6%88%91%E5%9C%A8%E8%83%A1%E6%89%AF/"/>
    <id>https://wukong1024.github.io/2020/12/30/%E5%BD%93%E7%84%B6%E6%88%91%E5%9C%A8%E8%83%A1%E6%89%AF/</id>
    <published>2020-12-30T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="当然我在胡扯"><a href="#当然我在胡扯" class="headerlink" title="当然我在胡扯"></a>当然我在胡扯</h1><blockquote><p>对爱情的渴望，对知识的追求，对人类苦难不可遏制的同情心，这三种纯洁而无比强烈的激情支配着我的一生。这三种激情，就像飓风一样，在深深的苦海上，肆意地把我吹来吹去，吹到濒临绝望的边缘。—-罗素《我为什么活着》</p></blockquote><h2 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h2><p>当我们提到时间的时，前提是尊重，尊重自己的时间，尊重别人的时间。光阴似箭、白驹过隙的话不必重复，更想谈的是如何做正确的时间，做正确的事。</p><p>聊一下”抖音“，著名的时间”杀手”，由无数个简短的视频组成，无聊，无趣。但同时不可否认它的价值，为小镇青年和父辈们，提供了一个看见这光怪陆离的世界的窗口、一个消磨时间的途径，某种意义上也算是为”国泰民安“中的”民安“做了贡献。只是和一百年前的英法商人行为类似，某种一意义上一样在麻痹世人。</p><p>聊一下”开会“，之前看了关于谷歌的一本书《重新定义公司》，与时间相关的是”守时“和”出席必要的会议“，”守时“不必要谈，谈一下”出席必要的会议“。每一个参会者都应该积极主动参与、会议前查阅关于此次会议的相关资料，会议中主动参与发出自己的声音，会议后明确自己下一步要做的事。出席必要的会议，节省你的时间，节省他人的时间。</p><p>正确时间，做正确的事。我们经常会主动或被动参与一些活动。会议，上课，团建，聚餐等无趣的活动。</p><ul><li>关于会议和上课，很多时候我们对部分会议和课程不感兴趣，对新事物新知识新思想有抵触心理，你可以选择尝试去了解，集百家之长，成一家之言，不断完善自我对这个世界的认知，通过别人的眼睛去看这个世界。或者直接离开会议或课堂，去做自己该做的事。</li><li>关于团建和聚餐，说实话，真心不喜欢，太浪费时间了。但为了团队氛围和凝聚力，不得已戴着“面具”去组织或参加，去刻意引导大家参与，刻意引出话题让大家讨论，“面具”戴久了，似乎也就麻木了，挺讨厌这样的。相对而言，我更愿意用这些时间去学习新的事物，做一些好玩的事，享受做饭的过程，享受一个吃饭时看美剧和纪录片的时间。</li></ul><h2 id="团队·个人·工作"><a href="#团队·个人·工作" class="headerlink" title="团队·个人·工作"></a>团队·个人·工作</h2><p>团队。前两天向盛和塾的一位老师关于“是否放弃部分人”、“团队与个人的成长“和”输入与输出“三个问题进行了咨询，学到了很多，本质还是自身能力和修为不足，还有部分自私心在作祟。但现在的我不想成为工具人、不想成为”佛“去普渡众生。我自身有很多工作要做，很多东西要学，想通过自己努力去不断提升，永远把昨天的自己当做 SB。可以团队不一样，即使再努力也无法让一些人去突破，去成长为团队真正的一部分，而不是可有可无，可随时被替代的一员。自身的努力对团队的意义并不大，反而容易成为团队的工具人。哀莫大于心死，望诸君共勉。</p><p>个人。马斯洛的需求层次理论，也就是那个经典的金字塔，从底到高，分别是生理、安全、社交、尊重、自我实现。后期又增加了一个超自我实现，大意是个人充分满足自我实现后短暂的”高峰体验“。刚开始看马斯洛心理学相关的书籍时还不理解，后来在读《游戏改变世界》时才真正理解，不过换了个名字”心流(flow)“，心流是一种在实现自我价值时的一种状态，一旦进入心流状态，无论时成功或失败，都无法让你满意，保持高度的专注去实现自我突破。如何诱发心流 ：有明确目标行为方式或有既定规则，随着时间的推移难度和技能水平也提高的挑战性活动。举例：俄罗斯方块：</p><ul><li>视觉上的，你看到一排又一排的方块“噗噗”地消失；</li><li>数量上的，屏幕上的分数不断上涨；</li><li>性质上的，你感受到了持续上升的挑战性。</li></ul><p>工作。陪伴你一生最长的是工作，工作时不开心，那活着多累呀。我们是幸运的，至少中国多数 90 后是幸运的，接受了九年义务教育，之后又有幸读高中、大学。成为了中国 10%的大学生，5%的本科生，所以我们有了选择的权力，选择自己喜欢的工作，选择热爱的事业。工作的本质是创造价值，去回报老师的教育、亲人的养育、社会的宽容、国家的保护，工作的意义是通过你实现个人成就，创造价值时，同时恰好让这个世界变得好一点。我们上学时有明确的目标，及时的分数反馈，和家人老师的奖励，有这么多条件去帮助自我成长。工作时，多数人只是为了每月的工资在做无聊的坚持，在否定自我和浪费时间中艰难地煎熬度过。我们需要找到创造幸福的方法、动力的源泉，实现持久的激励和幸福。吾心即宇宙，所有的力量源于内心，每天叫醒自己的事自己的梦想，疲累时让自己坚持的是对成功的渴望，迷茫时唤醒自己的是人生的终极目标。当然你们可以觉得这是在洗脑，如标题所写，当然我在胡扯。</p><p>沉浸在自我奖励的艰苦工作中：自我激励&gt;&gt;艰苦的工作&gt;&gt;内在奖励&gt;&gt;持久幸福</p><p>让现实更美好</p><ul><li><p>每一天都在渴望满意的工作</p></li><li><p>渴望体验成功，至少也是希望成功</p></li><li><p>渴望与社会建立联系</p></li><li><p>渴望过得有意义，渴望超越自身宏伟事业的一部分</p></li></ul><h2 id="改变世界"><a href="#改变世界" class="headerlink" title="改变世界"></a>改变世界</h2><p>那些疯狂到以为自己能够改变世界的人，才能真正改变世界。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;当然我在胡扯&quot;&gt;&lt;a href=&quot;#当然我在胡扯&quot; class=&quot;headerlink&quot; title=&quot;当然我在胡扯&quot;&gt;&lt;/a&gt;当然我在胡扯&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;对爱情的渴望，对知识的追求，对人类苦难不可遏制的同情心，这三种纯洁而无比强烈的激情</summary>
      
    
    
    
    <category term="read" scheme="https://wukong1024.github.io/categories/read/"/>
    
    
    <category term="read" scheme="https://wukong1024.github.io/tags/read/"/>
    
    <category term="随笔" scheme="https://wukong1024.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Windows Terminal</title>
    <link href="https://wukong1024.github.io/2020/06/06/Windows%20Terminal/"/>
    <id>https://wukong1024.github.io/2020/06/06/Windows%20Terminal/</id>
    <published>2020-06-06T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Windows-Terminal"><a href="#Windows-Terminal" class="headerlink" title="Windows Terminal"></a>Windows Terminal</h1><h2 id="启动路径配置"><a href="#启动路径配置" class="headerlink" title="启动路径配置"></a>启动路径配置</h2><p>在 Microsoft Store 安装 Windows Terminal、ubantu<br>打开配置文件，将用不到的环境设置 “hidden: true”, 增加新的环境。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;7882cb27-2b3b-4512-86ce-40b8bc6aff9c&#125;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;hidden&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;unen.xyz&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;commandline&quot;</span>: <span class="string">&quot;ssh root@47.112.162.128&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;icon&quot;</span>: <span class="string">&quot;C:\\icon\\ali.png&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="powershell-配置文件"><a href="#powershell-配置文件" class="headerlink" title="powershell 配置文件"></a>powershell 配置文件</h2><p>powershell 配置文件 <a class="link"   href="https://forsenergy.com/zh-cn/windowspowershellhelp/html/9c82251c-6f0d-416a-9c3c-77838218531b.htm" >参考<i class="fas fa-external-link-alt"></i></a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 显示路径</span></span><br><span class="line"><span class="meta">$</span><span class="bash">profile</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 判断是否存在配置文件 若不存在手动创建</span></span><br><span class="line">test-path $profile</span><br></pre></td></tr></table></figure><h3 id="python-wokon"><a href="#python-wokon" class="headerlink" title="python wokon"></a>python wokon</h3><p>启动 python 虚拟环境 <a class="link"   href="http://hk.uwenku.com/question/p-dnkemkwb-ew.html" >参考<i class="fas fa-external-link-alt"></i></a></p><p>workon 是批處理腳本。如果你從 PowerShell 運行它，它會在一個新的 CMD 子進程中啓動，在那裏做它的事情，然後退出並返回到 PowerShell 提示符。由於子進程無法修改其父進程，所以當您返回到 PowerShell 時，將丟失 workon.bat 所做的所有修改。</p><p>写入 Microsoft. PowerShell_profile.ps1</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">workon</span><span class="params">(<span class="variable">$environment</span>)</span></span> &#123;</span><br><span class="line">    &amp; cmd /k workon.bat <span class="variable">$environment</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="免密登录-ssh"><a href="#免密登录-ssh" class="headerlink" title="免密登录 ssh"></a>免密登录 ssh</h2><p>服务器、主机分别生成公钥、私钥对 <code>ssh-keygen</code><br>将主机的公钥 <code>id_rsa.pub</code> 发送到服务器，<br>在服务器 <code>.ssh/</code> 文件夹下执行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">touch authorized_keys</span><br><span class="line">chmod <span class="number">600</span> authorized_keys</span><br><span class="line"><span class="built_in">cat</span> id_rsa.pub &gt;&gt; authorized_keys</span><br></pre></td></tr></table></figure><p>测试是否实现免密登录 <code>ssh root@xx.xxx.xxx.xxx</code></p><h2 id="树莓派"><a href="#树莓派" class="headerlink" title="树莓派"></a>树莓派</h2><p>开启 frp 参考<a class="link"   href="https://www.jianshu.com/p/00c79df1aaf0" >教程<i class="fas fa-external-link-alt"></i></a><br>启动命令 <code>./frpc -c ./frpc.ini</code><br>宝塔<a class="link"   href="https://www.bilibili.com/video/BV1kE411C7hz" >教程<i class="fas fa-external-link-alt"></i></a><br>开启宝塔 <code>sudo ./bt_run</code> 关闭宝塔 <code>./bt_prog kill</code> 端口:28888<br>开启 samba<a class="link"   href="https://tlanyan.me/setup-samba-in-raspberry-pi/" >教程<i class="fas fa-external-link-alt"></i></a><br>挂载 U 盘<a class="link"   href="https://zhuanlan.zhihu.com/p/35061575" >教程<i class="fas fa-external-link-alt"></i></a><br>有线替换 Wifi <code>取消路由器中PI ip和MAC的绑定、路由器禁用PI wifi、重启路由器有线连接PI、手动绑定ip和MAC</code><br>关闭灯、wifi<a class="link"   href="https://zhuanlan.zhihu.com/p/138038622" >link<i class="fas fa-external-link-alt"></i></a></p><h3 id="默认管理员模式启动"><a href="#默认管理员模式启动" class="headerlink" title="默认管理员模式启动"></a>默认管理员模式启动</h3><p>新建快捷方式：目标改为 C:\Windows\System32\cmd.exe /c start /b wt<br>修改备注和图标后 加入 path 设为 t</p>]]></content>
    
    
    <summary type="html">Win10优化设置</summary>
    
    
    
    <category term="windows" scheme="https://wukong1024.github.io/categories/windows/"/>
    
    
    <category term="learn" scheme="https://wukong1024.github.io/tags/learn/"/>
    
    <category term="note" scheme="https://wukong1024.github.io/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>游戏改变世界</title>
    <link href="https://wukong1024.github.io/2020/05/21/%E6%B8%B8%E6%88%8F%E6%94%B9%E5%8F%98%E4%B8%96%E7%95%8C/"/>
    <id>https://wukong1024.github.io/2020/05/21/%E6%B8%B8%E6%88%8F%E6%94%B9%E5%8F%98%E4%B8%96%E7%95%8C/</id>
    <published>2020-05-21T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="游戏改变世界"><a href="#游戏改变世界" class="headerlink" title="游戏改变世界"></a>游戏改变世界</h1><p>启示<br>及时反馈<br>不可预测<br>强社交性<br>一个成功的游戏就应该是有着文化内涵的，让人在游戏之外还能去讨论它。</p><p>现实已经破碎，我们需要用创造游戏来修复它。</p><p>协作的机制从强制变成自由<br>劳动的动机从自制变成游戏</p><p>我们真正害怕的不是游戏，而是在游戏结束、现实开始时迷失了方向。</p><p>抛开类型的差异和复杂的技术，所有的游戏都有 4 个决定性特征：目标、规则、反馈系统和自愿参与。<br>目标（goal），指的是玩家努力达成的具体结果。它吸引了玩家的注意力，不断调整他们的参与度。目标为玩家提供了“目的性”（sense of purpose）。<br>规则（rules），为玩家如何实现目标做出限制。它消除或限制了达成目标最明显的方式，推动玩家去探索此前未知的可能空间。规则可以释放玩家的创造力，培养玩家的策略性思维。<br>反馈系统（feedback system），告诉玩家距离实现目标还有多远。它通过点数、级别、得分、进度条等形式来反映。反馈系统最基本也最简单的形式，就是让玩家认识到一个客观结果：“等……的时候，游戏就结束了。”对玩家而言，实时反馈是一种承诺：目标绝对是可以达到的，它给了人们继续玩下去的动力。<br>自愿参与（voluntary participation），要求所有玩游戏的人都了解并愿意接受目标、规则和反馈。了解是建立多人游戏的共同基础。任意参与和离去的自由，则是为了保证玩家把游戏中蓄意设计的高压挑战工作视为安全且愉快的活动。</p><p>目标指的是玩家努力达成的具体结果；规则为玩家如何实现目标做出限制；反馈系统告诉玩家距离实现目标还有多远；自愿参与则要求所有玩家都了解并愿意接受目标、规则和反馈。</p><p>俄罗斯方块堆叠起来，就能得到三种反馈：</p><ul><li>一是视觉上的，你看到一排又一排的方块“噗噗”地消失；</li><li>二是数量上的，屏幕上的分数不断上涨；</li><li>三是性质上的，你感受到了持续上升的挑战性。</li></ul><p>心流(flow)：一旦进入心流状态，人们就像长久地停在那里，不管是放弃还是获胜，两种结果都同样无法让你心满意足。</p><p>有尽头的游戏：为了获胜而玩<br>无尽头的游戏：为了尽量长时间玩而玩</p><p>所有优秀的游戏都是艰苦的工作，是我们主动选择并乐在其中的工作。<br>创造性的成就和能力的提高带来的满足感和愉快感</p><p>游戏的七大艰苦之乐<br>高风险工作<br>重复工作<br>脑力工作<br>体力工作<br>探索性工作<br>团队工作<br>创造性工作</p><p>诱发心流  ：有明确目标行为方式或有既定规则，随着时间的推移难度和技能水平也提高的挑战性活动</p><p>创造幸福的力量<br>追求外在的奖励（金钱、物质、地位、赞许），注定会妨碍我们达成自身的幸福。<br>沉浸在自我奖励的艰苦工作中：自我激励&gt;&gt;艰苦的工作&gt;&gt;内在奖励&gt;&gt;持久幸福</p><p>让现实更美好<br>每一天都在渴望满意的工作<br>渴望体验成功，至少也是希望成功<br>渴望与社会建立联系<br>渴望过得有意义，渴望超越自身宏伟事业的一部分</p><p>我们真正需要的，是游戏能够超越让人短暂幸福的心流和自豪，提供一种更为持久的情感奖励；我们真正需要的，是哪怕不玩的时候仍能让我们幸福的游戏。只有这样，才能在游戏和现实生活中实现恰当的平衡。</p><p>成功的希望比成功本身更刺激</p><p>胜利往往终结乐趣，但失败能维持乐趣</p><p>向死而生，创伤后的幸福感</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;游戏改变世界&quot;&gt;&lt;a href=&quot;#游戏改变世界&quot; class=&quot;headerlink&quot; title=&quot;游戏改变世界&quot;&gt;&lt;/a&gt;游戏改变世界&lt;/h1&gt;&lt;p&gt;启示&lt;br&gt;及时反馈&lt;br&gt;不可预测&lt;br&gt;强社交性&lt;br&gt;一个成功的游戏就应该是有着文化内涵的，让人在游戏</summary>
      
    
    
    
    <category term="read" scheme="https://wukong1024.github.io/categories/read/"/>
    
    
    <category term="read" scheme="https://wukong1024.github.io/tags/read/"/>
    
    <category term="笔记" scheme="https://wukong1024.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Vue手册</title>
    <link href="https://wukong1024.github.io/2020/03/10/Vue%E6%89%8B%E5%86%8C/"/>
    <id>https://wukong1024.github.io/2020/03/10/Vue%E6%89%8B%E5%86%8C/</id>
    <published>2020-03-10T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue手册"><a href="#Vue手册" class="headerlink" title="Vue手册"></a>Vue手册</h1><p>[TOC]</p><h2 id="Vue实例"><a href="#Vue实例" class="headerlink" title="Vue实例"></a>Vue实例</h2><h3 id="关联数据和DOM"><a href="#关联数据和DOM" class="headerlink" title="关联数据和DOM"></a>关联数据和DOM</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; message &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;Hello Vue!&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="渲染绑定元素"><a href="#渲染绑定元素" class="headerlink" title="渲染绑定元素"></a>渲染绑定元素</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line">        鼠标悬停几秒钟查看此处动态绑定的提示信息！</span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> app2 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">            <span class="attr">el</span>: <span class="string">&#x27;#app-2&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line">                <span class="attr">message</span>: <span class="string">&#x27;页面加载于 &#x27;</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="if条件"><a href="#if条件" class="headerlink" title="if条件"></a>if条件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;seen&quot;</span>&gt;</span>现在你看到我了<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> app3 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app-3&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">seen</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;todo in todos&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123; todo.text &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> app4 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app-4&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">todos</span>: [&#123;</span><br><span class="line">                <span class="attr">text</span>: <span class="string">&#x27;学习 JavaScript&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">text</span>: <span class="string">&#x27;学习 Vue&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">text</span>: <span class="string">&#x27;整个牛项目&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="v-on事件监听"><a href="#v-on事件监听" class="headerlink" title="v-on事件监听"></a>v-on事件监听</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-5&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;reverseMessage&quot;</span>&gt;</span>反转消息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> app5 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app-5&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;Hello Vue.js!&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="attr">reverseMessage</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.message = <span class="built_in">this</span>.message.split(<span class="string">&#x27;&#x27;</span>).reverse().join(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="v-model双向绑定"><a href="#v-model双向绑定" class="headerlink" title="v-model双向绑定"></a>v-model双向绑定</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-6&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> app6 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app-6&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;Hello Vue!&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="freeze冻结-阻止修改"><a href="#freeze冻结-阻止修改" class="headerlink" title="freeze冻结 阻止修改"></a>freeze冻结 阻止修改</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; foo &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这里的 `foo` 不会更新！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;foo = &#x27;baz&#x27;&quot;</span>&gt;</span>Change it<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">foo</span>: <span class="string">&#x27;bar&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.freeze(obj)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: obj</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="vue生命周期"><a href="#vue生命周期" class="headerlink" title="vue生命周期"></a>vue生命周期</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">a</span>: <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">created</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// `this` 指向 vm 实例</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;a is: &#x27;</span> + <span class="built_in">this</span>.a)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// =&gt; &quot;a is: 1&quot;</span></span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cn.vuejs.org/images/lifecycle.png"                      alt="vue生命周期"                ></p><h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2><h3 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  v-once当数据改变时，插值处的内容不会更新 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-once</span>&gt;</span>这个将不会改变: &#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="原始-HTML"><a href="#原始-HTML" class="headerlink" title="原始 HTML"></a>原始 HTML</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 容易导致 XSS 攻击 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Using mustaches: &#123;&#123; rawHtml &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Using v-html directive: <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">&quot;rawHtml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Attribute"><a href="#Attribute" class="headerlink" title="Attribute"></a>Attribute</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">&quot;dynamicId&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  null、undefined 、false --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-bind:disabled</span>=<span class="string">&quot;isButtonDisabled&quot;</span>&gt;</span>Button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用-JavaScript-表达式"><a href="#使用-JavaScript-表达式" class="headerlink" title="使用 JavaScript 表达式"></a>使用 JavaScript 表达式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据作用域下作为 JavaScript 被解析，只能单个表达式 --&gt;</span></span><br><span class="line">&#123;&#123; number + 1 &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123; ok ? &#x27;YES&#x27; : &#x27;NO&#x27; &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123; message.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;) &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">&quot;&#x27;list-&#x27; + id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>只能访问全局变量白名单，不能访问用户自定义全局变量</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (process.env.NODE_ENV !== <span class="string">&#x27;production&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> allowedGlobals = makeMap(</span><br><span class="line">        <span class="string">&#x27;Infinity,undefined,NaN,isFinite,isNaN,&#x27;</span></span><br><span class="line">        <span class="string">&#x27;parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,&#x27;</span></span><br><span class="line">        <span class="string">&#x27;Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,&#x27;</span></span><br><span class="line">        <span class="string">&#x27;require&#x27;</span> <span class="comment">// for Webpack/Browserify</span></span><br><span class="line">    )</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- v-bind 响应式更新HTML attribute --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- v-on 监听DOM事件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click</span>=<span class="string">&quot;doSomething&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="动态参数"><a href="#动态参数" class="headerlink" title="动态参数"></a>动态参数</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:</span>[<span class="attr">attributeName</span>]=<span class="string">&quot;url&quot;</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 避免使用大写字符来命名键名，因为浏览器会把 attribute 名全部强制转为小写 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- eventName 改为 eventname --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:</span>[<span class="attr">eventName</span>]=<span class="string">&quot;doSomething&quot;</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指明的特殊后缀 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit.prevent</span>=<span class="string">&quot;onSubmit&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="计算属性和侦听器"><a href="#计算属性和侦听器" class="headerlink" title="计算属性和侦听器"></a>计算属性和侦听器</h2><h3 id="computed-计算"><a href="#computed-计算" class="headerlink" title="computed 计算"></a>computed 计算</h3><p>计算属性具有缓存, 用于获取返回值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;example&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Original message: &quot;&#123;&#123; message &#125;&#125;&quot;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Computed reversed message: &quot;&#123;&#123; reversedMessage &#125;&#125;&quot;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#example&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;Hello&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">computed</span>: &#123;</span><br><span class="line">        <span class="comment">// 计算属性的 getter</span></span><br><span class="line">        <span class="attr">reversedMessage</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// `this` 指向 vm 实例</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.message.split(<span class="string">&#x27;&#x27;</span>).reverse().join(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="watch-侦听"><a href="#watch-侦听" class="headerlink" title="watch 侦听"></a>watch 侦听</h3><p>监听特定值得前后变化, 用于执行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="attr">watch</span>: &#123;</span><br><span class="line">    <span class="attr">status</span>: <span class="function"><span class="keyword">function</span>(<span class="params">value, oldValue</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.status = value</span><br><span class="line">        <span class="built_in">this</span>.page = <span class="number">1</span></span><br><span class="line">        <span class="built_in">this</span>.getData(<span class="number">1</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="Class-与-Style-绑定"><a href="#Class-与-Style-绑定" class="headerlink" title="Class 与 Style 绑定"></a>Class 与 Style 绑定</h2><h3 id="class对象语法"><a href="#class对象语法" class="headerlink" title="class对象语法"></a>class对象语法</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;static&quot;</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123; active: isActive, &#x27;text-danger&#x27;: hasError &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">isActive</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">hasError</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="style内联样式"><a href="#style内联样式" class="headerlink" title="style内联样式"></a>style内联样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;styleObject&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;[baseStyles, overridingStyles]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">    <span class="attr">styleObject</span>: &#123;</span><br><span class="line">        <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span>,</span><br><span class="line">        <span class="attr">fontSize</span>: <span class="string">&#x27;13px&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h2><h3 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h3><p>v-else-if</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;A&#x27;&quot;</span>&gt;</span></span><br><span class="line">    A</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;B&#x27;&quot;</span>&gt;</span></span><br><span class="line">    B</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;C&#x27;&quot;</span>&gt;</span></span><br><span class="line">    C</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">    Not A/B/C</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>独立，不复用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;loginType === &#x27;username&#x27;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter your username&quot;</span> <span class="attr">key</span>=<span class="string">&quot;username-input&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter your email address&quot;</span> <span class="attr">key</span>=<span class="string">&quot;email-input&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h3><p>数组</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;example-2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in items&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123; parentMessage &#125;&#125; - &#123;&#123; index &#125;&#125; - &#123;&#123; item.message &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> example2 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#example-2&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">parentMessage</span>: <span class="string">&#x27;Parent&#x27;</span>,</span><br><span class="line">        <span class="attr">items</span>: [&#123;</span><br><span class="line">                <span class="attr">message</span>: <span class="string">&#x27;Foo&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">message</span>: <span class="string">&#x27;Bar&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>对象</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;v-for-object&quot;</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value, name,index) in object&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;index&#125;&#125;.&#123;&#123; name &#125;&#125;: &#123;&#123; value &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#v-for-object&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">object</span>: &#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;How to do lists in Vue&#x27;</span>,</span><br><span class="line">            <span class="attr">author</span>: <span class="string">&#x27;Jane Doe&#x27;</span>,</span><br><span class="line">            <span class="attr">publishedAt</span>: <span class="string">&#x27;2016-04-10&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="数组更新检测"><a href="#数组更新检测" class="headerlink" title="数组更新检测"></a>数组更新检测</h4><p>变异方法</p><ul><li>push()向数组的末尾添加一个或多个元素，并返回新的长度</li><li>pop()删除并返回数组的最后一个元素。</li><li>shift()把数组的第一个元素从其中删除，并返回第一个元素的值</li><li>unshift()向数组的开头添加一个或更多元素，并返回新的长度。</li><li>splice()向/从数组中添加/删除项目，然后返回被删除的项目</li><li>sort()对数组的元素进行排序。</li><li>reverse()颠倒数组中元素的顺序。</li></ul><p>替换数组</p><ul><li>filter() 创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。</li><li>concat() 用于连接两个或多个数组。</li><li>slice() 可从已有的数组中返回选定的元素。</li></ul><h2 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h2><h3 id="监听事件"><a href="#监听事件" class="headerlink" title="监听事件"></a>监听事件</h3><p>v-on 监听DOM事件，运行js代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;example-1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;counter += 1&quot;</span>&gt;</span>Add 1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>The button above has been clicked &#123;&#123; counter &#125;&#125; times.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> example1 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#example-1&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">counter</span>: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="事件处理方法"><a href="#事件处理方法" class="headerlink" title="事件处理方法"></a>事件处理方法</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;example-3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;say(&#x27;hi&#x27;)&quot;</span>&gt;</span>Say hi<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;say(&#x27;what&#x27;)&quot;</span>&gt;</span>Say what<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#example-3&#x27;</span>,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="attr">say</span>: <span class="function"><span class="keyword">function</span>(<span class="params">message</span>) </span>&#123;</span><br><span class="line">            alert(message)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 阻止单击事件继续传播 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click.stop</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 提交事件不再重载页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit.prevent</span>=<span class="string">&quot;onSubmit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 修饰符可以串联 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click.stop.prevent</span>=<span class="string">&quot;doThat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 只有修饰符 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit.prevent</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 添加事件监听器时使用事件捕获模式 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 即内部元素触发的事件先在此处理，然后才交由内部元素进行处理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-on:click.capture</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 只当在 event.target 是当前元素自身时触发处理函数 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 即事件不是从内部元素触发的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-on:click.self</span>=<span class="string">&quot;doThat&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 点击事件将只会触发一次 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click.once</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 滚动事件的默认行为 (即滚动行为) 将会立即触发 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 而不会等待 `onScroll` 完成  --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这其中包含 `event.preventDefault()` 的情况 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-on:scroll.passive</span>=<span class="string">&quot;onScroll&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="按键修饰符"><a href="#按键修饰符" class="headerlink" title="按键修饰符"></a>按键修饰符</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 只有在 `key` 是 `Enter` 时调用 `vm.submit()` --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-on:keyup.enter</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表单输入绑定"><a href="#表单输入绑定" class="headerlink" title="表单输入绑定"></a>表单输入绑定</h2><h3 id="文本-1"><a href="#文本-1" class="headerlink" title="文本"></a>文本</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Multiline message is:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;white-space: pre-line;&quot;</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;add multiple lines&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;example-3&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Jack&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;jack&quot;</span>&gt;</span>Jack<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;John&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;john&quot;</span>&gt;</span>John<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Mike&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;mike&quot;</span>&gt;</span>Mike<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>Checked names: &#123;&#123; checkedNames &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#example-3&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">checkedNames</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="单选按钮"><a href="#单选按钮" class="headerlink" title="单选按钮"></a>单选按钮</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;example-4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;One&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;picked&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;one&quot;</span>&gt;</span>One<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Two&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;picked&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;two&quot;</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>Picked: &#123;&#123; picked &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#example-4&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">picked</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="选择框"><a href="#选择框" class="headerlink" title="选择框"></a>选择框</h3><p>单选</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 多选时select中增加 `multiple` ,data中的selected改为数组 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;selected&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">v-for</span>=<span class="string">&quot;option in options&quot;</span> <span class="attr">v-bind:value</span>=<span class="string">&quot;option.value&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123; option.text &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Selected: &#123;&#123; selected &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;...&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">selected</span>: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        <span class="attr">options</span>: [&#123;</span><br><span class="line">                <span class="attr">text</span>: <span class="string">&#x27;One&#x27;</span>,</span><br><span class="line">                <span class="attr">value</span>: <span class="string">&#x27;A&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">text</span>: <span class="string">&#x27;Two&#x27;</span>,</span><br><span class="line">                <span class="attr">value</span>: <span class="string">&#x27;B&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">text</span>: <span class="string">&#x27;Three&#x27;</span>,</span><br><span class="line">                <span class="attr">value</span>: <span class="string">&#x27;C&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="修饰符-1"><a href="#修饰符-1" class="headerlink" title="修饰符"></a>修饰符</h3><h4 id="lazy"><a href="#lazy" class="headerlink" title=".lazy"></a>.lazy</h4><p>在默认情况下，v-model 在每次 input 事件触发后将输入框的值与数据进行同步 (除了上述输入法组合文字时)。你可以添加 lazy 修饰符，从而转变为使用 change 事件进行同步：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在“change”时而非“input”时更新 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model.lazy</span>=<span class="string">&quot;msg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="number"><a href="#number" class="headerlink" title=".number"></a>.number</h4><p>如果想自动将用户的输入值转为数值类型，可以给 v-model 添加 number 修饰符：<br>这通常很有用，因为即使在 type=”number” 时，HTML 输入元素的值也总会返回字符串。如果这个值无法被 parseFloat() 解析，则会返回原始的值。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model.number</span>=<span class="string">&quot;age&quot;</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="trim"><a href="#trim" class="headerlink" title=".trim"></a>.trim</h4><p>如果要自动过滤用户输入的首尾空白字符，可以给 v-model 添加 trim 修饰符：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model.trim</span>=<span class="string">&quot;msg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="组件注册"><a href="#组件注册" class="headerlink" title="组件注册"></a>组件注册</h2><p>通过 Vue.component 全局注册，名称使用 kebab-case样式<br><strong>一个组件的 data 选项必须是一个函数</strong>，因此每个实例可以维护一份被返回对象的独立的拷贝</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;components-demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button-counter</span>&gt;</span><span class="tag">&lt;/<span class="name">button-counter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button-counter</span>&gt;</span><span class="tag">&lt;/<span class="name">button-counter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button-counter</span>&gt;</span><span class="tag">&lt;/<span class="name">button-counter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="comment">// 定义一个名为 button-counter 的新组件</span></span><br><span class="line">Vue.component(<span class="string">&#x27;button-counter&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">data</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">count</span>: <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">template</span>: <span class="string">&#x27;&lt;button v-on:click=&quot;count++&quot;&gt;You clicked me &#123;&#123; count &#125;&#125; times.&lt;/button&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="传递数据到子组件"><a href="#传递数据到子组件" class="headerlink" title="传递数据到子组件"></a>传递数据到子组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blog-post</span> <span class="attr">post-title</span>=<span class="string">&quot;My journey with Vue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">blog-post</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blog-post</span> <span class="attr">post-title</span>=<span class="string">&quot;Blogging with Vue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">blog-post</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blog-post</span> <span class="attr">post-title</span>=<span class="string">&quot;Why Vue is so fun&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">blog-post</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">blog-post</span> <span class="attr">v-for</span>=<span class="string">&quot;post in posts&quot;</span> <span class="attr">v-bind:key</span>=<span class="string">&quot;post.id&quot;</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;post.title&quot;</span> <span class="attr">v-bind:content</span>=<span class="string">&quot;post.content&quot;</span> <span class="attr">v-bind:publishedAt</span>=<span class="string">&quot;post.publishedAt&quot;</span> <span class="attr">v-bind:comments</span>=<span class="string">&quot;post.comments&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">blog-post</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// props 选项将其包含在该组件可接受的 prop 列表中</span></span><br><span class="line">Vue.component(<span class="string">&#x27;blog-post&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">props</span>: [<span class="string">&#x27;post-title&#x27;</span>],</span><br><span class="line">    <span class="attr">template</span>: <span class="string">&#x27;&lt;h3&gt;&#123;&#123; title &#125;&#125;&lt;/h3&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="动态组件"><a href="#动态组件" class="headerlink" title="动态组件"></a>动态组件</h3><p>在不同组件之间进行动态切换</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 组件会在 `currentTabComponent` 改变时改变 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">component</span> <span class="attr">v-bind:is</span>=<span class="string">&quot;currentTabComponent&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br></pre></td></tr></table></figure><p>特殊渲染</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;ul&gt;、&lt;ol&gt;、&lt;table&gt; 和 &lt;select&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">is</span>=<span class="string">&quot;blog-post-row&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="局部注册"><a href="#局部注册" class="headerlink" title="局部注册"></a>局部注册</h3><p>外部构建后  导入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">import</span> BaseButton <span class="keyword">from</span> <span class="string">&#x27;./BaseButton.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> BaseIcon <span class="keyword">from</span> <span class="string">&#x27;./BaseIcon.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> BaseInput <span class="keyword">from</span> <span class="string">&#x27;./BaseInput.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">components</span>: &#123;</span><br><span class="line">        <span class="string">&quot;base-button&quot;</span>: BaseButton,</span><br><span class="line">        <span class="string">&quot;base-icon&quot;</span>: BaseIcon,</span><br><span class="line">        <span class="string">&quot;base-input&quot;</span>: BaseInput</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Prop"><a href="#Prop" class="headerlink" title="Prop"></a>Prop</h2><h3 id="传递静态或动态-Prop"><a href="#传递静态或动态-Prop" class="headerlink" title="传递静态或动态 Prop"></a>传递静态或动态 Prop</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;blog-post title=&quot;My journey with Vue&quot;&gt;&lt;/blog-post&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 尽可能使用v-bind --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 动态赋予一个变量的值 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blog-post</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;post.title&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">blog-post</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 动态赋予一个复杂表达式的值 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blog-post</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;post.title + &#x27; by &#x27; + post.author.name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">blog-post</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Prop-验证"><a href="#Prop-验证" class="headerlink" title="Prop 验证"></a>Prop 验证</h3><p>控制台的警告, 方便他人调用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line">Vue.component(<span class="string">&#x27;my-component&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">props</span>: &#123;</span><br><span class="line">        <span class="comment">// 基础的类型检查 ( `null` 和 `undefined` 会通过任何类型验证)</span></span><br><span class="line">        <span class="attr">propA</span>: <span class="built_in">Number</span>,</span><br><span class="line">        <span class="comment">// 多个可能的类型</span></span><br><span class="line">        <span class="attr">propB</span>: [<span class="built_in">String</span>, <span class="built_in">Number</span>],</span><br><span class="line">        <span class="comment">// 必填的字符串</span></span><br><span class="line">        <span class="attr">propC</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="built_in">String</span>,</span><br><span class="line">            <span class="attr">required</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 带有默认值的数字</span></span><br><span class="line">        <span class="attr">propD</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="built_in">Number</span>,</span><br><span class="line">            <span class="attr">default</span>: <span class="number">100</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 带有默认值的对象</span></span><br><span class="line">        <span class="attr">propE</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="built_in">Object</span>,</span><br><span class="line">            <span class="comment">// 对象或数组默认值必须从一个工厂函数获取</span></span><br><span class="line">            <span class="attr">default</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    <span class="attr">message</span>: <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 自定义验证函数</span></span><br><span class="line">        <span class="attr">propF</span>: &#123;</span><br><span class="line">            <span class="attr">validator</span>: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 这个值必须匹配下列字符串中的一个</span></span><br><span class="line">                <span class="keyword">return</span> [<span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;warning&#x27;</span>, <span class="string">&#x27;danger&#x27;</span>].indexOf(value) !== -<span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>type 类型</p><ul><li>String</li><li>Number</li><li>Boolean</li><li>Array</li><li>Object</li><li>Date</li><li>Function</li><li>Symbol</li></ul><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><p>常用于文本预处理</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在双花括号中 --&gt;</span></span><br><span class="line">&#123;&#123; message | capitalize &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 在 `v-bind` 中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">&quot;rawId | formatId&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 串联 --&gt;</span></span><br><span class="line">&#123;&#123; message | filterA | filterB &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 传参 --&gt;</span></span><br><span class="line">&#123;&#123; message | filterA(&#x27;arg1&#x27;, arg2) &#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="attr">filters</span>: &#123;</span><br><span class="line">    <span class="attr">capitalize</span>: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!value) <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        value = value.toString()</span><br><span class="line">        <span class="keyword">return</span> value.charAt(<span class="number">0</span>).toUpperCase() + value.slice(<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局过滤器</span></span><br><span class="line">Vue.filter(<span class="string">&#x27;capitalize&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!value) <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    value = value.toString()</span><br><span class="line">    <span class="keyword">return</span> value.charAt(<span class="number">0</span>).toUpperCase() + value.slice(<span class="number">1</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Vue开发手册</summary>
    
    
    
    <category term="code" scheme="https://wukong1024.github.io/categories/code/"/>
    
    
    <category term="learn" scheme="https://wukong1024.github.io/tags/learn/"/>
    
    <category term="code" scheme="https://wukong1024.github.io/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>简单思考</title>
    <link href="https://wukong1024.github.io/2020/02/24/%E7%AE%80%E5%8D%95%E6%80%9D%E8%80%83/"/>
    <id>https://wukong1024.github.io/2020/02/24/%E7%AE%80%E5%8D%95%E6%80%9D%E8%80%83/</id>
    <published>2020-02-24T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简单思考"><a href="#简单思考" class="headerlink" title="简单思考"></a>简单思考</h1><p>一、经商不是打仗</p><ol><li>热情才是成功的条件，怀着使命感为用户尽心尽力</li><li>商业的简单本质是什么——由用户和商家构成的生态系统</li><li>经商不是打仗——不盯对手，只盯用户</li><li>经营不是管理——自由是技术创新之源</li><li>思考问题不以金钱为中心——专注于创造价值</li><li>人是公司的一切——厉害的角色引来厉害的角色</li></ol><p>二、依靠自己感性的生活</p><ol start="7"><li>工作要自己争取——把想做的事情当成工作</li><li>不追求金钱和名誉——总是置身于能实际感受到成长的场所</li><li>工作辛劳是理所应当的——知道取得成果时的幸福，这才是职业人</li><li>依自己的感性生活——不迎合公司和上司</li><li>不察言观色——害怕客户而非职场上的批评</li><li>不当专家——不做偏离本质的努力</li><li>从一无所有中锻炼——正因为资源不足人才要思考</li><li>深思熟虑直至握有确信——深思熟虑后的失败是成功之母</li><li>享受不安——未来不确定，所以有无限的可能性</li></ol><p>三、不断舍弃成功</p><ol start="16"><li>不让公司变成动物园——建设一个出成果者得回报的公司</li><li>不断舍弃成功——提高自身市场价值的唯一方法</li><li>坦率地说话——含蓄的表述会损害工作</li><li>越是优秀的人越不会吵架——拘泥于胜负者成不了事</li><li>人事评估简单是最好的——越复杂不满情绪越高涨</li><li>公司不是学校——培养员工的自主性绝无可能</li><li>不提升士气——缺乏干劲的人没资格做职场中人</li></ol><p>四、不需要大人物</p><ol start="23"><li>不需要大人物——真正领导者用自己的梦想推动人</li><li>不需要统一管理——现场员工才是最高决策者</li><li>商业不需要人情——不营造骄纵的结构</li><li>不把经营理念书面化——徒增形式的理念将摧毁公司</li><li>不需要构想——预期判断未来 不如专注于眼前的事</li><li>不简单的不是战略——难以理解的信息会扰乱工作市场</li><li>守则不能改——做好心理准备，抛弃过去的成功</li></ol><p>五、 精简一切多余的工作</p><ol start="30"><li>不需要计划——计划导致应变能力下降</li><li>不需要事务员——不分计划者和实行者</li><li>靠机制无法成功——操作手册会破坏创造性</li><li>不需要规划——丢弃一切阻碍速度的东西</li><li>不开会议——排除增加会议的人</li><li>不需要信息共享——多余的信息指挥带来多余的思考</li></ol><p>六、不追求创新</p><ol start="36"><li>不以差异化为目标——用户不追求差别只追求价值</li><li>不追求创新——始终耿直地回应当下的需求</li><li>实现 质量*速度的最大化——抛弃制造方的自我满足</li><li>设计主导一切——最优考虑用户的使用便利性</li><li>用户不会告诉我们答案——深挖用户的声音，靠我们自己的头脑思考</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;简单思考&quot;&gt;&lt;a href=&quot;#简单思考&quot; class=&quot;headerlink&quot; title=&quot;简单思考&quot;&gt;&lt;/a&gt;简单思考&lt;/h1&gt;&lt;p&gt;一、经商不是打仗&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;热情才是成功的条件，怀着使命感为用户尽心尽力&lt;/li&gt;
&lt;li&gt;商业的简单本质是</summary>
      
    
    
    
    <category term="read" scheme="https://wukong1024.github.io/categories/read/"/>
    
    
    <category term="read" scheme="https://wukong1024.github.io/tags/read/"/>
    
    <category term="笔记" scheme="https://wukong1024.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Win10</title>
    <link href="https://wukong1024.github.io/2020/01/01/Win10/"/>
    <id>https://wukong1024.github.io/2020/01/01/Win10/</id>
    <published>2020-01-01T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Win10"><a href="#Win10" class="headerlink" title="Win10"></a>Win10</h1><p>文件报毒，关闭Windows自带安全中心<a class="link"   href="https://www.bilibili.com/video/av91158542" >教程<i class="fas fa-external-link-alt"></i></a> </p><p>右键无法新建TXT文档的问题解决<a class="link"   href="https://www.xp.cn/b.php/5753.html" >教程<i class="fas fa-external-link-alt"></i></a></p><p>蓝屏 事件 17 （计算机管理&gt;事件查看器&gt;Windows日志&gt;系统&gt;）</p><p>事件17禁用8086DEV_A33C<br>下载炫龙芯片组驱动</p><p>事件10016 注册表权限</p><p>修复  <a class="link"   href="https://bbs.kafan.cn/thread-2188450-1-1.html" >教程<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://www.xinyucn.cc/2020/05/zhong_ji_jie_jue_win10_lan_pin.html" >教程<i class="fas fa-external-link-alt"></i></a></p><p>关闭PCI省电 控制面板》电源选项》当前电源计划》更改计划设置》更改高级电源设置》PCI Ex’p’ress》链路状态电源管理》全关闭</p><p>蓝屏   事件 10016 <a class="link"   href="https://blog.csdn.net/i_myxxx/article/details/87886217" >教程<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
    <summary type="html">Win10优化设置</summary>
    
    
    
    <category term="note" scheme="https://wukong1024.github.io/categories/note/"/>
    
    
    <category term="learn" scheme="https://wukong1024.github.io/tags/learn/"/>
    
    <category term="note" scheme="https://wukong1024.github.io/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>小程序_云开发</title>
    <link href="https://wukong1024.github.io/2019/12/28/%E5%B0%8F%E7%A8%8B%E5%BA%8F_%E4%BA%91%E5%BC%80%E5%8F%91/"/>
    <id>https://wukong1024.github.io/2019/12/28/%E5%B0%8F%E7%A8%8B%E5%BA%8F_%E4%BA%91%E5%BC%80%E5%8F%91/</id>
    <published>2019-12-28T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h1><blockquote><p>应用将无处不在，随时可用，但又无需安装卸载</p></blockquote><p>[TOC]</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>优点</p><ul><li>速度快</li><li>无需适配</li><li>社交分享</li><li>出色体验</li><li>用完即走，随手可得</li><li>低门槛</li></ul><p>设计规范</p><ul><li>友好：重点突出，流程明确</li><li>清晰：导航明确，减少等待，异常反馈</li><li>便捷：减少输入，避免误操作，操作流畅</li></ul><h2 id="代码笔记"><a href="#代码笔记" class="headerlink" title="代码笔记"></a>代码笔记</h2><p>传递自定义数据属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父html</span></span><br><span class="line">bindtap=<span class="string">&#x27;f1&#x27;</span> data-user-name=<span class="string">&#x27;balabala&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 父js</span></span><br><span class="line"><span class="keyword">var</span> userName = e.currentTarget.dataset.userName</span><br><span class="line">wx.navigateTo(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;url?username=&#x27;</span>+userName</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子js</span></span><br><span class="line"><span class="attr">onload</span>:<span class="function"><span class="keyword">function</span>(<span class="params">options</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> username=options.username</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>界面加载</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 默认加载第一个路径</span></span><br><span class="line"><span class="string">&quot;pages&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;pages/start/start&quot;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>rpx相对长度单位</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iPhone6 屏宽 750rpx  1px=2rpx</span><br></pre></td></tr></table></figure><p>弹性盒子</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">display</span>:flex;</span><br><span class="line"><span class="attribute">flex-direction</span>:column;</span><br><span class="line"><span class="attribute">justify-content</span>:space-around;</span><br><span class="line"><span class="attribute">align-items</span>:center;</span><br></pre></td></tr></table></figure><h2 id="云开发简介"><a href="#云开发简介" class="headerlink" title="云开发简介"></a>云开发简介</h2><p>Tencent Cloud Base(TCB) 一站式后端云服务</p><p>编程基础：HTML,CSS,Js,Node.js,MongoDB</p><h3 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h3><p>在miniprogram下打开终端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br><span class="line">npm i vant-weapp -S --production</span><br><span class="line">npm i wx-server-sdk -S</span><br><span class="line"></span><br><span class="line">“详情”中勾选 npm 模块</span><br><span class="line">“工具”中选择 构建npm</span><br><span class="line"></span><br><span class="line">json中增加</span><br><span class="line">&#123;</span><br><span class="line">    &quot;usingComponents&quot;:&#123;</span><br><span class="line">        &quot;van-button&quot;: &quot;vant-weapp/button&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">小程序云开发基础</summary>
    
    
    
    <category term="code" scheme="https://wukong1024.github.io/categories/code/"/>
    
    
    <category term="learn" scheme="https://wukong1024.github.io/tags/learn/"/>
    
    <category term="code" scheme="https://wukong1024.github.io/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>罗素-我为什么而活着</title>
    <link href="https://wukong1024.github.io/2019/10/12/%E7%BD%97%E7%B4%A0-%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E8%80%8C%E6%B4%BB%E7%9D%80/"/>
    <id>https://wukong1024.github.io/2019/10/12/%E7%BD%97%E7%B4%A0-%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E8%80%8C%E6%B4%BB%E7%9D%80/</id>
    <published>2019-10-12T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="罗素-我为什么而活着"><a href="#罗素-我为什么而活着" class="headerlink" title="罗素-我为什么而活着"></a>罗素-我为什么而活着</h1><p>我为什么而活着</p><p>对爱情的渴望，对知识的追求，对人类苦难不可遏制的同情心，这三种纯洁而无比强烈的激情支配着我的一生。这三种激情，就像飓风一样，在深深的苦海上，肆意地把我吹来吹去，吹到濒临绝望的边缘。</p><p>我寻求爱情，首先因为爱情给我带来狂喜，它如此强烈以致我经常愿意为了几小时的欢愉而牺牲生命中的其他一切。我寻求爱情，其次是因为爱情可以解除孤寂一—那是一颗震颤的心，在世界的边缘，俯瞰那冰冷死寂、深不可测的深渊。我寻求爱情，最后是因为在爱情的结合中，我看到圣徒和诗人们所想像的天堂景象的神秘缩影。这就是我所寻求的，虽然它对人生似乎过于美好，然而最终我还是得到了它。</p><p>我以同样的热情寻求知识，我渴望了解人的心灵。我渴望知道星星为什么闪闪发光，我试图理解毕达哥拉斯的思想威力，即数字支配着万物流转。这方面我获得一些成就，然而并不多。</p><p>爱情和知识，尽其可能地把我引上天堂，但是同情心总把我带回尘世。痛苦的呼唤经常在我心中回荡，饥饿的儿童，被压迫被折磨者，被儿女视为负担的无助的老人以及充满孤寂、贫穷和痛苦的整个世界，都是对人类应有生活的嘲讽。我渴望减轻这些不幸，但是我无能为力，而且我自己也深受其害。</p><p>这就是我的一生，我觉得值得为它活着。如果有机会的话，我还乐意再活一次。</p><p>英文原文：</p><p>What I Have Lived For</p><p>by Bertrand Russell</p><p>Three passions, simple but overwhelmingly strong, have governed my life: the longing for love, the search for knowledge, and unbearable pity for the suffering of mankind. These passions, like great winds, have blown me hither and thither, in a wayward course, over a great ocean of anguish, reaching to the very verge of despair.</p><p>I have sought love, first, because it brings ecstasy – ecstasy so great that I would often have sacrificed all the rest of life for a few hours of this joy. I have sought it, next, because it relieves loneliness–that terrible loneliness in which one shivering consciousness looks over the rim of the world into the cold unfathomable lifeless abyss. I have sought it finally, because in the union of love I have seen, in a mystic miniature, the prefiguring vision of the heaven that saints and poets have imagined. This is what I sought, and though it might seem too good for human life, this is what–at last–I have found.</p><p>With equal passion I have sought knowledge. I have wished to understand the hearts of men. I have wished to know why the stars shine. And I have tried to apprehend the Pythagorean power by which number holds sway above the flux. A little of this, but not much, I have achieved.</p><p>Love and knowledge, so far as they were possible, led upward toward the heavens. But always pity brought me back to earth. Echoes of cries of pain reverberate in my heart. Children in famine, victims tortured by oppressors, helpless old people a burden to their sons, and the whole world of loneliness, poverty, and pain make a mockery of what human life should be. I long to alleviate this evil, but I cannot, and I too suffer.</p><p>This has been my life. I have found it worth living, and would gladly live it again if the chance were offered me.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;罗素-我为什么而活着&quot;&gt;&lt;a href=&quot;#罗素-我为什么而活着&quot; class=&quot;headerlink&quot; title=&quot;罗素-我为什么而活着&quot;&gt;&lt;/a&gt;罗素-我为什么而活着&lt;/h1&gt;&lt;p&gt;我为什么而活着&lt;/p&gt;
&lt;p&gt;对爱情的渴望，对知识的追求，对人类苦难不可遏制</summary>
      
    
    
    
    <category term="read" scheme="https://wukong1024.github.io/categories/read/"/>
    
    
    <category term="read" scheme="https://wukong1024.github.io/tags/read/"/>
    
    <category term="转载" scheme="https://wukong1024.github.io/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>创新之路</title>
    <link href="https://wukong1024.github.io/2019/09/23/%E5%88%9B%E6%96%B0%E4%B9%8B%E8%B7%AF/"/>
    <id>https://wukong1024.github.io/2019/09/23/%E5%88%9B%E6%96%B0%E4%B9%8B%E8%B7%AF/</id>
    <published>2019-09-23T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创新之路"><a href="#创新之路" class="headerlink" title="创新之路"></a>创新之路</h1><p>你必须有两个能达到前 25%水平的领域，这两个领域的交集就是你的职业方向。</p><p>输出文化 而不是价值观。</p><p>你不应该进入那种行业，做了两年的人可以和那些已经做了二十年的人，具有一样的工作效率。</p><p>能够获得暴利的职业，都有一个共同特点：可扩展性（scaling），一次劳动可以服务成千上万的人。</p><p>好的程序员有三种美德：「懒惰」(Laziness) 、「不耐烦」(Impatience) 、以及「傲慢」(Hubris)</p><p>复杂的协调，战略资源的整合者，集合式创新，将现有技术做成产品，服务普通人。</p><p>完善他人的想法，优化他人的发明，集合成令人难以抗拒的新产品。</p><p>普及优质的教育，带来改变自身命运的机会。</p><p>创新是思考下一个，提升人们生活水平的工具是什么，并有做成这件事的信心和信念，无论承担多大的风险，为实现它，付出一切。</p><p>好奇心产生的愉悦感，分泌出积极的神经化学激素（多巴胺，内啡肽），一种内在的激励机制，去探索，去学习。</p><p>预知未来最好的办法是创造未来</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创新之路&quot;&gt;&lt;a href=&quot;#创新之路&quot; class=&quot;headerlink&quot; title=&quot;创新之路&quot;&gt;&lt;/a&gt;创新之路&lt;/h1&gt;&lt;p&gt;你必须有两个能达到前 25%水平的领域，这两个领域的交集就是你的职业方向。&lt;/p&gt;
&lt;p&gt;输出文化 而不是价值观。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="read" scheme="https://wukong1024.github.io/categories/read/"/>
    
    
    <category term="read" scheme="https://wukong1024.github.io/tags/read/"/>
    
    <category term="笔记" scheme="https://wukong1024.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>旧手机Blog</title>
    <link href="https://wukong1024.github.io/2019/08/30/%E6%97%A7%E6%89%8B%E6%9C%BABlog/"/>
    <id>https://wukong1024.github.io/2019/08/30/%E6%97%A7%E6%89%8B%E6%9C%BABlog/</id>
    <published>2019-08-30T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Blog"><a href="#Blog" class="headerlink" title="Blog"></a>Blog</h1><p>参考链接</p><ul><li><a class="link"   href="https://blog.verkey.org/384.html" >废旧Android+LNMP+Ngrok 打造”移动云主机”<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://blog.csdn.net/fighting_sxw/article/details/89845908" >小米5安装Centos7(Linux Deploy)<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://segmentfault.com/a/1190000015628625" >CentOS 7 下 安装 Python3.7<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://blog.csdn.net/warylee/article/details/84628345" >Linux下安装Perl 5<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://blog.csdn.net/lkgCSDN/article/details/84403329" >pip is configured with locations that require TLS/SSL问题<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://segmentfault.com/a/1190000012030061" >virtualenv和virtualenvwrapper介绍、安装和使用<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://linux.cn/article-8215-1.html" >screen<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://fengli.su/archives/android-ngrok.html" >安卓手机内网穿透ngrok<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://github.com/inconshreveable/ngrok/issues/315" >GET /wordpress/ 301 Moved Permanently<i class="fas fa-external-link-alt"></i></a></li></ul><h2 id="在安卓上安装Liunx"><a href="#在安卓上安装Liunx" class="headerlink" title="在安卓上安装Liunx"></a>在安卓上安装Liunx</h2><p>所需软件</p><ul><li><a class="link"   href="https://github.com/meefik/busybox/releases" >Busy Box<i class="fas fa-external-link-alt"></i></a>Linux deploy 支撑软件</li><li><a class="link"   href="https://github.com/meefik/linuxdeploy/releases" >Linux deploy<i class="fas fa-external-link-alt"></i></a> Linux系统支撑软件</li></ul><p>安装后两个软件都需要开启root权限 Busy Box无需其它设置 其中 architecture 为 处理器架构</p><h3 id="Linux-Deploy设置"><a href="#Linux-Deploy设置" class="headerlink" title="Linux Deploy设置"></a>Linux Deploy设置</h3><p>左侧菜单设置</p><ul><li>屏幕常亮 关</li><li>锁定WiFi 开</li><li>保持CPU唤醒 开</li><li>PATH变量 /system/xbin</li></ul><h3 id="安装Ubuntu"><a href="#安装Ubuntu" class="headerlink" title="安装Ubuntu"></a>安装Ubuntu</h3><p>右下角系统安装配置</p><ul><li>容器类型 chroot</li><li>发行版GNU/Linux Ubuntu</li><li>架构 armhf</li><li>发行版GNU/Linux版本 xenial</li><li>源地址 <a class="link"   href="http://202.141.160.110/ubuntu-ports" >http://202.141.160.110/ubuntu-ports<i class="fas fa-external-link-alt"></i></a></li><li>安装类型 镜像文件</li><li>本地化 zn_CN. UTF-8</li><li>启动SSH服务器 开</li></ul><h3 id="安装CentOS"><a href="#安装CentOS" class="headerlink" title="安装CentOS"></a>安装CentOS</h3><p>右下角系统安装配置</p><ul><li>容器类型 chroot</li><li>发行版GNU/Linux CentOS</li><li>架构 aarch64</li><li>发行版GNU/Linux版本 7</li><li>源地址 <a class="link"   href="https://mirrors.tuna.tsinghua.edu.cn/centos-altarch/" >https://mirrors.tuna.tsinghua.edu.cn/centos-altarch/<i class="fas fa-external-link-alt"></i></a></li><li>安装类型 镜像文件</li><li>本地化 zn_CN. UTF-8</li><li>启动SSH服务器 开</li></ul><p>设置完成后点击右上角的安装按钮开始安装，大概15分钟。</p><p>看到&lt;&lt;&lt;deploy则安装完成，如果中间没有报错说明安装成功！点击启动如果没有’ssh fail’ 等报错,<br>说明启动成功了，可以用终端软件链接。</p><h2 id="配置开发环境"><a href="#配置开发环境" class="headerlink" title="配置开发环境"></a>配置开发环境</h2><h3 id="screen"><a href="#screen" class="headerlink" title="screen"></a>screen</h3><p>安装screen</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install screen</span><br></pre></td></tr></table></figure><p>screen基本命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 创建新会话</span><br><span class="line">screen -S name</span><br><span class="line"># 从 screen 会话中分离</span><br><span class="line">Ctrl-a 和 d</span><br><span class="line"># 列出对话</span><br><span class="line">screen -ls</span><br><span class="line"># 还原对话</span><br><span class="line">screen -r name</span><br><span class="line">结束对话</span><br><span class="line">进入后输入 exit</span><br></pre></td></tr></table></figure><h3 id="python"><a href="#python" class="headerlink" title="python"></a>python</h3><p>安装python3.7 过程中需要安装’yum install gcc’和’yum install make’</p><p>pip使用错误见参考链接</p><h4 id="虚拟环境"><a href="#虚拟环境" class="headerlink" title="虚拟环境"></a>虚拟环境</h4><p>配置虚拟环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 安装virtualenv</span><br><span class="line">pip install virtualenv</span><br><span class="line"></span><br><span class="line"># 添加软链接</span><br><span class="line">find / -name virtualenv</span><br><span class="line">ln -s /usr/local/python3/bin/virtualenv /usr/bin/virtualenv</span><br><span class="line"></span><br><span class="line">pip install virtualenvwrapper</span><br><span class="line"></span><br><span class="line"># 配置profile</span><br><span class="line">find / -name virtualenvwrapper.sh</span><br><span class="line">vi /etc/profile</span><br><span class="line"># 增加</span><br><span class="line">export WORKON_HOME=/root/virtualenvs</span><br><span class="line">source /usr/local/python3/bin/virtualenvwrapper.sh</span><br><span class="line"># 执行</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>virtualenvwrapper基本命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 新建</span><br><span class="line">mkvirtualenv test --python=python3  </span><br><span class="line"># 查看列表</span><br><span class="line">workon</span><br><span class="line"># 激活</span><br><span class="line">workon test</span><br><span class="line"># 退出</span><br><span class="line">deactivate</span><br><span class="line"># 删除</span><br><span class="line">rmvirtualenv test</span><br></pre></td></tr></table></figure><h2 id="最终方案"><a href="#最终方案" class="headerlink" title="最终方案"></a>最终方案</h2><p><a class="link"   href="https://fengli.su/archives/android-ngrok.html" >安卓手机内网穿透ngrok<i class="fas fa-external-link-alt"></i></a></p><p>KSWEB+Termux+ngork</p><p>安装KSWEB到手机，开启Apache，安装工具phpMyAdmin，下载源码到安卓目录下的htdocs</p><p>使用ngrok开启内网渗透</p><p>Termux替代工具NeoTerm</p><p>目前常用在局域网文件传输，启动KSWEB后，浏览器输入手机固定ip+端口，可以自由上传和删除目录下的文件，使用MT文件夹可以将htdocs下的data/User/admin/home 设置为主目录 (同样在5.0网络下，平均速度在10M/s)</p>]]></content>
    
    
    <summary type="html">在安卓平台虚拟机搭建博客平台</summary>
    
    
    
    <category term="system" scheme="https://wukong1024.github.io/categories/system/"/>
    
    
    <category term="learn" scheme="https://wukong1024.github.io/tags/learn/"/>
    
    <category term="linux" scheme="https://wukong1024.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>AidLearning</title>
    <link href="https://wukong1024.github.io/2019/08/28/AidLearning/"/>
    <id>https://wukong1024.github.io/2019/08/28/AidLearning/</id>
    <published>2019-08-28T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AidLearning"><a href="#AidLearning" class="headerlink" title="AidLearning"></a>AidLearning</h1><p>参考链接</p><ul><li><a class="link"   href="https://winaero.com/blog/enable-openssh-server-windows-10" >How to Enable OpenSSH Server in Windows 10<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://github.com/aidlearning/AidLearning-FrameWork" >AidLearning-FrameWork<i class="fas fa-external-link-alt"></i></a></li></ul><h2 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h2><p>下载AidLearning并安装，安装后等待安装后重启动，登录账号(<a class="link"   href="mailto:&#119;&#117;&#x6b;&#111;&#110;&#103;&#49;&#57;&#x39;&#54;&#64;&#49;&#54;&#x33;&#46;&#99;&#x6f;&#x6d;" >&#119;&#117;&#x6b;&#111;&#110;&#103;&#49;&#57;&#x39;&#54;&#64;&#49;&#54;&#x33;&#46;&#99;&#x6f;&#x6d;<i class="fas fa-external-link-alt"></i></a>)</p><h2 id="电脑通过ssh链接"><a href="#电脑通过ssh链接" class="headerlink" title="电脑通过ssh链接"></a>电脑通过ssh链接</h2><p>Windows设置&gt;&gt;应用&gt;&gt;应用与功能&gt;&gt;管理可选功能&gt;&gt;添加OpenSSH客户端</p><p>进入 ‘C:\windows\system32\Openssh’，加入系统环境变量，执行ssh-keygen生成密钥文件，默认保存在’C:\Users\Wukong.ssh’目录下。</p><p>通过 ‘<a class="link"   href="http://192.168.1.112:8910/upload" >http://192.168.1.112:8910/upload<i class="fas fa-external-link-alt"></i></a>‘将生成的密钥文件 id_rsa 和 id_rsa.pub 上传到 AidLearning。</p><p>打开cmd通过’ssh u0_a311@手机IP -p8022’连接手机。</p><p>使用powershell连接：</p><ul><li>主机手机ip</li><li>端口 8022</li><li>方法 公钥</li><li>用户名 u0_a311</li><li>私钥 C:\Users\Wukong.ssh\id_rsa</li><li>私钥密码 无</li></ul><p>通过 ‘<a class="link"   href="http://192.168.1.112:8080/files/" >http://192.168.1.112:8080/files/<i class="fas fa-external-link-alt"></i></a>‘ 进行AidLearning的文件资源管理</p>]]></content>
    
    
    <summary type="html">可以在安卓上直接使用的linux系统</summary>
    
    
    
    <category term="system" scheme="https://wukong1024.github.io/categories/system/"/>
    
    
    <category term="learn" scheme="https://wukong1024.github.io/tags/learn/"/>
    
    <category term="linux" scheme="https://wukong1024.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Deepin</title>
    <link href="https://wukong1024.github.io/2019/08/08/Deepin/"/>
    <id>https://wukong1024.github.io/2019/08/08/Deepin/</id>
    <published>2019-08-08T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Deepin"><a href="#Deepin" class="headerlink" title="Deepin"></a>Deepin</h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="ssh连接"><a href="#ssh连接" class="headerlink" title="ssh连接"></a>ssh连接</h3><p>启动ssh-server</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ps -e | grep ssh  #查看sshd，没有代表没启动</span><br><span class="line">sudo apt-get install openssh-server #安装后再次查看</span><br><span class="line">ifconfig  # 查看网卡地址</span><br><span class="line"></span><br><span class="line">待选</span><br><span class="line">vi /etc/ssh/sshd_config #更改</span><br><span class="line">PermitRootLogin yes# #开启远程登录</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="宝塔linux配置"><a href="#宝塔linux配置" class="headerlink" title="宝塔linux配置"></a>宝塔linux配置</h2><p>官方<a class="link"   href="https://www.bt.cn/btcode.html" >基础教程<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
    <summary type="html">wordpress尝试</summary>
    
    
    
    <category term="system" scheme="https://wukong1024.github.io/categories/system/"/>
    
    
    <category term="learn" scheme="https://wukong1024.github.io/tags/learn/"/>
    
    <category term="deepin" scheme="https://wukong1024.github.io/tags/deepin/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://wukong1024.github.io/2019/06/21/Scrapy/"/>
    <id>https://wukong1024.github.io/2019/06/21/Scrapy/</id>
    <published>2019-06-21T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Scrapy"><a href="#Scrapy" class="headerlink" title="Scrapy"></a>Scrapy</h1><h2 id="安装Scrapy"><a href="#安装Scrapy" class="headerlink" title="安装Scrapy"></a>安装Scrapy</h2><h3 id="可能的报错"><a href="#可能的报错" class="headerlink" title="可能的报错"></a>可能的报错</h3><p>安装失败,使用全局代理，点击<a class="link"   href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#Twisted" >链接<i class="fas fa-external-link-alt"></i></a>,下载对应版本的Twisted(cp后面是python版本，amd64代表python64位),下载后运行pip先安装驱动。再<code>pip install scrapy</code></p><p>No module named ‘win32con’,<code>pip install pypiwin32</code></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>性能测试，输入<code>scrapy bench</code>，通过计算机性能测得</p><p>爬虫测试，输入<code>scrapy fetch &quot;http://baidu.com</code></p><p>shell环境测试，输入<code>scrapy shell &quot;http://baidu.com&quot;</code></p><h2 id="项目开始"><a href="#项目开始" class="headerlink" title="项目开始"></a>项目开始</h2><p>创建项目<code>scrapy startproject xxx</code></p><p>创建爬虫<code>scrapy genspider itcast &quot;itcast.cn &quot;</code></p><p>检查爬虫模块<code>scrapy check itcast</code></p><p>运行爬虫<code>scrapy crawl itcast</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Scrapy&quot;&gt;&lt;a href=&quot;#Scrapy&quot; class=&quot;headerlink&quot; title=&quot;Scrapy&quot;&gt;&lt;/a&gt;Scrapy&lt;/h1&gt;&lt;h2 id=&quot;安装Scrapy&quot;&gt;&lt;a href=&quot;#安装Scrapy&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>一席</title>
    <link href="https://wukong1024.github.io/2019/05/27/%E4%B8%80%E5%B8%AD/"/>
    <id>https://wukong1024.github.io/2019/05/27/%E4%B8%80%E5%B8%AD/</id>
    <published>2019-05-27T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一席"><a href="#一席" class="headerlink" title="一席"></a>一席</h1><p>精致的利己主义者，高智商，世俗老道；善于表演，懂得配合；尤其善于利用体制来达到自己的目的。这种人一旦掌握去权力，比一般的贪官污吏的危害更大。</p><p>我唯一担心的一件事，我是否配得上我经受的苦难。</p><p>上帝让谁灭亡，必先让其膨胀<br>时间是筛子，最终淘去一切沉渣<br>蜜蜂盗花，结果使花开茂盛<br>暗透了，更能看得见星光</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一席&quot;&gt;&lt;a href=&quot;#一席&quot; class=&quot;headerlink&quot; title=&quot;一席&quot;&gt;&lt;/a&gt;一席&lt;/h1&gt;&lt;p&gt;精致的利己主义者，高智商，世俗老道；善于表演，懂得配合；尤其善于利用体制来达到自己的目的。这种人一旦掌握去权力，比一般的贪官污吏的危害更大。</summary>
      
    
    
    
    <category term="read" scheme="https://wukong1024.github.io/categories/read/"/>
    
    
    <category term="read" scheme="https://wukong1024.github.io/tags/read/"/>
    
    <category term="合集" scheme="https://wukong1024.github.io/tags/%E5%90%88%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>UNEN</title>
    <link href="https://wukong1024.github.io/2019/02/19/unen/"/>
    <id>https://wukong1024.github.io/2019/02/19/unen/</id>
    <published>2019-02-19T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="UNEN"><a href="#UNEN" class="headerlink" title="UNEN"></a>UNEN</h1><p>[TOC]</p><p>阿里云</p><p>域名 unen.cn 公司</p><p>服务器 47.107.224.216 Windows Server 2012R2 悟空</p><h2 id="服务器配置及备案"><a href="#服务器配置及备案" class="headerlink" title="服务器配置及备案"></a>服务器配置及备案</h2><h3 id="备案"><a href="#备案" class="headerlink" title="备案"></a>备案</h3><p>服务器在悟空账户 域名在公司账户</p><p>登录悟空账户 进入备案管理</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3lis27qj31mt0ffgwq.jpg"                      alt="备案管理1"                ></p><p>复制备案服务号 切换到公司账户</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3m5beg8j31fv08jjv4.jpg"                      alt="备案管理2"                ></p><p> 切换公司账户后 进入ICP备案系统 填写基本信息后 将复制的备案服务号 粘贴到 ECS实例中</p><h3 id="已弃用的方案windows"><a href="#已弃用的方案windows" class="headerlink" title="已弃用的方案windows"></a>已弃用的方案windows</h3><h4 id="FileZilla"><a href="#FileZilla" class="headerlink" title="FileZilla"></a>FileZilla</h4><p>远程连接 <a class="link"   href="https://jingyan.baidu.com/article/e4d08ffdb2e6080fd2f60d3f.html" >教程<i class="fas fa-external-link-alt"></i></a></p><h4 id="配置阿里云oss做media库"><a href="#配置阿里云oss做media库" class="headerlink" title="配置阿里云oss做media库"></a>配置阿里云oss做media库</h4><p><a class="link"   href="https://blog.csdn.net/u014633966/article/details/78727034" >教程<i class="fas fa-external-link-alt"></i></a></p><h4 id="解决远程无法连接问题"><a href="#解决远程无法连接问题" class="headerlink" title="解决远程无法连接问题"></a>解决远程无法连接问题</h4><ol><li><p>启动wimRM服务 <a class="link"   href="https://cloud.tencent.com/developer/ask/24542/answer/26856" >教程<i class="fas fa-external-link-alt"></i></a></p></li><li><p>在本地服务器中 启动远程管理</p></li><li><p>安装远程协助 <a class="link"   href="https://help.aliyun.com/knowledge_detail/40880.html?spm=5176.11065259.1996646101.searchclickresult.52981ee5qRywnE#windows2012" >教程<i class="fas fa-external-link-alt"></i></a></p></li><li><p>在高级属性中  打开远程协助</p></li></ol><h4 id="1-解决80端口被占用问题"><a href="#1-解决80端口被占用问题" class="headerlink" title="1.解决80端口被占用问题"></a>1.解决80端口被占用问题</h4><ol><li>使用管理员身份运行 shell</li><li>net stop http //停止系统http服务</li><li>sc config http start= disabled //禁用服务的自动启动，此处注意等号后面的空格不可少</li></ol><h4 id="2-开放80端口"><a href="#2-开放80端口" class="headerlink" title="2.开放80端口"></a>2.开放80端口</h4><p>控制面板—防火墙—高级设置—高级设置—出站规则—最右边 新建规则“新建出站规则向导”，在向导的第一步，选择要创建的防火墙规则类型，选择第二个“端口”。</p><p>再增加 入站规则</p><p>开放80 命名为 unen</p><h3 id="更换为linux服务器"><a href="#更换为linux服务器" class="headerlink" title="更换为linux服务器"></a>更换为linux服务器</h3><p>被window服务器折磨到不行，现更换服务器为linux，现在本地测试成功在，再更换服务器后进行部署。</p><h4 id="mysql的安装与远程登录"><a href="#mysql的安装与远程登录" class="headerlink" title="mysql的安装与远程登录"></a>mysql的安装与远程登录</h4><h5 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h5><h6 id="1-下载安装包"><a href="#1-下载安装包" class="headerlink" title="1.下载安装包"></a>1.下载安装包</h6><p>下载<a class="link"   href="https://dev.mysql.com/downloads/mysql/" >链接<i class="fas fa-external-link-alt"></i></a> 选择对应版本 这里选用的是 Linux-Generic</p><h6 id="2-安装依赖库"><a href="#2-安装依赖库" class="headerlink" title="2.安装依赖库"></a>2.安装依赖库</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install numactl</span><br><span class="line">apt install libaio-dev</span><br></pre></td></tr></table></figure><h6 id="3-解压到指定目录"><a href="#3-解压到指定目录" class="headerlink" title="3.解压到指定目录"></a>3.解压到指定目录</h6><p>解压tar.xz文件：先 xz -d xxx.tar.xz 将 xxx.tar.xz解压成 xxx.tar 然后，再用 tar -xvf xxx.tar来解包。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf mysql-xxx</span><br><span class="line">mv mysql-xxx /usr/local/mysql</span><br></pre></td></tr></table></figure><h6 id="4-添加文件夹、用户、设置权限"><a href="#4-添加文件夹、用户、设置权限" class="headerlink" title="4.添加文件夹、用户、设置权限"></a>4.添加文件夹、用户、设置权限</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd -r -g mysql -s /bin/false mysql</span><br><span class="line"></span><br><span class="line">mkdir mysql-files</span><br><span class="line">chown mysql:mysql mysql-files</span><br><span class="line">chmod 750 mysql-files</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="5-初始化数据库"><a href="#5-初始化数据库" class="headerlink" title="5.初始化数据库"></a>5.初始化数据库</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bin/mysqld --initialize --user=mysql 保存生成的临时密码 root@localhost: xxx</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="6-安装ssl服务"><a href="#6-安装ssl服务" class="headerlink" title="6.安装ssl服务"></a>6.安装ssl服务</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install openssh</span><br><span class="line">bin/mysql_ssl_rsa_setup</span><br></pre></td></tr></table></figure><h6 id="7-复制服务文件"><a href="#7-复制服务文件" class="headerlink" title="7.复制服务文件"></a>7.复制服务文件</h6><p><code>cp support-files/mysql.server /etc/init.d/mysql.server</code></p><h5 id="登录msyql与修改密码"><a href="#登录msyql与修改密码" class="headerlink" title="登录msyql与修改密码"></a>登录msyql与修改密码</h5><h6 id="1-开启服务"><a href="#1-开启服务" class="headerlink" title="1.开启服务"></a>1.开启服务</h6><p>&amp;是后台运行的意思，执行命令之后，终端会卡在一个位置，再按一次enter即可</p><p><code>bin/mysqld_safe --user=mysql &amp;</code></p><h6 id="2-使用root登录并改密"><a href="#2-使用root登录并改密" class="headerlink" title="2.使用root登录并改密"></a>2.使用root登录并改密</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bin/mysql -uroot -p 输入之前保存的随机密码</span><br><span class="line"></span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;new password&#x27; PASSWORD EXPIRE NEVER;</span><br><span class="line">use mysql;</span><br><span class="line">update user set host=&#x27;%&#x27; where user = &#x27;root&#x27;;</span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;new password&#x27;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h6 id="3-配置mysql为全局变量"><a href="#3-配置mysql为全局变量" class="headerlink" title="3.配置mysql为全局变量"></a>3.配置mysql为全局变量</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/profile</span><br><span class="line">export PATH=$PATH:/opt/software/node-v8.9.3-linux-x64/bin/node   //增加并保存</span><br><span class="line">//修改好配置文件后执行source /etc/profile 或者 source /root/.bashrc使配置文件生效</span><br></pre></td></tr></table></figure><h5 id="mysql问题集锦"><a href="#mysql问题集锦" class="headerlink" title="mysql问题集锦"></a>mysql问题集锦</h5><p>ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/tmp/mysql.sock’ (2)</p><p><code>/etc/init.d/mysql.server start</code></p><h4 id="配置python开发环境"><a href="#配置python开发环境" class="headerlink" title="配置python开发环境"></a>配置python开发环境</h4><h5 id="默认设为python3和pip3"><a href="#默认设为python3和pip3" class="headerlink" title="默认设为python3和pip3"></a>默认设为python3和pip3</h5><p>sudo rm -rf /usr/bin/python<br>删除后再建立新的链接关系：<br>sudo ln -s /usr/bin/python3  /usr/bin/python</p><p>sudo apt-get install python3-pip</p><p>设置pip3同上</p><h5 id="问题集锦"><a href="#问题集锦" class="headerlink" title="问题集锦"></a>问题集锦</h5><p>安装mysqlclient报mysql_config not found<a class="link"   href="https://blog.csdn.net/qq_37925422/article/details/80552347" >教程<i class="fas fa-external-link-alt"></i></a></p><h2 id="服务器开发"><a href="#服务器开发" class="headerlink" title="服务器开发"></a>服务器开发</h2><h3 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h3><h4 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h4><h5 id="软件列表"><a href="#软件列表" class="headerlink" title="软件列表"></a>软件列表</h5><p>python mysql navicat</p><h5 id="安装mysql8-0"><a href="#安装mysql8-0" class="headerlink" title="安装mysql8.0"></a>安装mysql8.0</h5><p>下载<a class="link"   href="https://dev.mysql.com/downloads/mysql/" >链接<i class="fas fa-external-link-alt"></i></a></p><p>安装<a class="link"   href="https://blog.csdn.net/qq_37350706/article/details/81707862" >教程<i class="fas fa-external-link-alt"></i></a></p><p>shell下登录mysql <code>mysql -uroot -p</code></p><p>修改密码<code>ALTER USER &quot;root&quot;@&quot;localhost&quot; IDENTIFIED  BY &quot;你的新密码&quot;;</code></p><h5 id="python虚拟环境"><a href="#python虚拟环境" class="headerlink" title="python虚拟环境"></a>python虚拟环境</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenv  安装模块虚拟环境模块</span><br><span class="line"></span><br><span class="line">pip install virtualenvwrapper-win  安装环境管理模块</span><br><span class="line"></span><br><span class="line">mkvirtualenv testenv  新建环境在Administrator/Envs/</span><br><span class="line"></span><br><span class="line">mkvirtualenv --python=python版本的python.exe路径 虚拟环境名称   指定版本</span><br><span class="line"></span><br><span class="line">rmvirtualenv &lt;name&gt; 删除环境</span><br><span class="line"></span><br><span class="line">workon 查看当前虚拟环境</span><br><span class="line"></span><br><span class="line">workon &lt;name&gt; 进入虚拟环境 (在shell下运行)</span><br><span class="line"></span><br><span class="line">deactivate退出环境</span><br></pre></td></tr></table></figure><h5 id="安装依赖的包"><a href="#安装依赖的包" class="headerlink" title="安装依赖的包"></a>安装依赖的包</h5><p>导出 pip freeze &gt;r.txt</p><p>新建 r.txt文件  pip install -r r.txt安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="项目开始"><a href="#项目开始" class="headerlink" title="项目开始"></a>项目开始</h4><h5 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">django-admin startproject mysite 创建django项目</span><br><span class="line">python manage.py runserver 8080 设置端口号</span><br><span class="line">python manage.py runserver 0.0.0.0:8080  监听所有公共ip</span><br><span class="line">python manage.py startapp &lt;name&gt; 创建应用后在INSTALLED_APPS中增加 &lt;name&gt;</span><br></pre></td></tr></table></figure><h5 id="搭建目录文件"><a href="#搭建目录文件" class="headerlink" title="搭建目录文件"></a>搭建目录文件</h5><p>apps 存放应用列表 同时在setting 中增加 <code>sys.path.insert(0, os.path.join(BASE_DIR, &#39;apps&#39;))</code></p><p>log 存放日志</p><p>media 存放上传文件 增加 <code>MEDIA_URL = &#39;/media/&#39;  MEDIA_ROOT = os.path.join(BASE_DIR, &#39;media&#39;)</code></p><p>static 全局静态文件 js css 静态图片  STATIC_URL 后增加<code>STATICFILES_DIRS = [os.path.join(BASE_DIR, &#39;static&#39;)]</code></p><p>templates 网页模板 在 TEMPLATES 下的DIRS中增加 <code>os.path.join(BASE_DIR, &#39;templates&#39;)</code></p><h5 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h5><p>先配置 MySQLdb<a class="link"   href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysql-python" >驱动<i class="fas fa-external-link-alt"></i></a> 下载对应版本后</p><p>虚拟环境下 pip install xx.whl  pip install mysqlclient</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;MOOC&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>: <span class="string">&#x27;1234&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>python manage.py makemigrations</p><p>python manage.py migrate</p><h5 id="创建超级用户"><a href="#创建超级用户" class="headerlink" title="创建超级用户"></a>创建超级用户</h5><p><code>python manage.py createsuperuser</code></p><p>wukong  1234</p><h4 id="应用开发"><a href="#应用开发" class="headerlink" title="应用开发"></a>应用开发</h4><h5 id="models"><a href="#models" class="headerlink" title="models"></a>models</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserMessage</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">u&#x27;用户名&#x27;</span>)  <span class="comment"># 对字段的注释</span></span><br><span class="line">    email = models.EmailField(verbose_name=<span class="string">u&#x27;邮箱&#x27;</span>)</span><br><span class="line">    address = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u&#x27;地址&#x27;</span>)</span><br><span class="line">    message = models.CharField(max_length=<span class="number">500</span>, verbose_name=<span class="string">u&#x27;留言信息&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u&#x27;用户留言信息&#x27;</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">        <span class="comment"># db_table=&#x27;user_message&#x27;  # 指定表名</span></span><br><span class="line">        <span class="comment"># ordering = &#x27;-id&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="根据现有数据库建立model"><a href="#根据现有数据库建立model" class="headerlink" title="根据现有数据库建立model"></a>根据现有数据库建立model</h5><p>创建一个项目，修改seting文件，在setting里面设置你要连接的数据库类型和连接名称，地址之类，和创建新项目的时候一致<br>运行下面代码可以自动生成models模型文件<br>python manage.py inspectdb<br>这样就可以在命令行看到数据库的模型文件了</p><p>把模型文件导入到app中<br>创建一个app<br>django-admin.py startapp app<br>python manage.py inspectdb &gt; app/models.py</p><h5 id="用户的登录和注册"><a href="#用户的登录和注册" class="headerlink" title="用户的登录和注册"></a>用户的登录和注册</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重定义验证方式</span></span><br><span class="line">AUTHENTICATION_BACKENDS = (</span><br><span class="line">    <span class="string">&#x27;users.views.CustomBacked&#x27;</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>安装 <code>django-simple-captcha</code> APPS 下增加 captcha</p><h4 id="附加包开发"><a href="#附加包开发" class="headerlink" title="附加包开发"></a>附加包开发</h4><h5 id="xadmin"><a href="#xadmin" class="headerlink" title="xadmin"></a>xadmin</h5><p>下载xadmin <a class="link"   href="https://github.com/sshwsfc/xadmin" >链接<i class="fas fa-external-link-alt"></i></a></p><p>新建extra_apps 文件夹 将xadmin 复制到其中 注册xadmin和crispy_forms  将extra_apps 加入系统路径</p><p>配置后需要更新数据库</p><p>个性化配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseSetting</span>(<span class="params"><span class="built_in">object</span></span>):</span>  <span class="comment"># 设置主题</span></span><br><span class="line">    enable_themes = <span class="literal">True</span></span><br><span class="line">    use_bootswatch = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GlobalSettings</span>(<span class="params"><span class="built_in">object</span></span>):</span>  <span class="comment"># 设置标题</span></span><br><span class="line">    site_title = <span class="string">&#x27;WMOOC&#x27;</span></span><br><span class="line">    site_footer = <span class="string">&#x27;Wukong&#x27;</span></span><br><span class="line">    menu_style = <span class="string">&#x27;accordion&#x27;</span>  <span class="comment"># 折叠目录</span></span><br><span class="line"></span><br><span class="line">xadmin.site.register(views.BaseAdminView, BaseSetting)</span><br><span class="line">xadmin.site.register(views.CommAdminView, GlobalSettings)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>增加djagno主题失败后 <a class="link"   href="https://www.jianshu.com/p/8d4d958b8e82" >教程<i class="fas fa-external-link-alt"></i></a></p><h4 id="template"><a href="#template" class="headerlink" title="template"></a>template</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data-url=<span class="string">&quot;&#123;&#123;MEDIA.URL&#125;&#125;&#123;&#123;course_org.image&#125;&#125;&quot;</span></span><br><span class="line"><span class="comment"># settings.py context_processors中增加</span></span><br><span class="line"><span class="comment"># 将 MEDIA.URL 注册到 html</span></span><br><span class="line">django.core.context_processors.media</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="页码"><a href="#页码" class="headerlink" title="页码"></a>页码</h5><p><code>pip install django-pure-pagination</code></p><p>INSTALLED_APPS=(<br>    …<br>    ‘pure_pagination’,<br>)</p><h3 id="peewee"><a href="#peewee" class="headerlink" title="peewee"></a>peewee</h3><h4 id="简介和配置"><a href="#简介和配置" class="headerlink" title="简介和配置"></a>简介和配置</h4><p>实际开发中，如无特殊需求，一般不会直接写 SQL，而是用更为方便的 ORM（对象关系映射，Object Relational Mapping）。顾名思义，就是将关系型数据库与 Python 中的对象关联起来，提供了一种操作数据的简便方式，相当于对数据库加了一层更友好的接口。</p><p>目前 Python 中比较流行的 ORM 解决方案有三种：</p><ol><li>Django ORM。使用方便，但很难脱离 Django 单独使用。</li><li>SQLAlchemy。功能强大，成熟可扩展，但学习门槛较高。</li><li>peewee。轻量，可扩展，易学习，但功能有限。</li></ol><p>安装peewee，然后shell下运行 导出数据库中的模型，参考链接: <a class="link"   href="http://docs.peewee-orm.com/en/latest/peewee/playhouse.html#pwiz-a-model-generator" >pwiz-a-model-generator<i class="fas fa-external-link-alt"></i></a></p><p><code>python -m pwiz -e mysql -H localhost -p 3306 -u root -P password unen &gt;db.py</code></p><p>在同目录下新建py文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> db <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ProductPction.select():</span><br><span class="line">    <span class="built_in">print</span>(i.<span class="built_in">type</span>)</span><br></pre></td></tr></table></figure><h4 id="Querying"><a href="#Querying" class="headerlink" title="Querying"></a>Querying</h4><p>教程<a class="link"   href="https://peewee.readthedocs.io/en/latest/peewee/querying.html" >链接<i class="fas fa-external-link-alt"></i></a></p><ul><li>Model.create(), for executing INSERT queries.</li><li>Model.save() and Model.update(), for executing UPDATE queries.</li><li>Model.delete_instance() and Model.delete(), for executing DELETE queries.</li><li>Model.select(), for executing SELECT queries.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># save</span></span><br><span class="line">User.create(username=<span class="string">&#x27;Charlie&#x27;</span>)</span><br><span class="line"></span><br><span class="line">user = User(username=<span class="string">&#x27;Charlie&#x27;</span>)</span><br><span class="line">user.save()</span><br><span class="line"></span><br><span class="line">huey = User()</span><br><span class="line">huey.username = <span class="string">&#x27;Huey&#x27;</span></span><br><span class="line">huey.save()</span><br><span class="line"></span><br><span class="line"><span class="comment"># foreign key</span></span><br><span class="line">tweet = Tweet.create(user=huey, message=<span class="string">&#x27;Hello!&#x27;</span>)</span><br><span class="line">tweet = Tweet.create(user=<span class="number">2</span>, message=<span class="string">&#x27;Hello again!&#x27;</span>)</span><br><span class="line"></span><br><span class="line">data_source = [</span><br><span class="line">    &#123;<span class="string">&#x27;field1&#x27;</span>: <span class="string">&#x27;val1-1&#x27;</span>, <span class="string">&#x27;field2&#x27;</span>: <span class="string">&#x27;val1-2&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;field1&#x27;</span>: <span class="string">&#x27;val2-1&#x27;</span>, <span class="string">&#x27;field2&#x27;</span>: <span class="string">&#x27;val2-2&#x27;</span>&#125;,</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> data_dict <span class="keyword">in</span> data_source:</span><br><span class="line">    MyModel.create(**data_dict)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># This is much faster.</span></span><br><span class="line"><span class="keyword">with</span> db.atomic():</span><br><span class="line">    <span class="keyword">for</span> data_dict <span class="keyword">in</span> data_source:</span><br><span class="line">        MyModel.create(**data_dict)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># We can INSERT tuples as well...</span></span><br><span class="line">data = [(<span class="string">&#x27;val1-1&#x27;</span>, <span class="string">&#x27;val1-2&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;val2-1&#x27;</span>, <span class="string">&#x27;val2-2&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;val3-1&#x27;</span>, <span class="string">&#x27;val3-2&#x27;</span>)]</span><br><span class="line">fields = [MyModel.field1, MyModel.field2]</span><br><span class="line"><span class="comment"># But we need to indicate which fields the values correspond to.</span></span><br><span class="line"><span class="keyword">with</span> db.atomic():</span><br><span class="line">    MyModel.insert_many(data, fields=fields).execute()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;user_list.txt&#x27;</span>) <span class="keyword">as</span> fh:</span><br><span class="line">    <span class="comment"># Create a list of unsaved User instances.</span></span><br><span class="line">    users = [User(username=line.strip()) <span class="keyword">for</span> line <span class="keyword">in</span> fh.readlines()]</span><br><span class="line"></span><br><span class="line"><span class="comment"># update</span></span><br><span class="line">query = Stat.update(counter=Stat.counter + <span class="number">1</span>).where(Stat.url == request.url)</span><br><span class="line">query.execute()</span><br><span class="line"></span><br><span class="line">subquery = Tweet.select(fn.COUNT(Tweet.<span class="built_in">id</span>)).where(Tweet.user == User.<span class="built_in">id</span>)</span><br><span class="line">update = User.update(num_tweets=subquery)</span><br><span class="line">update.execute()</span><br><span class="line"></span><br><span class="line"><span class="comment"># delete</span></span><br><span class="line">user = User.get(User.<span class="built_in">id</span> == <span class="number">1</span>)</span><br><span class="line">user.delete_instance()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Selecting a single record</span></span><br><span class="line">User.get(User.<span class="built_in">id</span> == <span class="number">1</span>)</span><br><span class="line">User.get_by_id(<span class="number">1</span>)  <span class="comment"># Same as above.</span></span><br><span class="line">User[<span class="number">1</span>]  <span class="comment"># Also same as above.</span></span><br><span class="line">User.get(User.<span class="built_in">id</span> == <span class="number">1</span>).username</span><br><span class="line">User.get(User.username == <span class="string">&#x27;Charlie&#x27;</span>)</span><br><span class="line">user, created = User.get_or_create(username=username)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Selecting multiple records</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>query = User.select()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[user.username <span class="keyword">for</span> user <span class="keyword">in</span> query]</span><br><span class="line">[<span class="string">&#x27;Charlie&#x27;</span>, <span class="string">&#x27;Huey&#x27;</span>, <span class="string">&#x27;Peewee&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>query[<span class="number">1</span>]</span><br><span class="line">&lt;__main__.User at <span class="number">0x7f83e80f5550</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>query[<span class="number">1</span>].username</span><br><span class="line"><span class="string">&#x27;Huey&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>query = User.select().dicts()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> row <span class="keyword">in</span> query:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(row)</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;Charlie&#x27;</span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;Huey&#x27;</span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;Peewee&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># orderding</span></span><br><span class="line">Tweet.select().order_by(-Tweet.created_date)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="客户端开发"><a href="#客户端开发" class="headerlink" title="客户端开发"></a>客户端开发</h2><h3 id="树莓派"><a href="#树莓派" class="headerlink" title="树莓派"></a>树莓派</h3><h4 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h4><ul><li>树莓派Raspberry3b+主板</li><li>外接显示屏，支持HDMI接口（系统默认只支持HDMI显示）</li><li>3.5寸触摸屏显示器-LCD屏幕（需要系统单独按照驱动）</li><li>16GB TF卡</li><li>读卡器</li><li>鼠标（usb有线）</li><li>键盘（usb有线）</li><li>HDMI连接线</li><li>5V2A的电源和micro usb线</li></ul><h4 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h4><ul><li>SD Formatter（格式化工具）</li><li>Win32DiskImager（烧录工具）</li><li>2018-11-13-raspbian-stretch.img（镜像文件）</li></ul><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>用”SD Formatter”格式化TF卡后，再将镜像烧录到其中 插入树莓派 接入显示器，鼠标，键盘后启动。</p><p><strong>重点</strong>：烧录完成后，不要点击格式化TF卡！！！</p><h4 id="无线连接"><a href="#无线连接" class="headerlink" title="无线连接"></a>无线连接</h4><p>开启VNC SSH GPIO</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3n2tdu2j30ff0q8qkf.jpg"                      alt="image.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3nrhl4rj30dv0c2n1e.jpg"                      alt="image.png"                ></p><h5 id="putty"><a href="#putty" class="headerlink" title="putty"></a>putty</h5><p>在TF-卡中新建文件 ssh （系统默认不开机ssh）</p><p>登录路由器管理界面查询树莓派的ip地址</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3o6ahv7j30lc03jdgx.jpg"                      alt="image.png"                ></p><p>服务器下载并安装putty 输入上图中的IP 开始连接默认用户名 pi  密码  respberry</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3oghtekj30ne0eq0z3.jpg"                      alt="image.png"                ></p><h5 id="VNC-Viewer"><a href="#VNC-Viewer" class="headerlink" title="VNC Viewer"></a>VNC Viewer</h5><p>putty登录后在终端输入 <code>sudo raspi-config</code></p><p>选择 5.INterfacing Options  </p><p>再选择 P3 VNC</p><p>服务器下载并安装VNC Viewer</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3pejrzoj30i00e7qew.jpg"                      alt="image.png"                ></p><h5 id="IP与MAC地址绑定"><a href="#IP与MAC地址绑定" class="headerlink" title="IP与MAC地址绑定"></a>IP与MAC地址绑定</h5><p>登录路由器管理界面后，在高级设置中</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3qe7w54j30y80psgw8.jpg"                      alt="image.png"                ></p><p>添加IP与MAC地址绑定</p><p>更改VNC分辨率<code>vncserver -geometry 1200x1366</code></p><p>更改后用IP+端口号登陆</p><h5 id="更换源"><a href="#更换源" class="headerlink" title="更换源"></a>更换源</h5><p>sudo nano /etc/apt/sources.list</p><p>注释第一行 增加 <code>deb https://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi</code></p><p>同步更新源 <code>sudo apt-get update</code></p><p>升级软件包 <code>sudo apt-get upgrade</code></p><h4 id="Linux教程"><a href="#Linux教程" class="headerlink" title="Linux教程"></a>Linux教程</h4><h5 id="关机重启"><a href="#关机重启" class="headerlink" title="关机重启"></a>关机重启</h5><p><code>ctrl + alt + t</code>打开终端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#关机</span><br><span class="line">sudo shutdown -h now</span><br><span class="line">sudo poweroff</span><br><span class="line">shutdown -r重启  -c 取消 now 现在  20:25 今天的20:25  +10 10分钟后关机</span><br><span class="line"></span><br><span class="line">#重启</span><br><span class="line">sudo reboot</span><br><span class="line">sudo shutdown -r now</span><br><span class="line"></span><br><span class="line">#注销</span><br><span class="line">logout :退出 注销</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="系统目录说明"><a href="#系统目录说明" class="headerlink" title="系统目录说明"></a>系统目录说明</h5><p>/ 根路径</p><p>这是Linux系统的“根”目录，也是所有目录结构的最底层。在UNIX以及和它兼容的系统中，”/“是一个单独的目录。</p><p>/boot</p><p>这个目录下包含系统启动文件（boot loader），例如Grub，Lilo或者Kernel，以及initrd，system.map等配置文件。</p><p>/sys</p><p>这个目录下包含内核、固件以及系统相关文件。</p><p>/sbin</p><p>包含系统操作和运作所必需的二进制文件以及管理工具，主要就是可执行文件。类似WINDOWS下的EXE文件。</p><p>/bin</p><p>包含单用户模式下的二进制文件以及工具程序，比如cat，ls，cp这些命令。</p><p>/lib</p><p>包含/sbin和/bin目录下二进制文件运行所需要的库文件。</p><p>/dev</p><p>内含必需的系统文件和驱动器。</p><p>/etc</p><p>内含系统配置文件，其下的目录，比如 /etc/hosts, /etc/resolv.conf, nsswitch.conf, 以及系统缺省设置，网络配置文件等等。以及一些系统和应用程序的配置文件。</p><p>/<strong>home</strong></p><p>每一个用户的在这个目录下，都会单独有一个以其<strong>用户名</strong>命令的目录，在这里保存着用户的个人设置文件，尤其是以 profile结尾的文件。但是也有例外，root用户的数据就不在这个目录中，而是单独在根路径下，保存在单独的/root文件夹下。</p><p>/<strong>media</strong></p><p>一个给所有可移动设备比如光驱、USB外接盘、软盘提供的常规挂载点。路径显示为<code>/media/用户名/U盘名</code></p><p>/mnt</p><p>临时文件系统挂载点。比如，你并不想长期挂载某个驱动器，而是只是临时挂载一会U盘烤个MP3之类的，那么应该挂载在这个位置下。</p><p>/opt</p><p>在Linux系统中，这个目录用到的并不多，opt是 可选系统程序包（Optional Software Packages）的简称。这个目录在UNIX系统，如Sun Solaris用途要广泛的多。</p><p>/usr</p><p>用户数据目录，包含了属于用户的实用程序和应用程序。这里有很多重要的，但并非关键的文件系统挂载这个路径下面。在这里，你会重新找到一个 bin、sbin 和 lib目录，其中包含非关键用户和系统二进制文件以及相关的库和共享目录，以及一些库文件。</p><p>/usr/sbin</p><p>包含系统中非必备和并不是特别重要的系统二进制文件以及网络应用工具。</p><p>/usr/bin</p><p>包含用户的非必备和并不是特别重要的二进制文件。</p><p>/usr/lib</p><p>保存着/usr/sbin以及/usr/bin中二进制文件所需要的库文件。</p><p>/usr/share</p><p>“平台无关”的共享数据目录。</p><p>/usr/local</p><p>是/usr下的二级目录，这里主要保存着包含系统二进制文件以及运行库在内的本地系统数据。</p><p>/var</p><p>这个路径下通常保存着包括系统日志、打印机后台文件（spool files）、定时任务（crontab）、邮件、运行进程、进程锁文件等。这个目录尤其需要注意进行日常的检查和维护，因为这个目录下文件的大小可能会增长很快，以致于很快占满硬盘，然后导致系统便会出现各种奇奇怪怪的问题。</p><p>/tmp</p><p>顾名思义，这是一个临时文件夹，专门用来保存临时文件，每次系统重启之后，这个目录下的”临时”文件便会被清空。同样，/var/tmp 也同样保存着临时文件。两者唯一的不同是，后者 /var/tmp目录保存的文件会受到系统保护，系统重启之后这个目录下的文件也不会被清空。</p><p>/proc</p><p>这个目录是驻留在系统内存中的虚拟（psuedo，伪）文件系统，其中保存的都是文本格式的系统内核和进程信息。</p><blockquote><p>LINUX系统目录结构图</p></blockquote><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3qttiqzj30c00i8adh.jpg"                      alt="image.png"                ></p><h5 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h5><table><thead><tr><th>命令</th><th align="left">全称</th><th align="left">解释</th></tr></thead><tbody><tr><td>man + 命令</td><td align="left">Manual</td><td align="left">手册 查询其他命令用法</td></tr><tr><td>pwd</td><td align="left">Print working directory</td><td align="left">打印当前工作目录</td></tr><tr><td>cd</td><td align="left">Change directory</td><td align="left">切换目录</td></tr><tr><td>ls + -l</td><td align="left">List files</td><td align="left">列出目录下的文件</td></tr><tr><td>mkdir</td><td align="left">Make directory</td><td align="left">建立文件夹</td></tr><tr><td>rmdir</td><td align="left">Remove directory</td><td align="left">删除文件夹</td></tr><tr><td>cat</td><td align="left">Concatenate</td><td align="left">串联？查看文件 合并文件</td></tr><tr><td>touch</td><td align="left">touch</td><td align="left">新建文件</td></tr><tr><td>rm</td><td align="left">remove</td><td align="left">删除指定文件</td></tr><tr><td>clear</td><td align="left">clear</td><td align="left">清屏</td></tr><tr><td>tree</td><td align="left">tree</td><td align="left">文件树</td></tr><tr><td>cp</td><td align="left">cope</td><td align="left">复制</td></tr><tr><td>mv</td><td align="left">move</td><td align="left">移动/重命名</td></tr><tr><td>grep+字符串+文件名</td><td align="left">grep</td><td align="left">搜索</td></tr><tr><td>echo + 字符串 &gt; 文件</td><td align="left">&gt; 新建 &gt;&gt;增加</td><td align="left">输出内容到文件</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">rm扩展: -r 删除目录文件   -f强制删除无提示</span><br><span class="line"></span><br><span class="line">tree扩展:  -d 只显示目录</span><br><span class="line"></span><br><span class="line">cp/mv扩展: -r 复制目录文件 -i 提示覆盖</span><br><span class="line"></span><br><span class="line">cat扩展:   -b空行不编号  -n全部编号</span><br><span class="line"></span><br><span class="line">cat + 文件[文件&gt;新文件] 合并文件</span><br><span class="line"></span><br><span class="line">grep扩展:  -n显示行号   -v反向选择   -i忽略大小写  ^a  ke$</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tar -cvf py.tar 01.py 02.py 03.py  文件打包(不压缩)</span><br><span class="line"></span><br><span class="line">tar -xvf py.tar [-C dictionary]  文件解包  -z压缩为.gz   -j压缩为.bz2</span><br><span class="line"></span><br><span class="line">sudo apt install|remove|upgrade  软件名  sl 小火车 htop 系统进程</span><br><span class="line"></span><br><span class="line">chown: Change owner 改变所有者</span><br><span class="line"></span><br><span class="line">chgrp: Change group 改变用户组</span><br><span class="line"></span><br><span class="line">chmod: Change mode 改变模式</span><br><span class="line">insmod：Install module 安装模块</span><br><span class="line">rmmod：Remove module 删除模块</span><br><span class="line">lsmod：List module 列表模块</span><br><span class="line"></span><br><span class="line">sudo是superuser do的简写</span><br><span class="line"></span><br><span class="line">查看linux版本号：uname -a</span><br><span class="line"></span><br><span class="line">比较两个文件：diff 1.c 2.c 或cmp 1.c 2.c</span><br><span class="line"></span><br><span class="line">设置文件的读写权限：chmod u+w 1.c(增加文件拥有者对1.c写的权限)</span><br><span class="line">chmod g-r 1.c( 删除工作组对1.c读的权限)</span><br><span class="line">chmod o+x 1.c(增加其他用户对1.c的执行权限)</span><br><span class="line">chmod a-w 1.c(删除所有用户对1.c写的权限)</span><br><span class="line">chmod 777 -R aaa  更改目录及子文件子目录全部权限</span><br><span class="line">chmod u=rwx,g=rw,o=r aa.py</span><br><span class="line"></span><br><span class="line">u 所有者 g 所属组 o 其他用户</span><br><span class="line">r=4 w=2 x=1</span><br><span class="line"></span><br><span class="line">查看运行的进程：ps process status</span><br><span class="line">杀掉某个线程：kill 1186（1186是线程号）</span><br><span class="line"></span><br><span class="line">date  查询当前系统时间</span><br><span class="line"></span><br><span class="line">df -h   disk free 显示磁盘剩余空间     -h 人性化的方式显示文件大小</span><br><span class="line"></span><br><span class="line">alias ll=&quot;ls -lh&quot;  自定义命令的别名</span><br><span class="line">unalias ll 取消别名</span><br><span class="line"></span><br><span class="line">which ls 查看命令位置</span><br></pre></td></tr></table></figure><h4 id="树莓派实验室"><a href="#树莓派实验室" class="headerlink" title="树莓派实验室"></a>树莓派实验室</h4><h5 id="RPi-GPIO-模块使用基础"><a href="#RPi-GPIO-模块使用基础" class="headerlink" title="RPi.GPIO 模块使用基础"></a>RPi.GPIO 模块使用基础</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入模块</span></span><br><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"><span class="comment">#针脚编号</span></span><br><span class="line">GPIO.setmode(GPIO.BCM)</span><br><span class="line"><span class="comment">#忽略警告s</span></span><br><span class="line">GPIO.setwarnings(<span class="literal">False</span>)</span><br><span class="line"><span class="comment">#配置通道</span></span><br><span class="line">GPIO.setup(channel,GPIO.IN,pull_up_down=GPIO.PUD_UP)</span><br><span class="line"><span class="comment">#输入 读取GPIO针脚的值</span></span><br><span class="line">GPIO.<span class="built_in">input</span>(channel)</span><br><span class="line"><span class="comment">#输出 设置GPIO针脚的输出状态 1/GPIO.HIGH/True</span></span><br><span class="line">GPIO.output(channel,state)</span><br><span class="line"><span class="comment">#边缘检测 RISING FALLING BOTH</span></span><br><span class="line">GPIO.wait_for_edge(channel, GPIO.RISING)</span><br><span class="line"></span><br><span class="line"><span class="comment">#清理</span></span><br><span class="line">GPIO.cleanup()</span><br><span class="line"><span class="comment">#检测Raspberry Pi主板的修订版本</span></span><br><span class="line">GPIO.RPI_REVISION</span><br><span class="line"><span class="comment">#检测RPI.GPIO的版本</span></span><br><span class="line">GPIO.VERSION</span><br><span class="line"></span><br><span class="line"><span class="comment">#线程回调 边缘检测</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_callback</span>(<span class="params">channel</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;这是一个边缘事件回调函数！&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;在通道 %s 上进行边缘检测&#x27;</span>%channel)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;该程序与您的主程序运行在不同的进程中&#x27;</span>)</span><br><span class="line"><span class="comment">#回调加入开关防抖</span></span><br><span class="line">GPIO.add_event_detect(channel, GPIO.RISING, callback=my_callback,bouncetime=<span class="number">200</span>)</span><br><span class="line"><span class="comment">#停止边缘检测事件</span></span><br><span class="line">GPIO.remove_event_detect(channel)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="使用-RPi-GPIO-模块的输入（Input）功能"><a href="#使用-RPi-GPIO-模块的输入（Input）功能" class="headerlink" title="使用 RPi.GPIO 模块的输入（Input）功能"></a>使用 RPi.GPIO 模块的输入（Input）功能</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">1.polling轮询 循环定时检查输入值</span></span><br><span class="line"><span class="string">2.interruots中断   边缘检测  检测临界值 falling edge rising edge</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h5 id="18B20温度传感器"><a href="#18B20温度传感器" class="headerlink" title="18B20温度传感器"></a>18B20温度传感器</h5><p>坏了  2.68又买了一个 等快递<br><code>https://www.jianshu.com/p/1aeed4cfd431</code></p><h5 id="DHT11温湿度传感器"><a href="#DHT11温湿度传感器" class="headerlink" title="DHT11温湿度传感器"></a>DHT11温湿度传感器</h5><p>参考<a class="link"   href="https://github.com/yfgeek/rpi-TempRuntime" >项目<i class="fas fa-external-link-alt"></i></a></p><h6 id="1-DHT11温湿度传感器的安装"><a href="#1-DHT11温湿度传感器的安装" class="headerlink" title="1.DHT11温湿度传感器的安装"></a>1.DHT11温湿度传感器的安装</h6><p>电阻：4.7–10KΩ</p><p>接线原理图</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3rs9snsj30di0eo0tx.jpg"                      alt="接线.jpg"                ></p><p>接线实物图</p><h6 id="2-收集传感器的信息"><a href="#2-收集传感器的信息" class="headerlink" title="2.收集传感器的信息"></a>2.收集传感器的信息</h6><p>安装依赖的库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/adafruit/Adafruit_Python_DHT.git</span><br><span class="line">cd Adafruit_Python_DHT</span><br><span class="line">sudo python setup.py install</span><br><span class="line">sudo pip install RPi.GPIO</span><br></pre></td></tr></table></figure><p>下载项目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /env</span><br><span class="line">cd env</span><br><span class="line">git clone https://github.com/yfgeek/rpi-TempRuntime.git</span><br></pre></td></tr></table></figure><p>修改项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /env/rpi-TempRuntime</span><br><span class="line">sudo nano DHT11-WITHOUT-LCD.py</span><br></pre></td></tr></table></figure><p>修改<code>humidity, temperature = Adafruit_DHT.read_retry(sensor, 26)</code>中的26改为自己的GPIO#序号，<code>humidity, temperature = Adafruit_DHT.read_retry(sensor, 4)</code>，保存退出。</p><p>历史数据以JSON格式存储在/env/rpi-TempRuntime/web/data/min（或者hour）</p><h6 id="3-caddy部署"><a href="#3-caddy部署" class="headerlink" title="3.caddy部署"></a>3.caddy部署</h6><p>基本配置<a class="link"   href="https://pimylifeup.com/raspberry-pi-caddy-web-server/" >教程<i class="fas fa-external-link-alt"></i></a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl https://getcaddy.com | bash -s personal</span><br><span class="line">sudo mkdir /etc/caddy</span><br><span class="line">sudo nano /etc/caddy/Caddyfile</span><br></pre></td></tr></table></figure><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:80 localhost:8080 &#123;</span><br><span class="line">    /env/rpi-TempRuntime/web</span><br><span class="line">    gzip</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2019-02-12 DHT11温湿度监视图</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3sdjf4nj30sd0kcdhf.jpg"                      alt="DHT11温湿度监视图.jpg"                ></p><h5 id="第二个传感器"><a href="#第二个传感器" class="headerlink" title="第二个传感器"></a>第二个传感器</h5><h4 id="连接阿里云平台"><a href="#连接阿里云平台" class="headerlink" title="连接阿里云平台"></a>连接阿里云平台</h4><p>在阿里物联网平台 添加产品树莓派 增加设备 SCADA</p><p>在开发板上安装nodejs 和 npm</p><p>使用官方工具包</p><h4 id="配置python-SDK"><a href="#配置python-SDK" class="headerlink" title="配置python SDK"></a>配置python SDK</h4><p>更改 默认python为python3 <code>sudo rm -rf /usr/bin/python  sudo ln -s /usr/bin/python3  /usr/bin/python</code></p><p><a class="link"   href="https://help.aliyun.com/document_detail/98292.html?spm=a2c4g.11186623.6.619.418471bc5dZy7v" >教程<i class="fas fa-external-link-alt"></i></a></p><p>不能正常升级时 <a class="link"   href="http://blog.lxx1.com/3214" >教程<i class="fas fa-external-link-alt"></i></a></p><p>尝试三天后被迫放弃 官方SDK太烂 原以为我水平差看不懂 原来大家都看不懂…</p><p>还在公测阶段 选择方案3 socketio</p>]]></content>
    
    
    <summary type="html">开发公司网站</summary>
    
    
    
    <category term="code" scheme="https://wukong1024.github.io/categories/code/"/>
    
    
    <category term="learn" scheme="https://wukong1024.github.io/tags/learn/"/>
    
    <category term="unen" scheme="https://wukong1024.github.io/tags/unen/"/>
    
  </entry>
  
  <entry>
    <title>Nodejs</title>
    <link href="https://wukong1024.github.io/2019/02/15/nodejs/"/>
    <id>https://wukong1024.github.io/2019/02/15/nodejs/</id>
    <published>2019-02-15T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><h2 id="Linux设置"><a href="#Linux设置" class="headerlink" title="Linux设置"></a>Linux设置</h2><p>工欲善其事，必先利其器。开启本地虚拟机，打开deepin(国产优秀的linux系统),再通过finalshell连接</p><p>解决ssh无法远程连接到NAT模式的虚拟机的问题<a class="link"   href="https://blog.csdn.net/disalone201107/article/details/78411073" >方案<i class="fas fa-external-link-alt"></i></a></p><p>如何彻底卸载，安装和启动ssh服务<a class="link"   href="https://blog.csdn.net/qq_30770095/article/details/53516594" >方案<i class="fas fa-external-link-alt"></i></a></p><h2 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h2><p>NPM是随同NodeJS一起安装的包管理工具，下载第三方包或命令行</p><p>本地安装</p><ol><li>将安装包放在 ./node_modules 下（运行 npm 命令时所在的目录），如果没有=node_modules目录，会在当前执行 npm 命令的目录下生成 node_modules 目录。</li><li>可以通过 require() 来引入本地安装的包。</li></ol><p>全局安装</p><ol><li>将安装包放在 /usr/local 下或者你 node 的安装目录。</li><li>可以直接在命令行里使用。</li></ol><p>如果你希望具备两者功能，则需要在两个地方安装它或使用 npm link。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 升级 nmp</span><br><span class="line">sudo nmp install npm -g</span><br><span class="line"></span><br><span class="line"># 安装模块</span><br><span class="line">npm install express # 本地安装</span><br><span class="line">npm install express -g # 全局安装</span><br><span class="line"></span><br><span class="line"># 错误解决办法 npm err! Error: connect ECONNREFUSED 127.0.0.1:8087</span><br><span class="line">npm config set proxy null</span><br><span class="line"></span><br><span class="line"># 查看安装信息</span><br><span class="line">npm list -g  # 已安装的全局模块</span><br><span class="line">npm ls  # 已安装的本地模块</span><br><span class="line">npm list grunt  # 某个模块的版本号</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>npm 遇到 write access的问题怎么办</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 第一步：在你的用户文件下新建一个文件夹，这个.npm-global 名字可以用你自己喜欢的名字替换，推荐直接使用这个名字。</span><br><span class="line">mkdir ~/.npm-global</span><br><span class="line"></span><br><span class="line">#第二步：更改node的安装连接</span><br><span class="line">npm config set prefix &#x27;~/.npm-global&#x27;</span><br><span class="line"></span><br><span class="line">#第三步：在用户的profile下增加path，为的是系统能够找到可执行文件的目录</span><br><span class="line"> export PATH=~/.npm-global/bin:$PATH</span><br><span class="line"></span><br><span class="line">#第四步：update profile。使其生效</span><br><span class="line">source ~/.profile</span><br></pre></td></tr></table></figure><p>npm更新已安装模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install -g npm-check-updates</span><br><span class="line"></span><br><span class="line">ncu  # 查看更新</span><br><span class="line">ncu  # 更新</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用淘宝 NPM 镜像</p><p>你可以使用淘宝定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line">这样就可以使用 cnpm 命令来安装模块了：</span><br><span class="line"></span><br><span class="line">cnpm install [name]</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Nodejs学习</summary>
    
    
    
    <category term="code" scheme="https://wukong1024.github.io/categories/code/"/>
    
    
    <category term="learn" scheme="https://wukong1024.github.io/tags/learn/"/>
    
    <category term="Nodejs" scheme="https://wukong1024.github.io/tags/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title>实力至上</title>
    <link href="https://wukong1024.github.io/2019/02/04/%E5%AE%9E%E5%8A%9B%E8%87%B3%E4%B8%8A/"/>
    <id>https://wukong1024.github.io/2019/02/04/%E5%AE%9E%E5%8A%9B%E8%87%B3%E4%B8%8A/</id>
    <published>2019-02-04T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实力至上"><a href="#实力至上" class="headerlink" title="实力至上"></a>实力至上</h1><p>什么是恶？凡是源于虚弱的东西都是恶。――F·W·尼采『反基督』</p><p>深藏不露是一种卓越的才能。――拉罗什富科『箴言集』NO.245</p><p>人是唯一会交易的动物。因为没有狗会拿骨头去交换。――亚当·斯『国富论』</p><p>我们不必为他人隐藏本性而感到愤怒。<br>因为你自己也在隐藏本性。<br>――拉罗什富科『箴言集』NO.11</p><p>他人即地狱。<br>――让-保罗·萨特『禁闭』</p><p>谎言分两种。<br>关于过去的事实上的谎言以及关于未来的权利上的谎言。<br>――让-雅克·卢梭『爱弥儿：论教育』</p><p>宁可有聪明的敌人也不要有无知的朋友。<br>——『寓言诗』</p><p>进入此门者当舍弃一切希望。<br>——但丁 『神曲』</p><p>然而，人们泛称为命运的事情却通常都是自己做出来的蠢事。<br>——叔本华 『附录与补遗：哲学短片集』</p><p>天才就住在疯子的楼上。<br>——叔本华 『附录与补遗：哲学短片集』</p><p>人注定要受自由之苦。<br>——保罗·萨特『何为存在主义』</p><p>说到最危险的背叛者，就是所有人自身所隐藏起来的另一面。<br>——克尔凯郭尔『爱的作为』</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实力至上&quot;&gt;&lt;a href=&quot;#实力至上&quot; class=&quot;headerlink&quot; title=&quot;实力至上&quot;&gt;&lt;/a&gt;实力至上&lt;/h1&gt;&lt;p&gt;什么是恶？凡是源于虚弱的东西都是恶。――F·W·尼采『反基督』&lt;/p&gt;
&lt;p&gt;深藏不露是一种卓越的才能。――拉罗什富科『箴言</summary>
      
    
    
    
    <category term="read" scheme="https://wukong1024.github.io/categories/read/"/>
    
    
    <category term="read" scheme="https://wukong1024.github.io/tags/read/"/>
    
    <category term="笔记" scheme="https://wukong1024.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Django</title>
    <link href="https://wukong1024.github.io/2019/01/01/Django/"/>
    <id>https://wukong1024.github.io/2019/01/01/Django/</id>
    <published>2019-01-01T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h1><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><h3 id="软件列表"><a href="#软件列表" class="headerlink" title="软件列表"></a>软件列表</h3><p>python mysql navicat</p><h4 id="安装-mysql8-0"><a href="#安装-mysql8-0" class="headerlink" title="安装 mysql8.0"></a>安装 mysql8.0</h4><p>下载<a class="link"   href="https://dev.mysql.com/downloads/mysql/" >链接<i class="fas fa-external-link-alt"></i></a></p><p>安装<a class="link"   href="https://blog.csdn.net/qq_37350706/article/details/81707862" >教程<i class="fas fa-external-link-alt"></i></a></p><p>cmd 下登录 mysql <code>mysql -uroot -p</code></p><p>修改密码<code>ALTER USER &quot;root&quot;@&quot;localhost&quot; IDENTIFIED BY &quot;你的新密码&quot;;</code></p><h3 id="python-虚拟环境"><a href="#python-虚拟环境" class="headerlink" title="python 虚拟环境"></a>python 虚拟环境</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenv  安装模块虚拟环境模块</span><br><span class="line"></span><br><span class="line">pip install virtualenvwrapper-win  安装环境管理模块</span><br><span class="line"></span><br><span class="line">mkvirtualenv testenv  新建环境在Administrator/Envs/</span><br><span class="line"></span><br><span class="line">mkvirtualenv --python=python版本的python.exe路径 虚拟环境名称   指定版本</span><br><span class="line"></span><br><span class="line">rmvirtualenv &lt;name&gt; 删除环境</span><br><span class="line"></span><br><span class="line">workon 查看当前虚拟环境</span><br><span class="line"></span><br><span class="line">workon &lt;name&gt; 进入虚拟环境 (在cmd下运行)</span><br><span class="line"></span><br><span class="line">deactivate退出环境</span><br></pre></td></tr></table></figure><h3 id="安装依赖的包"><a href="#安装依赖的包" class="headerlink" title="安装依赖的包"></a>安装依赖的包</h3><p>替换国内镜像源<a class="link"   href="https://cloud.tencent.com/developer/article/1520882" >教程<i class="fas fa-external-link-alt"></i></a></p><p>导出 pip freeze &gt;r.txt</p><p>新建 r.txt 文件 pip install -r r.txt 安装</p><h3 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h3><p>在 settings.py 文件中配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">LANGUAGE_CODE = <span class="string">&#x27;zh-hans&#x27;</span></span><br><span class="line"></span><br><span class="line">TIME_ZONE = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"></span><br><span class="line">USE_I18N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_L10N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_TZ = <span class="literal">False</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="项目开始"><a href="#项目开始" class="headerlink" title="项目开始"></a>项目开始</h2><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">django-admin startproject mysite 创建django项目</span><br><span class="line">python manage.py runserver 8080 设置端口号</span><br><span class="line">python manage.py runserver 0.0.0.0:8080  监听所有公共ip</span><br><span class="line">python manage.py startapp &lt;name&gt; 创建应用后在INSTALLED_APPS中增加 &lt;name&gt;</span><br></pre></td></tr></table></figure><h3 id="搭建目录文件"><a href="#搭建目录文件" class="headerlink" title="搭建目录文件"></a>搭建目录文件</h3><p>apps 存放应用列表 同时在 setting 中增加 <code>sys.path.insert(0, os.path.join(BASE_DIR, &#39;apps&#39;))</code></p><p>log 存放日志</p><p>media 存放上传文件 增加 <code>MEDIA_URL = &#39;/media/&#39; MEDIA_ROOT = os.path.join(BASE_DIR, &#39;media&#39;)</code></p><p>static 全局静态文件 js css 静态图片 STATIC_URL 后增加<code>STATICFILES_DIRS = [os.path.join(BASE_DIR, &#39;static&#39;)]</code></p><p>templates 网页模板 在 TEMPLATES 下的 DIRS 中增加 <code>os.path.join(BASE_DIR, &#39;templates&#39;)</code></p><h3 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h3><p>先配置 MySQLdb<a class="link"   href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysql-python" >驱动<i class="fas fa-external-link-alt"></i></a> 下载对应版本后</p><p>虚拟环境下 pip install xx.whl pip install mysqlclient</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;MOOC&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>: <span class="string">&#x27;1234&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>python manage.py makemigrations</p><p>python manage.py migrate</p><p>迁移无效时，先删除之前的 makemigrations 生成的文件</p><h3 id="创建超级用户"><a href="#创建超级用户" class="headerlink" title="创建超级用户"></a>创建超级用户</h3><p><code>python manage.py createsuperuser</code></p><p>wukong 1234</p><h2 id="应用开发"><a href="#应用开发" class="headerlink" title="应用开发"></a>应用开发</h2><h3 id="models"><a href="#models" class="headerlink" title="models"></a>models</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserMessage</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">u&#x27;用户名&#x27;</span>)  <span class="comment"># 对字段的注释</span></span><br><span class="line">    email = models.EmailField(verbose_name=<span class="string">u&#x27;邮箱&#x27;</span>)</span><br><span class="line">    address = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u&#x27;地址&#x27;</span>)</span><br><span class="line">    message = models.CharField(max_length=<span class="number">500</span>, verbose_name=<span class="string">u&#x27;留言信息&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u&#x27;用户留言信息&#x27;</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">        <span class="comment"># db_table=&#x27;user_message&#x27;  # 指定表名</span></span><br><span class="line">        <span class="comment"># ordering = &#x27;-id&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="用户的登录和注册"><a href="#用户的登录和注册" class="headerlink" title="用户的登录和注册"></a>用户的登录和注册</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重定义验证方式</span></span><br><span class="line">AUTHENTICATION_BACKENDS = (</span><br><span class="line">    <span class="string">&#x27;users.views.CustomBacked&#x27;</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>安装 <code>django-simple-captcha</code> APPS 下增加 captcha</p><h2 id="附加包开发"><a href="#附加包开发" class="headerlink" title="附加包开发"></a>附加包开发</h2><h3 id="xadmin"><a href="#xadmin" class="headerlink" title="xadmin"></a>xadmin</h3><p>下载 xadmin <a class="link"   href="https://github.com/sshwsfc/xadmin" >链接<i class="fas fa-external-link-alt"></i></a></p><p>新建 extra_apps 文件夹 将 xadmin 复制到其中 注册 xadmin 和 crispy_forms 将 extra_apps 加入系统路径</p><p>配置后需要更新数据库</p><p>个性化配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseSetting</span>(<span class="params"><span class="built_in">object</span></span>):</span>  <span class="comment"># 设置主题</span></span><br><span class="line">    enable_themes = <span class="literal">True</span></span><br><span class="line">    use_bootswatch = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GlobalSettings</span>(<span class="params"><span class="built_in">object</span></span>):</span>  <span class="comment"># 设置标题</span></span><br><span class="line">    site_title = <span class="string">&#x27;WMOOC&#x27;</span></span><br><span class="line">    site_footer = <span class="string">&#x27;Wukong&#x27;</span></span><br><span class="line">    menu_style = <span class="string">&#x27;accordion&#x27;</span>  <span class="comment"># 折叠目录</span></span><br><span class="line"></span><br><span class="line">xadmin.site.register(views.BaseAdminView, BaseSetting)</span><br><span class="line">xadmin.site.register(views.CommAdminView, GlobalSettings)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>django 主题失败解决方案 修改<code>/xadmin/plugins/themes.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> httplib2</span><br><span class="line"><span class="keyword">from</span> django.template <span class="keyword">import</span> loader</span><br><span class="line"><span class="keyword">from</span> django.core.cache <span class="keyword">import</span> cache</span><br><span class="line"><span class="keyword">from</span> django.utils <span class="keyword">import</span> six</span><br><span class="line"><span class="keyword">from</span> django.utils.translation <span class="keyword">import</span> ugettext <span class="keyword">as</span> _</span><br><span class="line"><span class="keyword">from</span> xadmin.sites <span class="keyword">import</span> site</span><br><span class="line"><span class="keyword">from</span> xadmin.models <span class="keyword">import</span> UserSettings</span><br><span class="line"><span class="keyword">from</span> xadmin.views <span class="keyword">import</span> BaseAdminPlugin, BaseAdminView</span><br><span class="line"><span class="keyword">from</span> xadmin.util <span class="keyword">import</span> static, json</span><br><span class="line"><span class="keyword">import</span> six</span><br><span class="line"><span class="keyword">if</span> six.PY2:</span><br><span class="line">    <span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line">THEME_CACHE_KEY = <span class="string">&#x27;xadmin_themes&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThemePlugin</span>(<span class="params">BaseAdminPlugin</span>):</span></span><br><span class="line"></span><br><span class="line">    enable_themes = <span class="literal">False</span></span><br><span class="line">    <span class="comment"># &#123;&#x27;name&#x27;: &#x27;Blank Theme&#x27;, &#x27;description&#x27;: &#x27;...&#x27;, &#x27;css&#x27;: &#x27;http://...&#x27;, &#x27;thumbnail&#x27;: &#x27;...&#x27;&#125;</span></span><br><span class="line">    user_themes = <span class="literal">None</span></span><br><span class="line">    use_bootswatch = <span class="literal">False</span></span><br><span class="line">    default_theme = static(<span class="string">&#x27;xadmin/css/themes/bootstrap-xadmin.css&#x27;</span>)</span><br><span class="line">    bootstrap2_theme = static(<span class="string">&#x27;xadmin/css/themes/bootstrap-theme.css&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">init_request</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.enable_themes</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_theme</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.user:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">return</span> UserSettings.objects.get(user=self.user, key=<span class="string">&quot;site-theme&quot;</span>).value</span><br><span class="line">            <span class="keyword">except</span> Exception:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;_theme&#x27;</span> <span class="keyword">in</span> self.request.COOKIES:</span><br><span class="line">            <span class="keyword">if</span> six.PY2:</span><br><span class="line">                func = urllib.unquote</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                func = urllib.parse.unquote</span><br><span class="line">            <span class="keyword">return</span> func(self.request.COOKIES[<span class="string">&#x27;_theme&#x27;</span>])</span><br><span class="line">        <span class="keyword">return</span> self.default_theme</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_context</span>(<span class="params">self, context</span>):</span></span><br><span class="line">        context[<span class="string">&#x27;site_theme&#x27;</span>] = self._get_theme()</span><br><span class="line">        <span class="keyword">return</span> context</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Media</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_media</span>(<span class="params">self, media</span>):</span></span><br><span class="line">        <span class="keyword">return</span> media + self.vendor(<span class="string">&#x27;jquery-ui-effect.js&#x27;</span>, <span class="string">&#x27;xadmin.plugin.themes.js&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Block Views</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">block_top_navmenu</span>(<span class="params">self, context, nodes</span>):</span></span><br><span class="line"></span><br><span class="line">        themes = [</span><br><span class="line">            &#123;<span class="string">&#x27;name&#x27;</span>: _(<span class="string">u&quot;Default&quot;</span>), <span class="string">&#x27;description&#x27;</span>: _(<span class="string">u&quot;Default bootstrap theme&quot;</span>), <span class="string">&#x27;css&#x27;</span>: self.default_theme&#125;,</span><br><span class="line">            &#123;<span class="string">&#x27;name&#x27;</span>: _(<span class="string">u&quot;Bootstrap2&quot;</span>), <span class="string">&#x27;description&#x27;</span>: _(<span class="string">u&quot;Bootstrap 2.x theme&quot;</span>), <span class="string">&#x27;css&#x27;</span>: self.bootstrap2_theme&#125;,</span><br><span class="line">            ]</span><br><span class="line">        select_css = context.get(<span class="string">&#x27;site_theme&#x27;</span>, self.default_theme)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.user_themes:</span><br><span class="line">            themes.extend(self.user_themes)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.use_bootswatch:</span><br><span class="line">            ex_themes = cache.get(THEME_CACHE_KEY)</span><br><span class="line">            <span class="keyword">if</span> ex_themes:</span><br><span class="line">                themes.extend(json.loads(ex_themes))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ex_themes = []</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    h = httplib2.Http()</span><br><span class="line">                    resp, content = h.request(<span class="string">&quot;https://bootswatch.com/api/3.json&quot;</span>, <span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                        headers=&#123;<span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json&quot;</span>, <span class="string">&quot;User-Agent&quot;</span>: self.request.META[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>]&#125;)</span><br><span class="line">                    <span class="keyword">if</span> six.PY3:</span><br><span class="line">                        content = content.decode()</span><br><span class="line">                    watch_themes = json.loads(content)[<span class="string">&#x27;themes&#x27;</span>]</span><br><span class="line">                    ex_themes.extend([</span><br><span class="line">                        &#123;<span class="string">&#x27;name&#x27;</span>: t[<span class="string">&#x27;name&#x27;</span>], <span class="string">&#x27;description&#x27;</span>: t[<span class="string">&#x27;description&#x27;</span>],</span><br><span class="line">                            <span class="string">&#x27;css&#x27;</span>: t[<span class="string">&#x27;cssMin&#x27;</span>], <span class="string">&#x27;thumbnail&#x27;</span>: t[<span class="string">&#x27;thumbnail&#x27;</span>]&#125;</span><br><span class="line">                        <span class="keyword">for</span> t <span class="keyword">in</span> watch_themes])</span><br><span class="line">                <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                    <span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line">                cache.<span class="built_in">set</span>(THEME_CACHE_KEY, json.dumps(ex_themes), <span class="number">24</span> * <span class="number">3600</span>)</span><br><span class="line">                themes.extend(ex_themes)</span><br><span class="line"></span><br><span class="line">        nodes.append(loader.render_to_string(<span class="string">&#x27;xadmin/blocks/comm.top.theme.html&#x27;</span>, &#123;<span class="string">&#x27;themes&#x27;</span>: themes, <span class="string">&#x27;select_css&#x27;</span>: select_css&#125;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">site.register_plugin(ThemePlugin, BaseAdminView)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="template"><a href="#template" class="headerlink" title="template"></a>template</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data-url=<span class="string">&quot;&#123;&#123;MEDIA.URL&#125;&#125;&#123;&#123;course_org.image&#125;&#125;&quot;</span></span><br><span class="line"><span class="comment"># settings.py context_processors中增加</span></span><br><span class="line"><span class="comment"># 将 MEDIA.URL 注册到 html</span></span><br><span class="line">django.core.context_processors.media</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="页码"><a href="#页码" class="headerlink" title="页码"></a>页码</h3><p><code>pip install django-pure-pagination</code></p><p>INSTALLED_APPS=(<br>…<br>‘pure_pagination’,<br>)</p>]]></content>
    
    
    <summary type="html">Django开发网站笔记</summary>
    
    
    
    <category term="code" scheme="https://wukong1024.github.io/categories/code/"/>
    
    
    <category term="work" scheme="https://wukong1024.github.io/tags/work/"/>
    
    <category term="Django" scheme="https://wukong1024.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>丑陋的中国人</title>
    <link href="https://wukong1024.github.io/2018/12/14/%E4%B8%91%E9%99%8B%E7%9A%84%E4%B8%AD%E5%9B%BD%E4%BA%BA/"/>
    <id>https://wukong1024.github.io/2018/12/14/%E4%B8%91%E9%99%8B%E7%9A%84%E4%B8%AD%E5%9B%BD%E4%BA%BA/</id>
    <published>2018-12-14T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="丑陋的中国人"><a href="#丑陋的中国人" class="headerlink" title="丑陋的中国人"></a>丑陋的中国人</h1><p>为什么喧哗，因为没有安全感<br>中国人最拿手的就是内斗<br>永远带着面具生活<br>中国人喜欢讲大话，喜欢讲空话，喜欢讲假话，喜欢讲谎话，更喜欢讲毒话。<br>狭窄的心胸，没有包容性的性格，造成了两个极端。一方面绝对的自卑，成为了奴才，像团狗屎；另一方面绝对的自傲，成为主人，觉得其他人都是狗屎；唯独，没有自尊。<br>中国人是天下最容易膨胀的民族，为什么容易膨胀？因为中国人“器小易盈”，见识太少，心胸太窄，稍稍有一点气候，就认为天地虽大，已装不下他。<br>神经质的恐惧，是培养暴君最好的温床，所以中国的暴君永远不会绝迹。<br>中国人喜欢做官，这是大家所公认的，谁都难以反驳。只要有人给他做官，他就会服服帖帖地把民族意识，和人性尊严，全部交出来。<br>中国人太聪明，太聪明的极致一定是太自私，凡是不自私的行为，不自私的想法，都被讥笑为傻子</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;丑陋的中国人&quot;&gt;&lt;a href=&quot;#丑陋的中国人&quot; class=&quot;headerlink&quot; title=&quot;丑陋的中国人&quot;&gt;&lt;/a&gt;丑陋的中国人&lt;/h1&gt;&lt;p&gt;为什么喧哗，因为没有安全感&lt;br&gt;中国人最拿手的就是内斗&lt;br&gt;永远带着面具生活&lt;br&gt;中国人喜欢讲大话，喜</summary>
      
    
    
    
    <category term="read" scheme="https://wukong1024.github.io/categories/read/"/>
    
    
    <category term="read" scheme="https://wukong1024.github.io/tags/read/"/>
    
    <category term="笔记" scheme="https://wukong1024.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Python</title>
    <link href="https://wukong1024.github.io/2018/11/23/Python/"/>
    <id>https://wukong1024.github.io/2018/11/23/Python/</id>
    <published>2018-11-23T00:00:00.000Z</published>
    <updated>2022-04-02T04:00:18.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><p>[TOC]</p><h2 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h2><h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h3><p>只能出现一次  并 自动排序 a={}  或  a=set([])</p><h3 id="检查对象"><a href="#检查对象" class="headerlink" title="检查对象"></a>检查对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dir</span>(a))</span><br></pre></td></tr></table></figure><h3 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h3><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3vgiqvnj30pa0h5q5a.jpg"                      alt="python数据类型转换.jpg"                ></p><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><h4 id="类的继承"><a href="#类的继承" class="headerlink" title="类的继承"></a>类的继承</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fish</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.name=<span class="string">&quot;fish&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Salmon</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__() <span class="comment"># 调用防止覆盖</span></span><br><span class="line">        self.sex=<span class="string">&quot;male&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="私有属性"><a href="#私有属性" class="headerlink" title="私有属性"></a>私有属性</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>:</span></span><br><span class="line">    __name=<span class="string">&quot;悟空&quot;</span> <span class="comment"># 私有属性外部不可直接调用</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getName</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__name</span><br></pre></td></tr></table></figure><h4 id="BIF"><a href="#BIF" class="headerlink" title="BIF"></a>BIF</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">issubclass</span>(<span class="class"><span class="keyword">class</span>,<span class="title">classinfo</span>) # 判断是否为其子类</span></span><br><span class="line"><span class="class"><span class="title">isinstance</span>(<span class="params"><span class="built_in">object</span>,classinfo</span>) # 判断对象是否属于类</span></span><br><span class="line"><span class="class"><span class="title">hasattr</span>(<span class="params"><span class="built_in">object</span>,name</span>) # 判断属性是否属于对象</span></span><br><span class="line"><span class="class"><span class="title">getattr</span>(<span class="params"><span class="built_in">object</span>,name[,default]</span>) # 返回对象的属性值</span></span><br><span class="line"><span class="class"><span class="title">setattr</span>(<span class="params"><span class="built_in">object</span>,name,value</span>) # 设置对象的属性值</span></span><br><span class="line"><span class="class"><span class="title">delattr</span>(<span class="params"><span class="built_in">object</span>,name</span>) # 删除对象的属性值</span></span><br></pre></td></tr></table></figure><h4 id="property"><a href="#property" class="headerlink" title="property"></a>property</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">property</span>(fget=<span class="literal">None</span>, fset=<span class="literal">None</span>, fdel=<span class="literal">None</span>, doc=<span class="literal">None</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, age</span>):</span></span><br><span class="line">        self._name = name</span><br><span class="line">        self._age = age</span><br><span class="line">        self._color = <span class="string">&#x27;Black&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_name</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self._name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_name</span>(<span class="params">self, value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(value, <span class="built_in">str</span>):</span><br><span class="line">            self._name = value</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self._name = <span class="string">&#x27;No name&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">del_name</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">del</span> self._name</span><br><span class="line"></span><br><span class="line">    name = <span class="built_in">property</span>(fget=get_name, fset=set_name,</span><br><span class="line">                    fdel=del_name, doc=<span class="string">&#x27;name of an animal&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_age</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self._age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_age</span>(<span class="params">self, value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> value &gt; <span class="number">0</span> <span class="keyword">and</span> value &lt; <span class="number">100</span>:</span><br><span class="line">            self._age = value</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self._age = <span class="number">0</span></span><br><span class="line">            <span class="comment"># print &#x27;invalid age value.&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">del_age</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">del</span> self._age</span><br><span class="line"></span><br><span class="line">    age = <span class="built_in">property</span>(fget=get_age, fset=set_age,</span><br><span class="line">                   fdel=del_age, doc=<span class="string">&#x27;age of an animal&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = Animal(<span class="string">&#x27;black dog&#x27;</span>, <span class="number">3</span>)</span><br><span class="line">a.name = <span class="string">&#x27;white dog&#x27;</span></span><br><span class="line">a.age = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Name:&#x27;</span>, a.name)</span><br><span class="line"><span class="built_in">print</span>(Animal.name.__doc__)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Age:&#x27;</span>, a.age)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="属性访问"><a href="#属性访问" class="headerlink" title="属性访问"></a>属性访问</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,width=<span class="number">0</span>,height=<span class="number">0</span></span>):</span></span><br><span class="line">        self.width=width</span><br><span class="line">        self.height=height</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setattr__</span>(<span class="params">self.name,value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> name == <span class="string">&#x27;square&#x27;</span>:</span><br><span class="line">            self.width=value</span><br><span class="line">            self.height=value</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">super</span>().__setattr__(name,value)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getArea</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.width*self.height</span><br></pre></td></tr></table></figure><h4 id="斐波那契迭代"><a href="#斐波那契迭代" class="headerlink" title="斐波那契迭代"></a>斐波那契迭代</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fibs</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,n=<span class="number">10</span></span>):</span></span><br><span class="line">        self.a=<span class="number">0</span></span><br><span class="line">        self.b=<span class="number">1</span></span><br><span class="line">        self.n=n</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__next__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.a,self.b=self.b,self.a+self.b</span><br><span class="line">        <span class="keyword">if</span> self.a&gt;self.n:</span><br><span class="line">            <span class="keyword">raise</span> StopIteration</span><br><span class="line">        <span class="keyword">return</span> self.a</span><br><span class="line">fibs=Fibs(<span class="number">100</span>)</span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> fibs:</span><br><span class="line">    <span class="built_in">print</span>(each)</span><br></pre></td></tr></table></figure><h4 id="斐波那契生成器"><a href="#斐波那契生成器" class="headerlink" title="斐波那契生成器"></a>斐波那契生成器</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">libs</span>():</span></span><br><span class="line">    a=<span class="number">0</span></span><br><span class="line">    b=<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        a,b=b,a+b</span><br><span class="line">        <span class="keyword">yield</span> a</span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> libs():</span><br><span class="line">    <span class="keyword">if</span> each &gt;<span class="number">100</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(each,end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="推导式"><a href="#推导式" class="headerlink" title="推导式"></a>推导式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  列表推导式</span></span><br><span class="line">a = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>) <span class="keyword">if</span> <span class="keyword">not</span> ( i % <span class="number">2</span>) <span class="keyword">and</span> i % <span class="number">3</span>]</span><br><span class="line"><span class="comment"># 字典推导式</span></span><br><span class="line">b = &#123;i: i % <span class="number">2</span>==<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>) &#125;</span><br></pre></td></tr></table></figure><h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3><h4 id="main"><a href="#main" class="headerlink" title="main"></a>main</h4><p>if <strong>name</strong>=”<strong>main</strong>“</p><h4 id="sys"><a href="#sys" class="headerlink" title="sys"></a>sys</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sys.path</span><br><span class="line"><span class="comment"># 将本地路径添加到系统路径</span></span><br><span class="line">sys.path.append(<span class="string">&quot;c:\\xxxx\\xxxx&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="包"><a href="#包" class="headerlink" title="包"></a>包</h4><p>在包含多个模块文件目录下创建__init.py__文件可以为空<br>调用方式 import M1.test</p><h4 id="模块使用"><a href="#模块使用" class="headerlink" title="模块使用"></a>模块使用</h4><p>test.<strong>doc</strong><br>test.<strong>file</strong><br>help(test)</p><h2 id="实时天气"><a href="#实时天气" class="headerlink" title="实时天气"></a>实时天气</h2><h3 id="pickle"><a href="#pickle" class="headerlink" title="pickle"></a>pickle</h3><h4 id="读数据"><a href="#读数据" class="headerlink" title="读数据"></a>读数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cities=&#123;&#125;</span><br><span class="line">pickle_file = <span class="built_in">open</span>(<span class="string">&#x27;city_data.pkl&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">pickle.dump(cities, pickle_file)</span><br><span class="line">pickle_file.close()</span><br></pre></td></tr></table></figure><h4 id="取数据"><a href="#取数据" class="headerlink" title="取数据"></a>取数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pickle_file = <span class="built_in">open</span>(<span class="string">&#x27;city_data.pkl&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">cities = pickle.load(pickle_file)</span><br></pre></td></tr></table></figure><h3 id="天气api"><a href="#天气api" class="headerlink" title="天气api"></a>天气api</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https://free-api.heweather.com/s6/weather/lifestyle?&#123;</span><br><span class="line">    location=haikou|海口|CNxxxxxxxxx|auto_ip</span><br><span class="line">    key=669d03a83ebf4f83b0ee9e4bbd2a09ce&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request <span class="keyword">as</span> ur</span><br><span class="line">file_life = ur.urlopen(</span><br><span class="line">    <span class="string">&#x27;https://free-api.heweather.com/s6/weather/lifestyle?location=haikou&amp;key=669d03a83ebf4f83b0ee9e4bbd2a09ce&#x27;</span>)</span><br><span class="line">HTML_life = file_life.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="comment"># print(HTML_life)</span></span><br><span class="line">JSON_life = json.JSONDecoder().decode(HTML_life)</span><br><span class="line"><span class="comment"># print(JSON_life)</span></span><br><span class="line">life = JSON_life[<span class="string">&quot;HeWeather6&quot;</span>][<span class="number">0</span>]</span><br><span class="line">now = JSON_now[<span class="string">&quot;HeWeather6&quot;</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure><h2 id="spider"><a href="#spider" class="headerlink" title="spider"></a>spider</h2><h3 id="HTTP原理"><a href="#HTTP原理" class="headerlink" title="HTTP原理"></a>HTTP原理</h3><h4 id="HTTP请求方式"><a href="#HTTP请求方式" class="headerlink" title="HTTP请求方式"></a>HTTP请求方式</h4><p>常用的请求方式是GET和POST：</p><p>GET请求：是以实体的方式得到由请求URL所指定资源的信息，一般来说我们输入一个网址时，默认的请求就是GET请求。</p><p>POST请求：用来向目的服务器发出请求，要求它接受被附在请求后的实体，并把它当作请求队列中请求URL所指定资源的附加新子项。比如网页上的注册、登录等等都是POST请求。</p><p>GET与POST方法有以下区别：</p><p>在客户端，GET方式通过URL提交数据，数据在URL中可以看到；POST方式的数据放置在实体区内提交，不能直接看到。</p><p>GET方式提交的数据最多只能有1024个字节，而POST则没有此限制。</p><p>安全性问题，使用GET的时候，参数会显示在地址栏上，而POST不会，所以，如果这些数据是非敏感数据，那么使用GET；如果用户输入的数据包含敏感数据，那么还是使用POST提交比较靠谱。（其实POST也是不安全的）</p><h4 id="HTTP状态码含义"><a href="#HTTP状态码含义" class="headerlink" title="HTTP状态码含义"></a>HTTP状态码含义</h4><p>1xx （临时响应）</p><p> 表示临时响应并需要请求者继续执行操作的状态代码。</p><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>100</td><td>（继续） 请求者应当继续提出请求。 服务器返回此代码表示已收到请求的第一部分，正在等待其余部分。</td></tr><tr><td>101</td><td>（切换协议） 请求者已要求服务器切换协议，服务器已确认并准备切换。</td></tr></tbody></table><p>2xx （成功）</p><p>表示成功处理了请求的状态代码。</p><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>200</td><td>（成功） 服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。</td></tr><tr><td>201</td><td>（已创建） 请求成功并且服务器创建了新的资源。</td></tr><tr><td>202</td><td>（已接受） 服务器已接受请求，但尚未处理。</td></tr><tr><td>203</td><td>（非授权信息） 服务器已成功处理了请求，但返回的信息可能来自另一来源。</td></tr><tr><td>204</td><td>（无内容） 服务器成功处理了请求，但没有返回任何内容。</td></tr><tr><td>205</td><td>（重置内容） 服务器成功处理了请求，但没有返回任何内容。</td></tr><tr><td>206</td><td>（部分内容） 服务器成功处理了部分 GET 请求。</td></tr></tbody></table><p>3xx （重定向</p><p>表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。</p><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>300</td><td>（多种选择） 针对请求，服务器可执行多种操作。 服务器可根据请求者 (user agent) 选择一项操作，或提供操作列表供请求者选择。</td></tr><tr><td>301</td><td>（永久移动） 请求的网页已永久移动到新位置。 服务器返回此响应（对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。</td></tr><tr><td>302</td><td>（临时移动） 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</td></tr><tr><td>303</td><td>（查看其他位置） 请求者应当对不同的位置使用单独的 GET 请求来检索响应时，服务器返回此代码。</td></tr><tr><td>304</td><td>（未修改） 自从上次请求后，请求的网页未修改过。 服务器返回此响应时，不会返回网页内容。</td></tr><tr><td>305</td><td>（使用代理） 请求者只能使用代理访问请求的网页。 如果服务器返回此响应，还表示请求者应使用代理。</td></tr><tr><td>307</td><td>（临时重定向） 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</td></tr></tbody></table><p>4xx（请求错误）</p><p>这些状态代码表示请求可能出错，妨碍了服务器的处理。</p><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>400</td><td>（错误请求） 服务器不理解请求的语法。</td></tr><tr><td>401</td><td>（未授权） 请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。</td></tr><tr><td>403</td><td>（禁止） 服务器拒绝请求。</td></tr><tr><td>404</td><td>（未找到） 服务器找不到请求的网页。</td></tr><tr><td>405</td><td>（方法禁用） 禁用请求中指定的方法。</td></tr><tr><td>406</td><td>（不接受） 无法使用请求的内容特性响应请求的网页。</td></tr><tr><td>407</td><td>（需要代理授权） 此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理。</td></tr><tr><td>408</td><td>（请求超时） 服务器等候请求时发生超时。</td></tr><tr><td>409</td><td>（冲突） 服务器在完成请求时发生冲突。 服务器必须在响应中包含有关冲突的信息。</td></tr><tr><td>410</td><td>（已删除） 如果请求的资源已永久删除，服务器就会返回此响应。</td></tr><tr><td>411</td><td>（需要有效长度） 服务器不接受不含有效内容长度标头字段的请求。</td></tr><tr><td>412</td><td>（未满足前提条件） 服务器未满足请求者在请求中设置的其中一个前提条件。</td></tr><tr><td>413</td><td>（请求实体过大） 服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。</td></tr><tr><td>414</td><td>（请求的 URI 过长） 请求的 URI（通常为网址）过长，服务器无法处理。</td></tr><tr><td>415</td><td>（不支持的媒体类型） 请求的格式不受请求页面的支持。</td></tr><tr><td>416</td><td>（请求范围不符合要求） 如果页面无法提供请求的范围，则服务器会返回此状态代码。</td></tr><tr><td>417</td><td>（未满足期望值） 服务器未满足”期望”请求标头字段的要求</td></tr></tbody></table><p>5xx（服务器错误）</p><p>这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。</p><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>500</td><td>（服务器内部错误） 服务器遇到错误，无法完成请求。</td></tr><tr><td>501</td><td>（尚未实施） 服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。</td></tr><tr><td>502</td><td>（错误网关） 服务器作为网关或代理，从上游服务器收到无效响应。</td></tr><tr><td>503</td><td>（服务不可用） 服务器目前无法使用（由于超载或停机维护）。 通常，这只是暂时状态。</td></tr><tr><td>504</td><td>（网关超时） 服务器作为网关或代理，但是没有及时从上游服务器收到请求。</td></tr><tr><td>505</td><td>（HTTP 版本不受支持） 服务器不支持请求中所用的 HTTP 协议版本。</td></tr></tbody></table><h4 id="HTTP头部信息"><a href="#HTTP头部信息" class="headerlink" title="HTTP头部信息"></a>HTTP头部信息</h4><h5 id="Request-Header"><a href="#Request-Header" class="headerlink" title="Request Header"></a>Request Header</h5><p>Accept请求报头域，用于指定客户端接收哪些类型的信息。</p><p>Accept-Encoding请求报头域，用于指定客户端可接受的内容编码。</p><p>Accept-Language请求报头域，类似Accept，但是它用于指定一种自然语言。</p><p>Connection报头域允许发送用于指定连接的选项。</p><p>Cookie辨别用户身份、进行 session 跟踪而储存在用户本地终端上的数据（通常经过加密）</p><p>Host头域，用于指定请求资源的intenet主机和端口号，必须表示请求URL的原始服务器或网关的位置。</p><p>User-Agent头域，里面包含发出请求的用户信息，其中有使用浏览器的型号，版本和操作系统的信息。这个头域经常用来作为反爬虫的措施。</p><h5 id="Response-Header"><a href="#Response-Header" class="headerlink" title="Response Header"></a>Response Header</h5><p>Cache-Contorl用于指定缓存指定，缓存指令是单向的，且是独立的。</p><p>Content-Type 实体报头域用于指明发送给接收者的实体正文的媒体类型。</p><p>Date表示消息产生的日期和时间</p><p>Expires-CT实体报头域给出响应过期日期和时间。（用来查看缓存过期时间）</p><p>Last-Modified实体报头域用于指示资源的最后修改日期和时间。</p><p>Transfer-Encoding：chunked表示输出的内容长度不能确定</p><h3 id="urllib"><a href="#urllib" class="headerlink" title="urllib"></a>urllib</h3><p>参考链接：<code>https://cloud.tencent.com/developer/news/207605</code><br><code>https://docs.python.org/3/library/urllib.request.html</code></p><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>Python3中urllib是一个URL处理包，这个包中集合了一些处理URL的模块，包括了request模块、error模块、parse模块和robotparser模块。</p><ul><li>urllib.request模块是用来打开和读取URL的；</li><li>urllib.error模块包含一些有urllib.request产生 的错误，可以使用try进行捕捉处理；</li><li>urllib.parse模块包含了一些解析URLs的方法；</li><li>urllib.robotparser模块用来解析robots.txt文本文件.它提供了一个单独的RobotFileParser类，通过该类提供的can_fetch()方法测试爬虫是否可以下载一个页面。</li></ul><h4 id="request"><a href="#request" class="headerlink" title="request"></a>request</h4><h5 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h5><p>urllib.request.urlopen(url) 可以直接打开url地址，但是如果需要执行更复杂的操作，比如增加HTTP报头，则必须创建一个Request实例来作为urlopen()的参数，而需要访问的url地址则作为Request实例的参数。</p><p>urllib.request.Request(url, data=None, headers={}, origin_req_host=None, unverifiable=False, method=None)</p><p>Request实例参数</p><ul><li>data（默认为空）：是伴随url提交的数据（比如post的数据），同时HTTP请求将从“GET”方式改为“POST”方式。</li><li>headers（默认为空）：是一个字典，包含了需要发送的HTTP报头的键值对。<ul><li>User-Agent伪装成公认的浏览器</li><li>调用Request.add_header() 添加/修改一个特定的header</li><li>调用Request.get_header()来查看已有的header。</li></ul></li></ul><p>基本教程示例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line"><span class="comment"># chrome 的 User-Agent，包含在 header里</span></span><br><span class="line">header = &#123;<span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构造Request请求 返回&lt;urllib.request.Request object at 0x02C4C450&gt;</span></span><br><span class="line">request = urllib.request.Request(<span class="string">&quot;http://www.baidu.com/&quot;</span>, headers = header)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用Request.add_header() 添加/修改一个特定的header</span></span><br><span class="line">request.add_header(<span class="string">&quot;Connection&quot;</span>, <span class="string">&quot;keep-alive&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 向服务器发送请求 返回&lt;http.client.HTTPResponse object at 0x09135850&gt;</span></span><br><span class="line">response = urllib.request.urlopen(request)</span><br><span class="line"></span><br><span class="line">html = response.read().decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(html)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">request类Request方法常用的内置方法</span><br><span class="line"></span><br><span class="line">Request.add_data(data)  设置data参数，如果一开始创建的时候没有给data参数，那么可以使用该方法追加data 参数</span><br><span class="line"></span><br><span class="line">Request.get_method() 返回HTTP请求方法，一般返回GET或是POST</span><br><span class="line"></span><br><span class="line">Request.has_data() 查看是否设置了data参数</span><br><span class="line"></span><br><span class="line">Request.get_data() 获取data参数的数据</span><br><span class="line"></span><br><span class="line">Request.add_header(key, val) 添加头部信息，key为头域名，val为域值</span><br><span class="line"></span><br><span class="line">Request.get_full_url() 获取请求的完整url</span><br><span class="line"></span><br><span class="line">Request.get_host() 返回请求url的host（主域名）</span><br><span class="line"></span><br><span class="line">Request.set_proxy(host, type) 设置代理，第一个参数是代理ip和端口，第二个参数是代理类型（http/https)</span><br></pre></td></tr></table></figure><h5 id="微博登录示例"><a href="#微博登录示例" class="headerlink" title="微博登录示例"></a>微博登录示例</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request, parse</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Login to weibo.cn...&#x27;</span>)</span><br><span class="line">email = <span class="built_in">input</span>(<span class="string">&#x27;Email: &#x27;</span>)</span><br><span class="line">passwd = <span class="built_in">input</span>(<span class="string">&#x27;Password: &#x27;</span>)</span><br><span class="line">login_data = parse.urlencode([</span><br><span class="line">    (<span class="string">&#x27;username&#x27;</span>, email),</span><br><span class="line">    (<span class="string">&#x27;password&#x27;</span>, passwd),</span><br><span class="line">    (<span class="string">&#x27;entry&#x27;</span>, <span class="string">&#x27;mweibo&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;client_id&#x27;</span>, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;savestate&#x27;</span>, <span class="string">&#x27;1&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;ec&#x27;</span>, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;pagerefer&#x27;</span>, <span class="string">&#x27;https://passport.weibo.cn/signin/welcome?entry=mweibo&amp;r=http%3A%2F%2Fm.weibo.cn%2F&#x27;</span>)</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">req = request.Request(<span class="string">&#x27;https://passport.weibo.cn/sso/login&#x27;</span>)</span><br><span class="line">req.add_header(<span class="string">&#x27;Origin&#x27;</span>, <span class="string">&#x27;https://passport.weibo.cn&#x27;</span>)</span><br><span class="line">req.add_header(<span class="string">&#x27;User-Agent&#x27;</span>, <span class="string">&#x27;Mozilla/6.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/8.0 Mobile/10A5376e Safari/8536.25&#x27;</span>)</span><br><span class="line">req.add_header(<span class="string">&#x27;Referer&#x27;</span>, <span class="string">&#x27;https://passport.weibo.cn/signin/login?entry=mweibo&amp;res=wel&amp;wm=3349&amp;r=http%3A%2F%2Fm.weibo.cn%2F&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> request.urlopen(req, data=login_data.encode(<span class="string">&#x27;utf-8&#x27;</span>)) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Status:&#x27;</span>, f.status, f.reason)</span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> f.getheaders():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s: %s&#x27;</span> % (k, v))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Data:&#x27;</span>, f.read().decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><h3 id="Beautiful-Soup4"><a href="#Beautiful-Soup4" class="headerlink" title="Beautiful Soup4"></a>Beautiful Soup4</h3><p>参考链接:<code>https://beautifulsoup.readthedocs.io/zh_CN/latest/</code><br><code>https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.html</code></p><h4 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h4><p>Beautiful Soup 是一个可以从HTML或XML文件中提取数据的Python库.它能够通过你喜欢的转换器实现惯用的文档导航,查找,修改文档的方式.</p><h4 id="对象的种类"><a href="#对象的种类" class="headerlink" title="对象的种类"></a>对象的种类</h4><p>得到BeautifulSoup对象 并按标准格式输出<br><code>soup = BeautifulSoup(html, &quot;html.parser&quot;)</code></p><p>Beautiful Soup将复杂HTML文档转换成一个复杂的树形结构,每个节点都是Python对象,所有对象可以归纳为4种:  BeautifulSoup,Tag, NavigableString, Comment</p><h5 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h5><p>BeautifulSoup 对象表示的是一个文档的全部内容.大部分时候,可以把它当作 Tag 对象</p><h5 id="Tag"><a href="#Tag" class="headerlink" title="Tag"></a>Tag</h5><p>Tag子节点 对象与XML或HTML原生文档中的tag相同:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">soup = BeautifulSoup(<span class="string">&#x27;&lt;b class=&quot;boldest&quot;&gt;Extremely bold&lt;/b&gt;&#x27;</span>)</span><br><span class="line">tag = soup.b</span><br><span class="line"><span class="built_in">type</span>(tag)</span><br><span class="line"><span class="comment"># &lt;class &#x27;bs4.element.Tag&#x27;&gt;</span></span><br><span class="line">tag.name</span><br><span class="line"><span class="comment"># u&#x27;b&#x27;</span></span><br><span class="line"></span><br><span class="line">tag[<span class="string">&#x27;class&#x27;</span>]</span><br><span class="line"><span class="comment"># u&#x27;boldest&#x27;</span></span><br><span class="line">tag.attrs</span><br><span class="line"><span class="comment"># &#123;u&#x27;class&#x27;: u&#x27;boldest&#x27;&#125;</span></span><br><span class="line">tag[<span class="string">&#x27;class&#x27;</span>] = <span class="string">&#x27;verybold&#x27;</span></span><br><span class="line">tag[<span class="string">&#x27;id&#x27;</span>] = <span class="number">1</span></span><br><span class="line">tag</span><br><span class="line"><span class="comment"># &lt;blockquote class=&quot;verybold&quot; id=&quot;1&quot;&gt;Extremely bold&lt;/blockquote&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> tag[<span class="string">&#x27;class&#x27;</span>]</span><br><span class="line"><span class="keyword">del</span> tag[<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">tag</span><br><span class="line"><span class="comment"># &lt;blockquote&gt;Extremely bold&lt;/blockquote&gt;</span></span><br><span class="line"></span><br><span class="line">tag[<span class="string">&#x27;class&#x27;</span>]</span><br><span class="line"><span class="comment"># KeyError: &#x27;class&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(tag.get(<span class="string">&#x27;class&#x27;</span>))</span><br><span class="line"><span class="comment"># None</span></span><br></pre></td></tr></table></figure><p>节点操作</p><p>soup.contents 将子节点以列表的方式输出 返回类型 list</p><p>soup.children 将子节点以可迭代列表的方式输出 返回类型 list_iterator</p><p>可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator</p><p>soup.descendants 对所有tag的子孙节点进行递归循环 返回类型 generator</p><p>父节点 .parents 递归得到所有父辈节点 返回类型 generator</p><p>.previous_sibling .next_sibling 查询兄弟节点</p><h5 id="NavigableString"><a href="#NavigableString" class="headerlink" title="NavigableString"></a>NavigableString</h5><p>字符串常被包含在tag内.Beautiful Soup用 NavigableString 类来包装tag中的字符串:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">tag.string</span><br><span class="line"><span class="comment"># u&#x27;Extremely bold&#x27;</span></span><br><span class="line"><span class="built_in">type</span>(tag.string)</span><br><span class="line"><span class="comment"># &lt;class &#x27;bs4.element.NavigableString&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不能编辑，但可以直接替换</span></span><br><span class="line">tag.string.replace_with(<span class="string">&quot;No longer bold&quot;</span>)</span><br><span class="line">tag</span><br><span class="line"><span class="comment"># &lt;blockquote&gt;No longer bold&lt;/blockquote&gt;</span></span><br></pre></td></tr></table></figure><p>字符串操作</p><p>tag中包含多个字符串 可以用.strings循环获取 返回 generator<br> .stripped_strings获取删除空格和空行后的内容</p><h5 id="Comment"><a href="#Comment" class="headerlink" title="Comment"></a>Comment</h5><p>Comment 对象是一个特殊类型的 NavigableString 对象,<br>html和xml中的注释部分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">markup = <span class="string">&quot;&lt;b&gt;&lt;!--Hey, buddy. Want to buy a used parser?--&gt;&lt;/b&gt;&quot;</span></span><br><span class="line">soup = BeautifulSoup(markup)</span><br><span class="line">comment = soup.b.string</span><br><span class="line"><span class="built_in">type</span>(comment)</span><br><span class="line"><span class="comment"># &lt;class &#x27;bs4.element.Comment&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h4 id="搜索文档树"><a href="#搜索文档树" class="headerlink" title="搜索文档树"></a>搜索文档树</h4><p>find(self, name=None, attrs={}, recursive=True, text=None,**kwargs)<br>find_all(self, name=None, attrs={}, recursive=True, text=None,limit=None, **kwargs)</p><h5 id="name"><a href="#name" class="headerlink" title="name"></a>name</h5><p>name 参数可以查找所有名字为 name 的tag,字符串对象会被自动忽略掉</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">soup.find_all(<span class="string">&quot;title&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br></pre></td></tr></table></figure><h5 id="attrs"><a href="#attrs" class="headerlink" title="attrs"></a>attrs</h5><p>根据属性查找</p><p>其中，class 属于python中的保留字，通过class_ 搜索</p><p>string 搜索文档中字符串的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">soup.find_all(<span class="built_in">id</span>=<span class="string">&#x27;link2&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(href=re.<span class="built_in">compile</span>(<span class="string">&quot;elsie&quot;</span>))</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在文档树中查找所有包含 id 属性的tag,无论 id 的值是什么</span></span><br><span class="line">soup.find_all(<span class="built_in">id</span>=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(href=re.<span class="built_in">compile</span>(<span class="string">&quot;elsie&quot;</span>), <span class="built_in">id</span>=<span class="string">&#x27;link1&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;three&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(<span class="string">&quot;a&quot;</span>, class_=<span class="string">&quot;sister&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(string=<span class="string">&quot;Elsie&quot;</span>)</span><br><span class="line"><span class="comment"># [u&#x27;Elsie&#x27;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(string=[<span class="string">&quot;Tillie&quot;</span>, <span class="string">&quot;Elsie&quot;</span>, <span class="string">&quot;Lacie&quot;</span>])</span><br><span class="line"><span class="comment"># [u&#x27;Elsie&#x27;, u&#x27;Lacie&#x27;, u&#x27;Tillie&#x27;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(string=re.<span class="built_in">compile</span>(<span class="string">&quot;Dormouse&quot;</span>))</span><br><span class="line">[<span class="string">u&quot;The Dormouse&#x27;s story&quot;</span>, <span class="string">u&quot;The Dormouse&#x27;s story&quot;</span>]</span><br><span class="line"></span><br><span class="line">soup.find_all(<span class="string">&quot;a&quot;</span>, string=<span class="string">&quot;Elsie&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">soup.find_all(<span class="string">&quot;a&quot;</span>, limit=<span class="number">2</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br></pre></td></tr></table></figure><h5 id="recursive"><a href="#recursive" class="headerlink" title="recursive"></a>recursive</h5><p>只搜索tag的子节点 recursive=False</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">soup.html.find_all(<span class="string">&quot;title&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.html.find_all(<span class="string">&quot;title&quot;</span>, recursive=<span class="literal">False</span>)</span><br><span class="line"><span class="comment"># []</span></span><br></pre></td></tr></table></figure><h5 id="直接调用tag"><a href="#直接调用tag" class="headerlink" title="直接调用tag"></a>直接调用tag</h5><p>find_all 最常用 简写方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">soup.find_all(<span class="string">&quot;a&quot;</span>)</span><br><span class="line">soup(<span class="string">&quot;a&quot;</span>)</span><br><span class="line"></span><br><span class="line">soup.title.find_all(string=<span class="literal">True</span>)</span><br><span class="line">soup.title(string=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h4 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"> .select() 方法中传入字符串参数, 即可使用CSS选择器的语法找到tag:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;title&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;p:nth-of-type(3)&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;]</span></span><br><span class="line">通过tag标签逐层查找:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;body a&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot;  id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;html head title&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br><span class="line">找到某个tag标签下的直接子标签 [<span class="number">6</span>] :</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;head &gt; title&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;p &gt; a&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot;  id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;p &gt; a:nth-of-type(2)&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;p &gt; #link1&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;body &gt; a&quot;</span>)</span><br><span class="line"><span class="comment"># []</span></span><br><span class="line">找到兄弟节点标签:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;#link1 ~ .sister&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot;id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;#link1 + .sister&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br><span class="line">通过CSS的类名查找:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;.sister&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;[class~=sister]&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line">通过tag的<span class="built_in">id</span>查找:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;#link1&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;a#link2&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br><span class="line">同时用多种CSS选择器查询元素:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;#link1,#link2&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br><span class="line">通过是否存在某个属性来查找:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&#x27;a[href]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line">通过属性的值来查找:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&#x27;a[href=&quot;http://example.com/elsie&quot;]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&#x27;a[href^=&quot;http://example.com/&quot;]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&#x27;a[href$=&quot;tillie&quot;]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&#x27;a[href*=&quot;.com/el&quot;]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line">通过语言设置来查找:</span><br><span class="line"></span><br><span class="line">multilingual_markup = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"> &lt;p lang=&quot;en&quot;&gt;Hello&lt;/p&gt;</span></span><br><span class="line"><span class="string"> &lt;p lang=&quot;en-us&quot;&gt;Howdy, y&#x27;all&lt;/p&gt;</span></span><br><span class="line"><span class="string"> &lt;p lang=&quot;en-gb&quot;&gt;Pip-pip, old fruit&lt;/p&gt;</span></span><br><span class="line"><span class="string"> &lt;p lang=&quot;fr&quot;&gt;Bonjour mes amis&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">multilingual_soup = BeautifulSoup(multilingual_markup)</span><br><span class="line">multilingual_soup.select(<span class="string">&#x27;p[lang|=en]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;p lang=&quot;en&quot;&gt;Hello&lt;/p&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;p lang=&quot;en-us&quot;&gt;Howdy, y&#x27;all&lt;/p&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;p lang=&quot;en-gb&quot;&gt;Pip-pip, old fruit&lt;/p&gt;]</span></span><br><span class="line">返回查找到的元素的第一个</span><br><span class="line"></span><br><span class="line">soup.select_one(<span class="string">&quot;.sister&quot;</span>)</span><br><span class="line"><span class="comment"># &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;</span></span><br><span class="line">对于熟悉CSS选择器语法的人来说这是个非常方便的方法.Beautiful Soup也支持CSS选择器API, 如果你仅仅需要CSS选择器的功能,那么直接使用 lxml 也可以, 而且速度更快,支持更多的CSS选择器语法,但Beautiful Soup整合了CSS选择器的语法和自身方便使用API.</span><br></pre></td></tr></table></figure><h3 id="pdfkit"><a href="#pdfkit" class="headerlink" title="pdfkit"></a>pdfkit</h3><p>使用pdfkit依赖 wkhtmltopdf 需要在本地path下配置</p><p>或本地path未配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pdfkit</span><br><span class="line"><span class="comment"># 配置path后 可以不写</span></span><br><span class="line">path_wk = <span class="string">r&#x27;C:\Program Files\wkhtmltopdf\bin\wkhtmltopdf.exe&#x27;</span>  </span><br><span class="line"><span class="comment"># wkhtmltopdf安装位置</span></span><br><span class="line">config = pdfkit.configuration(wkhtmltopdf=path_wk)</span><br><span class="line">pdfkit.from_string(html, file_name, options=options, configuration=config)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pdfkit</span><br><span class="line">pdfkit.from_url(<span class="string">&#x27;http://google.com&#x27;</span>, <span class="string">&#x27;out.pdf&#x27;</span>)</span><br><span class="line">pdfkit.from_file(<span class="string">&#x27;test.html&#x27;</span>, <span class="string">&#x27;out.pdf&#x27;</span>)</span><br><span class="line">pdfkit.from_string(<span class="string">&#x27;Hello!&#x27;</span>, <span class="string">&#x27;out.pdf&#x27;</span>)</span><br></pre></td></tr></table></figure><p>cmd下执行<code>wkhtmltopdf &quot;www.baidu.com&quot; &quot;out.pdf&quot;</code></p><h2 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h2><h2 id="Python标准异常"><a href="#Python标准异常" class="headerlink" title="Python标准异常"></a>Python标准异常</h2><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>AssertionError</td><td>断言语句（assert）失败</td></tr><tr><td>AttributeError</td><td>尝试访问未知的对象属性</td></tr><tr><td>EOFError</td><td>用户输入文件末尾标志EOF（Ctrl+d）</td></tr><tr><td>FloatingPointError</td><td>浮点计算错误</td></tr><tr><td>GeneratorExit</td><td>generator.close()方法被调用的时候</td></tr><tr><td>ImportError</td><td>导入模块失败的时候</td></tr><tr><td>IndexError</td><td>索引超出序列的范围</td></tr><tr><td>KeyError</td><td>字典中查找一个不存在的关键字</td></tr><tr><td>KeyboardInterrupt</td><td>用户输入中断键（Ctrl+c）</td></tr><tr><td>MemoryError</td><td>内存溢出（可通过删除对象释放内存）</td></tr><tr><td>NameError</td><td>尝试访问一个不存在的变量</td></tr><tr><td>NotImplementedError</td><td>尚未实现的方法</td></tr><tr><td>OSError</td><td>操作系统产生的异常（例如打开一个不存在的文件）</td></tr><tr><td>OverflowError</td><td>数值运算超出最大限制</td></tr><tr><td>ReferenceError</td><td>弱引用（weak reference）试图访问一个已经被垃圾回收机制回收了的对象</td></tr><tr><td>RuntimeError</td><td>一般的运行时错误</td></tr><tr><td>StopIteration</td><td>迭代器没有更多的值</td></tr><tr><td>SyntaxError</td><td>Python的语法错误</td></tr><tr><td>IndentationError</td><td>缩进错误</td></tr><tr><td>TabError</td><td>Tab和空格混合使用</td></tr><tr><td>SystemError</td><td>Python编译器系统错误</td></tr><tr><td>SystemExit</td><td>Python编译器进程被关闭</td></tr><tr><td>TypeError</td><td>不同类型间的无效操作</td></tr><tr><td>UnboundLocalError</td><td>访问一个未初始化的本地变量（NameError的子类）</td></tr><tr><td>UnicodeError</td><td>Unicode相关的错误（ValueError的子类）</td></tr><tr><td>UnicodeEncodeError</td><td>Unicode编码时的错误（UnicodeError的子类）</td></tr><tr><td>UnicodeDecodeError</td><td>Unicode解码时的错误（UnicodeError的子类）</td></tr><tr><td>UnicodeTranslateError</td><td>Unicode转换时的错误（UnicodeError的子类）</td></tr><tr><td>ValueError</td><td>传入无效的参数</td></tr><tr><td>ZeroDivisionError</td><td>除数为零</td></tr></tbody></table><p>以下是 Python 内置异常类的层次结构：<br>BaseException<br>+– SystemExit<br>+– KeyboardInterrupt<br>+– GeneratorExit<br>+– Exception<br>      +– StopIteration<br>      +– ArithmeticError<br>      |    +– FloatingPointError<br>      |    +– OverflowError<br>      |    +– ZeroDivisionError<br>      +– AssertionError<br>      +– AttributeError<br>      +– BufferError<br>      +– EOFError<br>      +– ImportError<br>      +– LookupError<br>      |    +– IndexError<br>      |    +– KeyError<br>      +– MemoryError<br>      +– NameError<br>      |    +– UnboundLocalError<br>      +– OSError<br>      |    +– BlockingIOError<br>      |    +– ChildProcessError<br>      |    +– ConnectionError<br>      |    |    +– BrokenPipeError<br>      |    |    +– ConnectionAbortedError<br>      |    |    +– ConnectionRefusedError<br>      |    |    +– ConnectionResetError<br>      |    +– FileExistsError<br>      |    +– FileNotFoundError<br>      |    +– InterruptedError<br>      |    +– IsADirectoryError<br>      |    +– NotADirectoryError<br>      |    +– PermissionError<br>      |    +– ProcessLookupError<br>      |    +– TimeoutError<br>      +– ReferenceError<br>      +– RuntimeError<br>      |    +– NotImplementedError<br>      +– SyntaxError<br>      |    +– IndentationError<br>      |         +– TabError<br>      +– SystemError<br>      +– TypeError<br>      +– ValueError<br>      |    +– UnicodeError<br>      |         +– UnicodeDecodeError<br>      |         +– UnicodeEncodeError<br>      |         +– UnicodeTranslateError<br>      +– Warning<br>           +– DeprecationWarning<br>           +– PendingDeprecationWarning<br>           +– RuntimeWarning<br>           +– SyntaxWarning<br>           +– UserWarning<br>           +– FutureWarning<br>           +– ImportWarning<br>           +– UnicodeWarning<br>           +– BytesWarning<br>           +– ResourceWarning</p>]]></content>
    
    
    <summary type="html">Python</summary>
    
    
    
    <category term="code" scheme="https://wukong1024.github.io/categories/code/"/>
    
    
    <category term="learn" scheme="https://wukong1024.github.io/tags/learn/"/>
    
    <category term="Python" scheme="https://wukong1024.github.io/tags/Python/"/>
    
  </entry>
  
</feed>
