<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>周国平</title>
    <url>/2017/03/04/%E5%91%A8%E5%9B%BD%E5%B9%B3/</url>
    <content><![CDATA[<h1 id="周国平"><a href="#周国平" class="headerlink" title="周国平"></a>周国平</h1><p>生命本来就没有名字</p>
<p>我们降生到世上，有谁是带着名字来的？又有谁是带着头衔、职位、身份、财产等等来的？可是，随着我们长大，越来越深的沉溺于俗务琐事，已经很少有人能记起这个最单纯的事实了<br>我们彼此以名字相见，名字又与头衔、身份、财产之类相连，结果，在这些寄生物的缠绕之下，生命本身隐匿了，甚至萎缩了。<br>想一想世界在时间和空间上的无限，每一个生命的诞生的偶然，怎能不感到一个生命与另一个生命的相遇是一种奇迹呢。有时我甚至觉得，两个生命在世上同时存在过，哪怕永不相遇，其中也仍然有一种令人感动的因缘。我相信，对于生命的这种珍惜和体悟乃是一切人间之爱的至深的源泉。</p>
<p>浩瀚宇宙间，也许只有我们的星球开出了生命的花朵，可是，在这个幸运的星球上，比比皆是利益的交换，身份的较量，财产的争夺，最罕见的偏偏是生命与生命的相遇。<br>肖伯纳：人生有两大悲剧，一是没有得到你心爱的东西，一是得到了你心爱的东西。</p>
<p>周国平：人生有两大快乐，一是没有得到你心爱的东西，于是你可以去追求和创造；一是得到了你心爱的东西，于是你可以去品味和体验。</p>
<p>站在一定的距离外来看待我的遭遇了。我是我，遭遇是遭遇。惊浪拍岸，卷起千堆雪。可是，岸仍然是岸，它淡然观望着变幻不定的海洋。</p>
<p>人的精力是有限的，有所为就必有所不为，而人与人之间的巨大区别就在于所为所不为的不同取向。</p>
<p>我对成功的理解，把自己喜欢的事情做得尽善尽美，让自己满意，不要去管别人怎么说</p>
<p>成功是优秀的副产品，优秀是一个人的内在品质，有高尚的人格和真实的才学，在根本意义上，作为一个人，优秀就已经是成功<br>比成功更优秀的，是必须有自己的真兴趣，知道自己究竟想要什么</p>
<p>“If you assume that there is no hope, you guarantee that there will be no hope. If you assume that there is an instinct for freedom, that there are opportunities to change things, then there is a possibility that you can contribute to making a better world.” -Noam Chomsky</p>
<p>每个人都只有一个人生，她是一个对我们从一而终的女子。我们不妨尽自己的力量引导她，充实她，但是，不管她终于成个什么样子，我们好歹得爱她</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>鲁迅</title>
    <url>/2017/06/23/%E9%B2%81%E8%BF%85/</url>
    <content><![CDATA[<h1 id="鲁迅"><a href="#鲁迅" class="headerlink" title="鲁迅"></a>鲁迅</h1><p>中国公共的东西，实在不容易保存，如果当局者是外行，他便把东西糟完，倘是内行，他便把东西偷完。<br>中国老例，一死是常常能够增价的<br>我觉得中国有时候是极爱平等的国度，有什么稍稍显得特出，就有人拿了长刀来削平它<br>我们乏的古人想了几千年，得到了一个制驭别人的巧法，可压服的将他压服，否则将他抬高，而抬高也就是一种压服的手段<br>称为神的和称为魔的战斗了，并非争夺天国，而是为了得到地狱的统治权，所以无论谁胜，地狱至今也还是照常的地狱<br>官场有不测之威，一样的事情，忽而不要紧，忽而犯大罪<br>暴君治下的臣民，大抵比暴君更暴；暴君的暴政，时常还不能餍足暴君治下的臣民的欲望。<br>暴君的臣民，只愿暴政暴在他人的头上，他却看着高兴，拿“残酷”做娱乐，拿“他人的苦”做赏玩，做慰安<br>我们极容易变成奴隶，而且变了之后，还历分喜欢<br>奴才做了主人，是决不肯废去‘老爷’的称呼的，他的摆架子，恐怕比他的主人还十足，还可笑。</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>思考</title>
    <url>/2017/09/10/%E6%80%9D%E8%80%83/</url>
    <content><![CDATA[<h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>没有什么可以失去时，怎么做都是赚的<br>未来的魔将以佛的形式出现<br>回忆带来的只有痛苦<br>离梦想越近，发展自己越无知，世界真奇妙<br>荣耀的背后刻着一道孤独<br>成佛就是消亡，西天就是寂灭，西游就是一场被精心安排成自杀的谋杀。<br>活着就是为了改变世界，难道还有其它原因吗？<br>不知道如何选择的时候，让自己变得更优秀就可以了<br>曾经美好的回忆，现在却不敢想起。再也无法回到从前，一切都像灰烬随风而去，永恒，是否真的存在？<br>  我摆脱所有恐惧，直到恐惧开始惧怕我。<br>  人生，是一场赎罪之旅，为了那些为我付出的人们。<br>变得更强，是为了更好地遇见你<br>从你们鄙夷的目光中，我看到了丑陋的你，和更丑陋的自己<br>一万年太久，只争朝夕<br>我们不是出生在一个和平的年代，我们只是出生在一个和平的国家。<br>凡所有相，皆是虚妄；若见诸相非相，则见如来。<br>幸福的人都一样，不幸的人却各不相同。<br>改变源于身边，甚至全球性的改变，也是源自微小的事物——和我们一样的人。<br>不随意给人添麻烦<br>不开过火的玩笑<br>不消费他人的不幸<br>不显摆自己的优越</p>
<p>文化人<br>根植于内心的修养，<br>无需提醒的自觉，<br>以约束为前提的自由，<br>为别人着想的善良</p>
<p>放下一切，带着自己的骄傲离开。</p>
<p>他们好傻，把赌注压在我身上，可我是那么的弱。</p>
<p>现在一定的高度看世界，发现世人皆愚昧。<br>格局   境界   胸襟   气度    礼</p>
<p>众人是不关心自己的，他们只关心自己熟悉的事物，越是缺少德行的社会，人们越是愿意占领道德制高点，以享受头羊引领羊群般的虚假快感。</p>
<p>一个姑娘不会因为你专一痴情而喜欢你，只会因为你优秀而喜欢你。</p>
<p>“怎么才能让别人尊重你?”<br>“我尊重别人，别人就会尊重我。”<br>“错了。是实力。”</p>
<p>当你厌恶你身边的人，你表达厌恶最好的方式不是和他们争吵，而是自己要努力奋斗，有机会了离开他们。那样，他们就永远从你的生活中消失，和死了差不多。</p>
<p>当你比别人强十倍或百倍时，别人会嫉妒你；<br>只有当你比别人强千倍时，你才会得到别人的尊重。</p>
<p>每个人为不同的理由带着面具说谎<br>动机也只有一个，那叫做欲望</p>
<p>教育的意义：<br>独立的思想者<br>终身的阅读者<br>公共事务的积极参与者</p>
<p>为什么读书？</p>
<p>你读过的书其实早已融进你的骨血，只要一个触动点，就会喷薄而出。<br>你现在的气质里，藏着你走过的路，读过的书，爱过的人。</p>
<p>引力的本质是质量扭曲了时空</p>
<p>不同民族之间相互作用的历史，就是通过征服（枪炮）、流行病（病菌）和灭绝种族的大屠杀（钢铁）来形成现代世界的。各大陆民族长期历史之间的显著差异，不是由于这些民族本身的天生差异，是由于他们环境的差异。各大陆的环境有无数的不同特点，正是这些不同的特点影响了人类社会的发展轨迹。</p>
<p>大人们喜欢数目字。当你对他们说起一个新朋友的时候，他们从不问你最本质的东西。他们从不会对你说：“他的声音是什么样的？他爱玩什么游戏？他搜集蝴蝶吗？”他们问你的是：“他几岁了？他有几个兄弟？他的父亲挣多少钱呀？”这样，他们就以为了解他了。假如你对大人说：“我看见一所美丽的粉红色砖墙的小房子，窗上爬着天竺葵，屋顶上有鸽子……”他们是想象不出这所房子的模样的。然而，要是对他们说：“我看到一所值十万法郎的房子。”他们就会高呼：“那多好看呀！”<br>正是因为你为你的玫瑰花费的时间，这才使你的玫瑰变得如此重要<br>                              《小王子》  圣埃克絮佩里</p>
<p>正其义不谋其利，明其道不计其功   董仲舒</p>
<p>真理属于人类，谬误属于时代<br>王国维将“悲剧”分为三种： 第一种之悲剧，由极恶之人，极其所有之能力，以交构之者。 第二种，由于盲目的命运者。 第三种之悲剧，由于剧中之人物之位置及关系而不得不然者。 <br>看透，天下熙熙，皆为名来，天下攘攘，皆为利往，恕我志不在此。<br>看远才能揽物于胸，只看眼前美景，难见山外之山</p>
<p>读书多了，容颜自然改变。许多时候，自己可能以为许多看过的书籍都成过眼烟云，不复记忆，其实他们仍是潜在的。在气质里，在谈吐上，在胸襟的无涯。当然，也能显露在生活和文字中。——三毛《关于读书》<br>“真正有气质的淑女，从不炫耀她所拥有的一切，她不告诉人她读过什么书，去过什么地方，又多少件衣服，买过什么珠宝，因为她没有自卑感。”</p>
<p>看作家韩少功的文章很有感触。他说知识分子，不容易再回到故土，不大能接受家乡，倒不是说那里贫穷、落后、土气、青山绿水不再——这些他们大多还可以忍受;他们常常最觉得受不了的，是道德的崩坏，是世道人心和公序良俗的根基动摇。赤裸裸的金钱关系，连亲人之间也寡恩薄义，道德与文化已成为是乡村建设的重要短板之一。</p>
<p>个人越是炫耀什么，内心就越缺少什么。内心真正富足的人，从不炫耀拥有的一切，他不告诉别人读过什么书，开过什么车，去过什么地方，有多少件衣裳，买过什么珠宝，因为他没有自卑感。内心越是丰盈，生活越是素简。</p>
<p>这是一个最好的时代，也是一个最坏的时代；这是明智的时代，这是愚昧的时代；这是信任的纪元，这是怀疑的纪元；这是光明的季节，这是黑暗的季节；这是希望的春日，这是失望的冬日；我们面前应有尽有，我们面前一无所有；我们都将直上天堂，我们都将直下地狱。<br>《双城记》狄更斯</p>
<p>叔本华把悲剧分为三种状况，第一种是起于邪恶的人物，第二种是起于盲目的命运和偶然的机运，第三种是起于普通的地位对立和相互关系。</p>
<p>记问之学不足为人师，何故作践青年精神光阴</p>
<p>《月亮与六便士》的答案是：无论处在怎样的境地，无论年龄、受教育程度、外界环境如何，我们都有选择一生中最想为之努力的东西的自由。这种自由只取决于我们自己，与其他任何东西无关。当我们有勇气做出选择的时候，就已经身在生命的自由之中了。</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>随笔</tag>
        <tag>合集</tag>
      </tags>
  </entry>
  <entry>
    <title>罗辑思维</title>
    <url>/2018/01/01/%E7%BD%97%E8%BE%91%E6%80%9D%E7%BB%B4/</url>
    <content><![CDATA[<h1 id="罗辑思维"><a href="#罗辑思维" class="headerlink" title="罗辑思维"></a>罗辑思维</h1><p>自带信息 不装系统 随时插拔 自由协作</p>
<h2 id="第-1-期丨末日启示-向死而生"><a href="#第-1-期丨末日启示-向死而生" class="headerlink" title="第 1 期丨末日启示: 向死而生"></a>第 1 期丨末日启示: 向死而生</h2><p>临死前<br>慈禧:以后大清朝女主不许干政<br>路易十六:法国航海探险队有没有回来<br>纳粹空军司令戈林:请求以枪毙代替绞刑未果，后服用氰化钠胶囊自杀。死后遗言请求放过监狱长<br>向死而生的境界，每一天是最后一天<br>内在的，虚拟的成就感<br>好好活，做意义的事</p>
<h2 id="第-2-期丨拒绝逃离北上广，见识决定命运"><a href="#第-2-期丨拒绝逃离北上广，见识决定命运" class="headerlink" title="第 2 期丨拒绝逃离北上广，见识决定命运"></a>第 2 期丨拒绝逃离北上广，见识决定命运</h2><p>1/8 秒延迟:光从南极到北极的时间<br>城市:自由协作，非延时的沟通，见识<br>宋江:李逵（打手）、戴宗（情报）、燕青（射箭）、柴进（见识）</p>
<h2 id="第-3-期丨中日贸易，如何爱国"><a href="#第-3-期丨中日贸易，如何爱国" class="headerlink" title="第 3 期丨中日贸易，如何爱国"></a>第 3 期丨中日贸易，如何爱国</h2><p>贸易造就和平<br>明朝和蒙古 农耕文明和游牧文明<br>农耕:缺乏骑兵、辎重问题、胜而无果<br>游牧:天气影响、缺少细软（茶叶瓷器丝绸）<br>李鸿章环球:欢迎到中国贸易<br>资本，土地，劳动力，技术的合理搭配<br>格局问题:东亚贸易一体化 区域经济</p>
<h2 id="第-4-期丨回应质疑"><a href="#第-4-期丨回应质疑" class="headerlink" title="第 4 期丨回应质疑"></a>第 4 期丨回应质疑</h2><p>大国的经济格局<br>马歇尔计划、经济援助<br>亚洲城市聚集趋势<br>珠三角 长三角 环渤海 北上广<br>大城市的超大规模聚集 上亿人的城市<br>首尔东京香港</p>
<h2 id="第-5-期丨石油永远用不完"><a href="#第-5-期丨石油永远用不完" class="headerlink" title="第 5 期丨石油永远用不完?"></a>第 5 期丨石油永远用不完?</h2><p>1865 英狄文斯 煤炭问题<br>用量 ↑ 存量 ↓ 价格 ↑ 资源格局改变<br>香港迪拜拉斯维加斯 城市化的聚集<br>经济学的思维 价格问题</p>
<h2 id="第-6-期丨治不好的地域歧视"><a href="#第-6-期丨治不好的地域歧视" class="headerlink" title="第 6 期丨治不好的地域歧视"></a>第 6 期丨治不好的地域歧视</h2><p>地域歧视是一种“简化机制”<br>民胞物与<br>人的成长就是把认知逐渐包含世界<br>佛法的修行将自己与外界完全剥离（包含自身肉体）<br>把自己的人格放大到无远弗届<br>收缩成自己完全独立的人格</p>
<h2 id="第-7-期丨夹缝中的-80-后"><a href="#第-7-期丨夹缝中的-80-后" class="headerlink" title="第 7 期丨夹缝中的 80 后"></a>第 7 期丨夹缝中的 80 后</h2><p>自由人的自由联合<br>手艺人的心态在组织内存活<br>对自己的价值成长负责</p>
<h2 id="第-8-期丨房产税与地沟油"><a href="#第-8-期丨房产税与地沟油" class="headerlink" title="第 8 期丨房产税与地沟油"></a>第 8 期丨房产税与地沟油</h2><p>1624 荷兰 印花税 制度成本<br>拔最多的鹅毛，听最少的鹅叫</p>
<h2 id="第-9-期丨慈善的善与恶"><a href="#第-9-期丨慈善的善与恶" class="headerlink" title="第 9 期丨慈善的善与恶"></a>第 9 期丨慈善的善与恶</h2><p>援助对非洲的影响<br>协和医院的精神<br>慈善是百年大计 精神的高峰<br>低调做慈善<br>对真理抱持一种怀疑</p>
<h2 id="第-10-期丨成名的代价"><a href="#第-10-期丨成名的代价" class="headerlink" title="第 10 期丨成名的代价"></a>第 10 期丨成名的代价</h2><p>路上有两种人 名和利<br>被想象力抛起的高度 被脑补为圣人<br>时间和空间 互联网的放大<br>为民除害还是为“名”除害？<br>未知的嫉妒</p>
<h2 id="第-11-期丨权力之下无真相"><a href="#第-11-期丨权力之下无真相" class="headerlink" title="第 11 期丨权力之下无真相"></a>第 11 期丨权力之下无真相</h2><p>历史的真实性<br>互联网带来的真相<br>大数据时代没有隐私</p>
<h2 id="第-12-期丨民意真的可信吗"><a href="#第-12-期丨民意真的可信吗" class="headerlink" title="第 12 期丨民意真的可信吗"></a>第 12 期丨民意真的可信吗</h2><p>迷雾中的群众，看不清真相<br>政治家玩弄民意<br>民意需要驯化<br>民意不等于公正<br>愚昧的一代</p>
<h2 id="第-13-期丨剩女照亮未来"><a href="#第-13-期丨剩女照亮未来" class="headerlink" title="第 13 期丨剩女照亮未来"></a>第 13 期丨剩女照亮未来</h2><p>优胜劣汰<br>生存的策略<br>真正的决策者</p>
<h2 id="第-14-期丨我和左派谈谈心"><a href="#第-14-期丨我和左派谈谈心" class="headerlink" title="第 14 期丨我和左派谈谈心"></a>第 14 期丨我和左派谈谈心</h2><p>托马斯 莫尔 英国 《乌托邦》 自由的代价<br>欧文 美国 社会主义实验<br>圣西门 法国 终生思考社会主义<br>未来 自由人的自由联合<br>对真理和人类未来的探索<br>对爱情的追求，对知识的渴望，对人类苦难不可遏制的同情心</p>
<h2 id="第-15-期丨大国不能认死理"><a href="#第-15-期丨大国不能认死理" class="headerlink" title="第 15 期丨大国不能认死理"></a>第 15 期丨大国不能认死理</h2><p>大国需要有大国思维<br>俾斯麦使自己变得伟大，但他让德国民族变得渺小。<br>国家是时间河流上的航船<br>什么是政治？政治是可能性的艺术</p>
<h2 id="第-16-期丨杀死上帝的达尔文"><a href="#第-16-期丨杀死上帝的达尔文" class="headerlink" title="第 16 期丨杀死上帝的达尔文"></a>第 16 期丨杀死上帝的达尔文</h2><p>物种起源<br>物竞天择 适者生存<br>人类只是生物这个巨大的树杈上新生的一个小小枝条，而且随时可能被毁灭。</p>
<h2 id="第-17-期丨反腐的曙光"><a href="#第-17-期丨反腐的曙光" class="headerlink" title="第 17 期丨反腐的曙光"></a>第 17 期丨反腐的曙光</h2><p>熟人生活到城市生活 陌生人社会<br>制度成本 社会转型期的巨大代价<br>陌生社会的信用问题<br>美国的信息“关联”与“公开”</p>
<h2 id="第-18-期丨腐败黑箱必被砸爆"><a href="#第-18-期丨腐败黑箱必被砸爆" class="headerlink" title="第 18 期丨腐败黑箱必被砸爆"></a>第 18 期丨腐败黑箱必被砸爆</h2><p>马布里诉麦迪逊案<br>美国司法权威的最终确立<br>“米兰达警告”的双面效应</p>
<h2 id="第-19-期丨在一起-有后代"><a href="#第-19-期丨在一起-有后代" class="headerlink" title="第 19 期丨在一起 有后代"></a>第 19 期丨在一起 有后代</h2><p>散碎的思想，放在一起，产生奇思妙想<br>马镫 欧洲中世纪整个的封建制度的形成，在马上使用白刃战<br>读书就是摆脱了同时代人的交换，而去和其它时代的人进行这种知识交换，所以它变的更安全，更有益，因为我们完全能够排除掉那些像烟草，像梅毒这些有害的东西，那些古人用的东西为我所用，实施更伟大的跨时间的哥伦布大交换。</p>
<h2 id="第-20-期丨为泡妞之成功而读书"><a href="#第-20-期丨为泡妞之成功而读书" class="headerlink" title="第 20 期丨为泡妞之成功而读书"></a>第 20 期丨为泡妞之成功而读书</h2><p>中国的教育成功地让我们厌学<br>正其义不谋其利,明其道不计其功<br>读书的心态和目的</p>
<h2 id="第-21-期丨岳飞为什么必须死"><a href="#第-21-期丨岳飞为什么必须死" class="headerlink" title="第 21 期丨岳飞为什么必须死"></a>第 21 期丨岳飞为什么必须死</h2><p>猜忌，天下之乱源也<br>未知的黑暗丛林<br>性格决定命运<br>失去弹性的宋代政治</p>
<h2 id="第-23-期丨击溃牛顿的钟表匠"><a href="#第-23-期丨击溃牛顿的钟表匠" class="headerlink" title="第 23 期丨击溃牛顿的钟表匠"></a>第 23 期丨击溃牛顿的钟表匠</h2><p>市场的需求是创新的动力<br>财迷精神、工匠精神、爱国精神的结合<br>宽容的创新环境</p>
<h2 id="第-24-期丨南北战争-这场架不白打"><a href="#第-24-期丨南北战争-这场架不白打" class="headerlink" title="第 24 期丨南北战争: 这场架不白打"></a>第 24 期丨南北战争: 这场架不白打</h2><p>我唯一担心的是我们未来的生活能不能对得起我们曾经承受的那些苦难</p>
<h2 id="第-25-期丨这一代人的怕与爱-1-这个社会不公平-2-我们自己努力不够。我们这个时代还有第三个原因：社会大势的转型"><a href="#第-25-期丨这一代人的怕与爱-1-这个社会不公平-2-我们自己努力不够。我们这个时代还有第三个原因：社会大势的转型" class="headerlink" title="第 25 期丨这一代人的怕与爱 1.这个社会不公平 2.我们自己努力不够。我们这个时代还有第三个原因：社会大势的转型"></a>第 25 期丨这一代人的怕与爱 1.这个社会不公平 2.我们自己努力不够。我们这个时代还有第三个原因：社会大势的转型</h2><p>互联网的本质-自由人的自由联合</p>
<h2 id="第-26-期丨一个被吃掉的少年"><a href="#第-26-期丨一个被吃掉的少年" class="headerlink" title="第 26 期丨一个被吃掉的少年"></a>第 26 期丨一个被吃掉的少年</h2><p>海难吃人案<br>洞穴奇案<br>法律，只适合文明世界<br>选择的权利</p>
<h2 id="第-27-期丨说英雄，谁是英雄"><a href="#第-27-期丨说英雄，谁是英雄" class="headerlink" title="第 27 期丨说英雄，谁是英雄"></a>第 27 期丨说英雄，谁是英雄</h2><p>历史由胜利者书写，孙中山不是完美无缺，袁世凯也不是那么不堪。<br>大德不逾闲，小德出入可也。<br>历史无情，顺应历史潮流才是大势。</p>
<h2 id="第-28-期丨康有为：光绪皇帝的野蛮网友"><a href="#第-28-期丨康有为：光绪皇帝的野蛮网友" class="headerlink" title="第 28 期丨康有为：光绪皇帝的野蛮网友"></a>第 28 期丨康有为：光绪皇帝的野蛮网友</h2><p>真理是谁的孩子？真理是时间的孩子，真理从来就不是权威的孩子。<br>草率的改革，后果很严重。<br>乡村绅士的自私</p>
<h2 id="第-29-期丨慈禧-这个婆娘咋疯的"><a href="#第-29-期丨慈禧-这个婆娘咋疯的" class="headerlink" title="第 29 期丨慈禧:这个婆娘咋疯的"></a>第 29 期丨慈禧:这个婆娘咋疯的</h2><p>有一个女性勇于打破各种封建伦理的枷锁，然后追逐自己的爱情，最后被封建礼教残酷地杀害。<br>有一个淫妇勾结奸夫，然后残害自己的亲夫，最后被她得小叔子给弄死了。<br>一位失控的母亲。</p>
<h2 id="第-30-期丨和你赛跑的不是人"><a href="#第-30-期丨和你赛跑的不是人" class="headerlink" title="第 30 期丨和你赛跑的不是人"></a>第 30 期丨和你赛跑的不是人</h2><p>技术性失业 我们人类用聪明才智发明的这些技术结果反过来会导致我们的失业技术势必带来灾难性的失业<br>一个国家不管多么富裕，人力资本都经不起浪费<br>因为失业导致的问题，是整个社会的一种军心涣散，一种非常灰败的社会氛围而这种氛围恰恰酝酿大规模社会危机的源头<br>放弃追求地位，转而追求联系 人性 服务<br>放弃追求效率，转而追求趣味 个人志向<br>无人驾驶汽车很可能不是增加了汽车的拥有，而是让汽车进入一种共享经济的状态，让它变成一种公用的出租品</p>
<h2 id="第-31-期-丨你的女神你不懂"><a href="#第-31-期-丨你的女神你不懂" class="headerlink" title="第 31 期 丨你的女神你不懂"></a>第 31 期 丨你的女神你不懂</h2><p>肮脏的性和美好的爱情在折磨着每一个青春躁动的雄性。<br>互联网的女性主义特征 重体验，重情感，去中心化，分布式计算</p>
<h2 id="第-32-期-丨加入再给光绪一次机会"><a href="#第-32-期-丨加入再给光绪一次机会" class="headerlink" title="第 32 期 丨加入再给光绪一次机会"></a>第 32 期 丨加入再给光绪一次机会</h2><p>人际关系效益 推销员 一杯水<br>传统企业不能真正控制组织内的力量<br>顶层的意志被放大扭曲到完全荒唐的地步<br>Google 90%的收入来自搜索业务 7%的工作人员<br>管理 有目的、有计划、有步骤的影响他人的行为或意愿</p>
<h2 id="第-33-期-丨官僚为什么当骗子"><a href="#第-33-期-丨官僚为什么当骗子" class="headerlink" title="第 33 期 丨官僚为什么当骗子"></a>第 33 期 丨官僚为什么当骗子</h2><p>动员和组织资源的能力越强，谁在博弈中就更有机会胜出。<br>成熟到顶峰的官僚组织，所有权利集中在中枢，前线没有决策权，中央没有知情权<br>皇帝与官僚系统之间永远化解不了的恩仇<br>大组织大量的资源用于内部消耗</p>
<h2 id="第-34-期-丨躺倒也能当英雄"><a href="#第-34-期-丨躺倒也能当英雄" class="headerlink" title="第 34 期 丨躺倒也能当英雄"></a>第 34 期 丨躺倒也能当英雄</h2><p>技术爆炸<br>体验世界：<br>1、无边无沿，日本汽车，杯托设计<br>2、全新的创新 改革一切<br>行业资深的从业者： 每个月 话题 1000 次互动 分析重要文章 100 篇 深度访谈 10 次<br>个人崛起的优势 1：惊人的发展速度<br>个人崛起的优势 2：大规模吸附资及附资源的能力<br>个人崛起的优势 3：机会越来越多<br>微创新身法之一：转身 人性的需求<br>微创新身法之二：立定 个人兴趣<br>微创新心法之一：呻吟 小范围扩散<br>微创新心法之二：躺倒 借助互联网</p>
<h2 id="第-35-期丨-正版进天堂，盗版走四方"><a href="#第-35-期丨-正版进天堂，盗版走四方" class="headerlink" title="第 35 期丨 正版进天堂，盗版走四方"></a>第 35 期丨 正版进天堂，盗版走四方</h2><p>个人创作的，供大众享用的，低成本的内容作品，在未来想靠版权维持生计，几乎不大可能。<br>正统性：孙权养儒生告天下<br>印刷机出现后，内容变得稀缺了<br>梅特卡夫定律 一个网络的总价值，是由网络内节点的平方来决定的。<br>原来的价值在内容，现在的价值在人，品牌的力量</p>
<h2 id="第-36-期-丨-大家都有拖延症"><a href="#第-36-期-丨-大家都有拖延症" class="headerlink" title="第 36 期 丨 大家都有拖延症"></a>第 36 期 丨 大家都有拖延症</h2><p>拖延症三大要素：拖拉、焦虑、负罪<br>技巧：机械性劳动 提前酝酿 群体压力虚荣心<br>从手段到目的的过程变得非常复杂，不能直接用自己的本能感受得到，所以酿造了拖延症。<br>原因：第一，目的是想象出来的，第二，目的是别人强加的，第三，目的和手段之间相隔得很远。</p>
<h2 id="第-37-期-丨-政客林肯"><a href="#第-37-期-丨-政客林肯" class="headerlink" title="第 37 期 丨 政客林肯"></a>第 37 期 丨 政客林肯</h2><p>狮子和狐狸<br>好政治家和坏政治家的区别，不在于他是不是道德高尚，政客们不存在道德高尚的问题，只在于他有没有狮子的力量，加上狐狸的狡猾，用狐狸的手段去达成他心中酝酿的、隐藏的从来不为外界所知的所谓的狮子的目标。</p>
<h2 id="第-38-期丨一个公务员的海市蜃楼"><a href="#第-38-期丨一个公务员的海市蜃楼" class="headerlink" title="第 38 期丨一个公务员的海市蜃楼"></a>第 38 期丨一个公务员的海市蜃楼</h2><p>立不世之勋而终保令名者，千古唯郭汾阳一人而已<br>第一，扎稳底盘。你得有自己的生活和价值源头，自己要有和他人协作产生财富的方式。第二，意守丹田。所有的东西都不在身外，身外之物没什么可追求的，我一切的行为、一切奋勇的追求都是为了我自己的成长，为了自己的人格健全。<br>第一，根底扎实，有自己的立命之处；第二，意守丹田，永远不向外追逐妄念。</p>
<h2 id="第-39-期-丨-被排斥的中国人"><a href="#第-39-期-丨-被排斥的中国人" class="headerlink" title="第 39 期 丨 被排斥的中国人"></a>第 39 期 丨 被排斥的中国人</h2><p>中国人不参加罢工运动<br>不关心选举制度 挣钱后寄回 不置不动产 竞争力强<br>文化融合的障碍</p>
<h2 id="第-40-期丨法治国什么样"><a href="#第-40-期丨法治国什么样" class="headerlink" title="第 40 期丨法治国什么样"></a>第 40 期丨法治国什么样</h2><p>施剑翘刺杀孙传芳<br>法治国和非法治国的区别：区别仅仅在于丑恶现象存在的方式不同。<br>自由主义国度：每一个人可以心安理得地去当一个废物<br>每一个人都是侵泡在皇权的传统里的，每一个人都在无节操、无底线、无节制地运用自己能够掌握的那一点点权力去侵害他人。<br>建设法治国最重要的是什么？ 平等、自由、责任。<br>罗斯福“四大自由”言论自由，信仰自由，免于匮乏的自由，免于恐惧的自由</p>
<h2 id="第-41-期丨大公司-和蚂蚁一起舞蹈"><a href="#第-41-期丨大公司-和蚂蚁一起舞蹈" class="headerlink" title="第 41 期丨大公司: 和蚂蚁一起舞蹈"></a>第 41 期丨大公司: 和蚂蚁一起舞蹈</h2><p>这个世界不可预测 这个世界不可控制<br>中心价值观系统，高度灵活的低控制系统<br>让前线听得到炮声的人发命令，后台去做支持<br>运用之妙，存乎一心</p>
<h2 id="第-42-期丨离开达尔文的日子"><a href="#第-42-期丨离开达尔文的日子" class="headerlink" title="第 42 期丨离开达尔文的日子"></a>第 42 期丨离开达尔文的日子</h2><p>达尔文“进化论” 物竞天择 适者生存<br>拉马克主义 后天习得 优势积累</p>
<h2 id="第-43-期丨土地私有-到底有多痛"><a href="#第-43-期丨土地私有-到底有多痛" class="headerlink" title="第 43 期丨土地私有 到底有多痛"></a>第 43 期丨土地私有 到底有多痛</h2><p>支持： 1.贫富分化严重，增加农民私有财产 2.公平，城市房价涨，获得财产性收入 3.集约经营以来土地流转，土地买卖 4.农民消失，自由选择生活方式<br>反对： 1.土地兼并，产生大量失地农民，大动乱 2.土地私有，阻碍国家建设的步伐和效率 3.城市的贫民窟问题，失地农民聚集在城市的边缘</p>
<p>皇权社会：土地税、人头税、徭役<br>当一个人愿意放弃自己的自由，而获取所谓的一点点保障的话，那他既不配拥有自由，也不配拥有保障</p>
<h2 id="第-44-期丨中国窄门"><a href="#第-44-期丨中国窄门" class="headerlink" title="第 44 期丨中国窄门"></a>第 44 期丨中国窄门</h2><p>中国以市场化为导向的改革进行了 30 多年，计划经济残留的国营企业依然存在。<br>中国的文化特质是什么？<br>管仲的经济思想：放活微观、管制宏观<br>税收：取之于无形 使人不怒<br>盐铁专卖<br>循环： 收-&gt;死-&gt;放-&gt;乱-&gt;收<br>桑弘羊之问：战争开支、中央收入、地方割据</p>
<h2 id="第-45-期丨你知道他该怎么死"><a href="#第-45-期丨你知道他该怎么死" class="headerlink" title="第 45 期丨你知道他该怎么死"></a>第 45 期丨你知道他该怎么死</h2><p>杨乃武与小白菜<br>翻案 极小概率事件<br>明清 浙江进士京官占比最高<br>执行死刑的成本<br>法律的目的：教育？<br>死刑的目的：威慑？<br>冤假错案，废除死刑，社会伦理共识达成的结果</p>
<h2 id="第-46-期丨一次大国崛起背影"><a href="#第-46-期丨一次大国崛起背影" class="headerlink" title="第 46 期丨一次大国崛起背影"></a>第 46 期丨一次大国崛起背影</h2><p>拿破仑三世 法国第二共和国总统<br>共和制下的普选 被政治控制的民意<br>人类历史上一个事件，刚开始第一次出现的时候，是一出悲剧；而当它第二次出现的时候，是一出闹剧。<br>扶持美国，抗衡英国<br>拿破仑家族的光环 无法打败仗<br>色厉而胆薄，好谋而无断，见大利而惜身，见小利而忘命，非英雄也！<br>夫英雄者，胸怀大志，腹有良谋，有包藏宇宙之机，吞吐天地之志者也。</p>
<h2 id="第-47-期丨教育难题的意外答案"><a href="#第-47-期丨教育难题的意外答案" class="headerlink" title="第 47 期丨教育难题的意外答案"></a>第 47 期丨教育难题的意外答案</h2><p>问题：<br>一、不公平<br>二、毁灭了一代人的兴趣、创造性和求学的热情<br>教育的功能<br>一、提升能力<br>二、赢得社会竞争，把人区别出来<br>竞争的过于激烈，第二个功能会反噬第一个功能，提升个人变得不重要<br>计划生育 单亲家庭 教育分流无法实现</p>
<h2 id="第-48-期丨未来脑世界"><a href="#第-48-期丨未来脑世界" class="headerlink" title="第 48 期丨未来脑世界"></a>第 48 期丨未来脑世界</h2><p>互联网进化论<br>单细胞生物进化成大脑 人类借助互联网构建全球脑<br>分形现象 宏观尺度到微观尺度的一种自相似性<br>宏观结构和微观结构惊人的这种不同尺度上的相似性，这是宇宙的普遍规律<br>小公司的发展 利用现有得基础设施 寄生<br>能力越大 责任越大</p>
<h2 id="第-49-期丨一次成功的政治体制改革"><a href="#第-49-期丨一次成功的政治体制改革" class="headerlink" title="第 49 期丨一次成功的政治体制改革"></a>第 49 期丨一次成功的政治体制改革</h2><p>明确目标<br>坚定的决心<br>柔软的身段<br>高超的智巧<br>共同的底线<br>建立元规则制度设计的能力<br>崇高的道德声望。</p>
<h2 id="第-50-期丨失控的天朝"><a href="#第-50-期丨失控的天朝" class="headerlink" title="第 50 期丨失控的天朝"></a>第 50 期丨失控的天朝</h2><p>成王败寇，历史的真实性<br>战争没有真正的胜利，对于人类，永远是灾难<br>一个优良的制度可以产生 力量和对力量优良的控制</p>
<h2 id="第-51-期丨怎么当个明白人"><a href="#第-51-期丨怎么当个明白人" class="headerlink" title="第 51 期丨怎么当个明白人"></a>第 51 期丨怎么当个明白人</h2><p>顽固派的三道防线：传统 权威 道德<br>天变不足畏，祖宗不足法，人言不足恤<br>巫术思维：投掷色子 大 力气大 小 力气小<br>办公楼内中央空调 增加无用的温度控制开关<br>人类企图通过简单的因果关系控制世界，以求得个人内心的踏实</p>
<h2 id="第-52-期丨谁杀死了罗马"><a href="#第-52-期丨谁杀死了罗马" class="headerlink" title="第 52 期丨谁杀死了罗马"></a>第 52 期丨谁杀死了罗马</h2><p>公民享受权利的同时，负有责任 自治的精神和公德心<br>普发公民权 断送了古罗马帝国上下阶层流动性<br>让上层社会获得荣誉感，下层社会获得奔头<br>罗马人没了荣耀，外省人没了奔头，军队没了底线<br>天下英雄尽入吾彀中<br>太宗皇帝真长策，赚得英雄尽白头</p>
<h2 id="第-53-期丨反腐到底反什么"><a href="#第-53-期丨反腐到底反什么" class="headerlink" title="第 53 期丨反腐到底反什么"></a>第 53 期丨反腐到底反什么</h2><p>陋规<br>腐败体系内部共同遵守的规矩<br>文官不爱钱，武将不怕死<br>腐败现象不仅仅是个人问题，官僚系统中的集群性病灶</p>
<h2 id="第-54-期-丨-阴谋，是可能的吗？"><a href="#第-54-期-丨-阴谋，是可能的吗？" class="headerlink" title="第 54 期 丨 阴谋，是可能的吗？"></a>第 54 期 丨 阴谋，是可能的吗？</h2><p>阴谋论：<br>造谣<br>不可证伪<br>旁证论证法<br>爱国<br>开放的自由市场 封闭信息和了解全部信息的真向是不可能的<br>浓缩信息为一个信号 期货市场的价格 PM2.5 的值<br>利率的本质是人们对于未来通货膨胀的预期</p>
<h2 id="第-55-期丨读书人的新活法"><a href="#第-55-期丨读书人的新活法" class="headerlink" title="第 55 期丨读书人的新活法"></a>第 55 期丨读书人的新活法</h2><p>体制内的人多数是 80 年代的第一批大学毕业生，现正值壮年<br>郁达夫研究会 诸葛亮研究会 养活了一大堆专家教授<br>个体为单位创造价值</p>
<h2 id="第-56-期丨奇葩评审团"><a href="#第-56-期丨奇葩评审团" class="headerlink" title="第 56 期丨奇葩评审团"></a>第 56 期丨奇葩评审团</h2><p>美国 1994 辛普深案<br>过度保护公民的权利的社会成本</p>
<h2 id="第-57-期丨中国为什么有前途"><a href="#第-57-期丨中国为什么有前途" class="headerlink" title="第 57 期丨中国为什么有前途"></a>第 57 期丨中国为什么有前途</h2><p>西班牙、葡萄牙、荷兰—-英国—-美苏<br>大国崛起：创新、规模<br>师夷长技以制夷</p>
<p>番外丨五问互联网<br>问题一：互联网，让人欢喜还是忧？<br>传统工作消亡，新工作不断涌现。<br>去中心化的结点效应，产生了集体智慧、群体智慧。<br>问题二：创业，哪里机会多？<br>边缘竞争：赢利低、不稳定、未经验证、市场狭小、风险系数极高<br>弯道超车，边缘化竞争 3<br>问题三：大公司，还能逃生吗？<br>去破坏自身所建立的高度，从顶峰下来，再去另一个山峰<br>自我攻击，用互联网的思路和方法去改造整个组织，相信人的价值-<br>去拥抱失败，去创造一种新的文化，去为科技做些思考。</p>
<h2 id="第-59-期-丨女人是一道题"><a href="#第-59-期-丨女人是一道题" class="headerlink" title="第 59 期 丨女人是一道题"></a>第 59 期 丨女人是一道题</h2><p>吸引：个人形象建立 高价值的展示<br>连接：情感上的同步 投入<br>升级</p>
<h2 id="第-60-期-丨我们应该反垄断吗"><a href="#第-60-期-丨我们应该反垄断吗" class="headerlink" title="第 60 期 丨我们应该反垄断吗"></a>第 60 期 丨我们应该反垄断吗</h2><p>社会是流动的<br>大企业产品过高的定价必定会激发小众的创新<br>如何定义垄断的边界<br>你真正的对手你看不见</p>
<h2 id="第-61-期丨崇祯为什么跑不了？"><a href="#第-61-期丨崇祯为什么跑不了？" class="headerlink" title="第 61 期丨崇祯为什么跑不了？"></a>第 61 期丨崇祯为什么跑不了？</h2><p>领导人和中层干部的信任<br>负责人要用于背黑锅<br>保留中层干部在普通员工前的威信<br>平级相待 花名相称</p>
<h2 id="第-62-期丨女神是怎么炼成的"><a href="#第-62-期丨女神是怎么炼成的" class="headerlink" title="第 62 期丨女神是怎么炼成的"></a>第 62 期丨女神是怎么炼成的</h2><p>制造一种势<br>善战者致人，而不致于人<br>让意识放松，绕过意识和潜意识对话<br>第一，禀赋。第二，死磕。第三，自恋。第四，有趣</p>
<h2 id="第-63-期丨致终将逝去的隐私"><a href="#第-63-期丨致终将逝去的隐私" class="headerlink" title="第 63 期丨致终将逝去的隐私"></a>第 63 期丨致终将逝去的隐私</h2><p>人类社会的框架：隐私和贪婪<br>大数据 多维的交叉复现<br>理论终结了，知道相互关系就够了<br>让底层参与决策</p>
<h2 id="第-64-期-丨魏忠贤：道德下的蛋"><a href="#第-64-期-丨魏忠贤：道德下的蛋" class="headerlink" title="第 64 期 丨魏忠贤：道德下的蛋"></a>第 64 期 丨魏忠贤：道德下的蛋</h2><p>框架：穷人就是好人，富人都是坏蛋，富人被穷人坑，大快人心事。<br>以道德开始，没有妥协，政治必然是一团黑暗。</p>
<h2 id="第-65-期-丨-开会是一个技术活"><a href="#第-65-期-丨-开会是一个技术活" class="headerlink" title="第 65 期 丨 开会是一个技术活"></a>第 65 期 丨 开会是一个技术活</h2><p>法律用来约束人心中的恶<br>三大妥协：商业妥协，五分之三妥协，大妥协<br>辩论技巧，想第三方妥协<br>完美的会议：权威，组织者，执刑者，协调者</p>
<h2 id="第-66-期-丨-傻帽悲观派"><a href="#第-66-期-丨-傻帽悲观派" class="headerlink" title="第 66 期 丨 傻帽悲观派"></a>第 66 期 丨 傻帽悲观派</h2><p>煽动者：世界一团漆黑，部分人作恶，大家跟我来<br>锚定效应：人的决策实际上是依据经验和局限的信息来做出的<br>吉文斯悖论：人类一直在节约能源、提高能源的使用效率。但是每提高一层的结果就是能源的消耗总量越大</p>
<h2 id="第-67-期-丨-倭寇真相"><a href="#第-67-期-丨-倭寇真相" class="headerlink" title="第 67 期 丨 倭寇真相"></a>第 67 期 丨 倭寇真相</h2><p>禁海政策，官逼民反，走私贸易<br>官府与民间组织的对与错，小规模胜在民心，结局在军事力量</p>
<h2 id="第-68-期-丨-右派为什么这么横"><a href="#第-68-期-丨-右派为什么这么横" class="headerlink" title="第 68 期 丨 右派为什么这么横"></a>第 68 期 丨 右派为什么这么横</h2><p>建构论：少数人的理性光芒照亮世界 建造一个天堂<br>扩展论：个人很卑微，依赖集体力量 等待大树成长<br>纵使一年不将军，不可一日不拱卒<br>去享用，不一定要占有，不要被既有的东西绑架，增量思维<br>固定资产的悲剧是不敢辞职、不敢创业、不敢冒险， 存量思维</p>
<h2 id="第-69-期-迷茫时代的明白人"><a href="#第-69-期-迷茫时代的明白人" class="headerlink" title="第 69 期 | 迷茫时代的明白人"></a>第 69 期 | 迷茫时代的明白人</h2><p>李鸿章：少年科甲、中年戎马、晚年洋务<br>其实清官有时候比贪官还可恨。贪官无非就是贪点钱，清官仗着自己不贪钱，就往往带着强大的道德正义感胡作非为。<br>让一个人的思想和行为不得自由的，有两个牢笼：一个是对过去的贪恋；一个是对未来的恐惧，以及对它的贪婪。</p>
<h2 id="第-70-期-丨-发现你的太平洋"><a href="#第-70-期-丨-发现你的太平洋" class="headerlink" title="第 70 期 丨 发现你的太平洋"></a>第 70 期 丨 发现你的太平洋</h2><p>寻找人生的增量，边缘创新<br>坚决认可并承认和直面自己内心对于金钱的渴望<br>沿途去获取最需要的帮助，用最低的成本去整合全新的资源<br>基于前人的经验，迈出下一步</p>
<h2 id="第-71-期丨-最后一个计划"><a href="#第-71-期丨-最后一个计划" class="headerlink" title="第 71 期丨 最后一个计划"></a>第 71 期丨 最后一个计划</h2><p>人口增长变慢：<br>儿童死亡率下降，在存活率低的情况下，拼命生<br>有钱了，奢侈品作为替代的消费品，家庭越富，对孩子的金钱时间投资越多<br>妇女解放运动<br>中国面对的人口问题，是人口出生率不足，不是人口过多。</p>
<h2 id="第-72-期-丨-阿根廷为什么哭泣"><a href="#第-72-期-丨-阿根廷为什么哭泣" class="headerlink" title="第 72 期 丨 阿根廷为什么哭泣"></a>第 72 期 丨 阿根廷为什么哭泣</h2><p>繁荣的条件：宪政，自由市场经济</p>
<h2 id="第-73-期-丨-大英帝国：不控制的智慧"><a href="#第-73-期-丨-大英帝国：不控制的智慧" class="headerlink" title="第 73 期 丨 大英帝国：不控制的智慧"></a>第 73 期 丨 大英帝国：不控制的智慧</h2><p>统治不成，情意还在；情意不在，生意还在<br>英国士兵把当地的商人弄到磙子下碾压，榨出最后一个便士。等榨穷了之后怎么办呢？不是破产了吗？好，我英国人再派一个传教士，你到传教士那儿去信上帝吧，从此你的心灵就安顿了。</p>
<h2 id="第-74-期-丨-囚徒嘉庆"><a href="#第-74-期-丨-囚徒嘉庆" class="headerlink" title="第 74 期 丨 囚徒嘉庆"></a>第 74 期 丨 囚徒嘉庆</h2><p>英明伟大到一事无成<br>一个封闭的财富系统，如果没有新来的增量，仅靠一个确定性的存量，不管这个存量有多大，它的花销一定会倒逼存量，最后还是不够花。<br>嘉庆皇帝所处的那个环境，是时代、民族、文化为他这个人打造的一个牢笼，他四面碰壁而不得其解，这有点儿像堂吉诃德，拿自己的长矛和假想的魔鬼风车作战，最后的结局是扔掉长矛，坐在地上长吁短叹。</p>
<h2 id="第-75-期丨胡适的百年孤独"><a href="#第-75-期丨胡适的百年孤独" class="headerlink" title="第 75 期丨胡适的百年孤独"></a>第 75 期丨胡适的百年孤独</h2><p>理想主义的知识分子，不是完人，社会所需的善人<br>尝居是山，不忍见耳</p>
<h2 id="第-76-期-丨大国不能不识数"><a href="#第-76-期-丨大国不能不识数" class="headerlink" title="第 76 期 丨大国不能不识数"></a>第 76 期 丨大国不能不识数</h2><p>资本主义就是用计算的方法来决定所有的市场行为<br>安全这个事它是没有尽头的<br>人命至重，人命无价<br>利益与安全间的权衡</p>
<h2 id="第-77-期-丨-爱，为什么变伤害"><a href="#第-77-期-丨-爱，为什么变伤害" class="headerlink" title="第 77 期 丨 爱，为什么变伤害"></a>第 77 期 丨 爱，为什么变伤害</h2><p>极端的控制欲</p>
<h2 id="第-78-期-丨看不懂的英美法"><a href="#第-78-期-丨看不懂的英美法" class="headerlink" title="第 78 期 丨看不懂的英美法"></a>第 78 期 丨看不懂的英美法</h2><p>三个部分构成<br>合适的人<br>法律共同体以及相应的集体荣誉感<br>随时随地地生长，可以像生物一样的自我更新和演化<br>创新性系统<br>负责人的普通人<br>有荣誉感的精英<br>宽容的制度环境</p>
<h2 id="第-79-期-丨-为魔鬼辩护"><a href="#第-79-期-丨-为魔鬼辩护" class="headerlink" title="第 79 期 丨 为魔鬼辩护"></a>第 79 期 丨 为魔鬼辩护</h2><p>幻想前现代化田园生活是可笑的，生命的本质是或者，生存是最紧要的需求，现代社会的生存成本更低。<br>一、人性的自由释放是一股无法阻挡的潮流<br>二、未来现代化将解决现代化带来的问题</p>
<h2 id="第-80-期-丨-权利与生意"><a href="#第-80-期-丨-权利与生意" class="headerlink" title="第 80 期 丨 权利与生意"></a>第 80 期 丨 权利与生意</h2><p>当一个市场的核心是由政治权力来构筑的时候，围绕着它就会形成一个大的漩涡。<br>纯粹的，有核心竞争力，有未来的公司</p>
<h2 id="第-81-期-丨托克维尔讲什么"><a href="#第-81-期-丨托克维尔讲什么" class="headerlink" title="第 81 期 丨托克维尔讲什么"></a>第 81 期 丨托克维尔讲什么</h2><p>社会中间结构的重要性：提供社会公共服务<br>封建制的好处<br>中间结构是贵族阶层<br>有人情味的政治<br>一个人如果想拥有一个未来，那一定是和其他人一起的未来。</p>
<h2 id="第-82-期-丨-曾国藩成功学"><a href="#第-82-期-丨-曾国藩成功学" class="headerlink" title="第 82 期 丨 曾国藩成功学"></a>第 82 期 丨 曾国藩成功学</h2><p>内圣外王<br>表面的小人 低调的君子</p>
<h2 id="第-83-期-丨-他真的拯救了美国？"><a href="#第-83-期-丨-他真的拯救了美国？" class="headerlink" title="第 83 期 丨 他真的拯救了美国？"></a>第 83 期 丨 他真的拯救了美国？</h2><p>20 世界 两场灾难：一战二战 两场实验：中央计划经济 自由市场经济<br>唯一值得恐惧的，就是恐惧本身<br>混乱中的独裁主义</p>
<h2 id="第-84-期-丨-改变世界的箱子"><a href="#第-84-期-丨-改变世界的箱子" class="headerlink" title="第 84 期 丨 改变世界的箱子"></a>第 84 期 丨 改变世界的箱子</h2><p>创始人未必挣钱，可能作为试验品。<br>面对巨大的创新，我们无法判断福祸。<br>全球一体化的深化和推动，Just in time，即时生产，全球分工生产。<br>更多的普通人加入全球化。<br>改变全球的政治格局和经济格局。</p>
<h2 id="第-85-期丨费马大定理"><a href="#第-85-期丨费马大定理" class="headerlink" title="第 85 期丨费马大定理"></a>第 85 期丨费马大定理</h2><p>兴趣的魅力<br>吸引智力卓绝的人<br>献祭生命<br>波澜壮阔的史诗</p>
<h2 id="第-86-期-丨-南明为什么扛不住"><a href="#第-86-期-丨-南明为什么扛不住" class="headerlink" title="第 86 期 丨 南明为什么扛不住"></a>第 86 期 丨 南明为什么扛不住</h2><p>血缘组织：草原部落联盟<br>地缘组织：地方原生自建部队<br>八旗组织：旗、囤山、甲喇、牛录、300 丁<br>组织变形，去中心化组织</p>
<h2 id="第-87-期-丨-市场的广度"><a href="#第-87-期-丨-市场的广度" class="headerlink" title="第 87 期 丨 市场的广度"></a>第 87 期 丨 市场的广度</h2><p>经济学中的灯塔问题<br>免费的福利，背后都有成根本<br>市场和政府之前，彼此渗透，彼此合作，彼此博弈</p>
<h2 id="第-88-期丨纳粹的毒瘤"><a href="#第-88-期丨纳粹的毒瘤" class="headerlink" title="第 88 期丨纳粹的毒瘤"></a>第 88 期丨纳粹的毒瘤</h2><p>顶尖的营销和包装<br>降低失业率，维持社会稳定<br>劫富济贫</p>
<h2 id="第-89-期丨被误会的租界"><a href="#第-89-期丨被误会的租界" class="headerlink" title="第 89 期丨被误会的租界"></a>第 89 期丨被误会的租界</h2><p>最糟糕的秩序也远远好过没有秩序<br>政府的“主动”让权</p>
<h2 id="第-90-期丨-3D-打印有未来吗"><a href="#第-90-期丨-3D-打印有未来吗" class="headerlink" title="第 90 期丨 3D 打印有未来吗"></a>第 90 期丨 3D 打印有未来吗</h2><p>工业社会： 标准化的大规模制造，精细化的人的分工<br>产品的发展方向，不受发明者控制<br>工业时代私人订制的消失</p>
<h2 id="第-91-期丨领导，你为啥不信我"><a href="#第-91-期丨领导，你为啥不信我" class="headerlink" title="第 91 期丨领导，你为啥不信我?"></a>第 91 期丨领导，你为啥不信我?</h2><p>组织机制就是信息机制，更多效率就意味着更少权力<br>互联网转型追求的是一种“失控”，也就是用中心权力的丧失，去获取整个组织的更大活力和信息的更通常的流动，得到信息传递的高效率。</p>
<h2 id="第-92-期丨有一种失败叫闹剧"><a href="#第-92-期丨有一种失败叫闹剧" class="headerlink" title="第 92 期丨有一种失败叫闹剧"></a>第 92 期丨有一种失败叫闹剧</h2><p>权力不可靠<br>制造一个利益结构，在这个利益结构当中，所有的人都能够得利</p>
<h2 id="第-93-期丨谁弄脏了高利贷"><a href="#第-93-期丨谁弄脏了高利贷" class="headerlink" title="第 93 期丨谁弄脏了高利贷"></a>第 93 期丨谁弄脏了高利贷</h2><p>市场经济是以网络的状态出现，对任何一个点的禁止，结果就一定会出现一朵又一朵的奇葩。<br>去引导，而不是禁止。<br>义正辞严的，把道德叼在嘴上的那些人，没准儿是真正的恶棍。<br>借贷利息的升高，受到两个因素的影响。第一个是人类对于未来的预期和判断变低，人类对未来越没有信心，利息会越高；第二个是借贷越困难，利息越会升高。 人人基于自己的利益判断，根据法律，主动地捍卫自己的利益，去和他人进行利益博弈的时代，才是一个正常的时代。</p>
<h2 id="第-94-期丨“卖国贼”的战场"><a href="#第-94-期丨“卖国贼”的战场" class="headerlink" title="第 94 期丨“卖国贼”的战场"></a>第 94 期丨“卖国贼”的战场</h2><p>弱国思维：不断地感受那些伤害，然后做各种情绪化的、抓狂的表达<br>强国思维：立足于现状，着眼于利益，一点一点地改善自己，分析对问题，然后找到解决它的方法。既不去感受那个伤害，也不做任何抓狂的、失态的、过分的，情绪性的表达。</p>
<h2 id="第-95-期丨一个该死者的意外生存"><a href="#第-95-期丨一个该死者的意外生存" class="headerlink" title="第 95 期丨一个该死者的意外生存"></a>第 95 期丨一个该死者的意外生存</h2><p>当有 1%的利润的时候，资本就开始蠢蠢欲动<br>利用实现正义去获取人命、收割人命，然后带来更大的不正义<br>现代社会结为共同体的关键要素是契约，它的本质就是理性，它与人心中的情感是可能有冲突的</p>
<h2 id="第-96-期丨到底谁在迫害科学"><a href="#第-96-期丨到底谁在迫害科学" class="headerlink" title="第 96 期丨到底谁在迫害科学?"></a>第 96 期丨到底谁在迫害科学?</h2><p>宗教和科学的关系并不是简单的对立，反而更多的是互相补充和互相滋养。 教会争夺的并不是真理本身，而是“认可真理的权力”。 宗教的背后是人，科学的背后也是人，各种观念的背后都是人。而人一旦放在了一起，马上就存在资源的分配问题，马上就出现了权力的问题。原来我们关心的是真理，是这个世界本来是什么样；现在就变成了另外一个问题，叫这个世界到底谁该听谁的</p>
<h2 id="第-97-期丨海盗的世界你懂吗"><a href="#第-97-期丨海盗的世界你懂吗" class="headerlink" title="第 97 期丨海盗的世界你懂吗"></a>第 97 期丨海盗的世界你懂吗</h2><p>主流社会断裂下去的产物<br>两种思维方式<br>一、站在局外人的视角，当评论家，分析别人的是非、善恶、闲愚、美丑，得出结论。<br>二、将心比心，穿越到别人的具体的处境里面，其试图理解别人的行为。<br>谁都不比谁傻，谁都会为了捍卫自己的利益，做出最聪明的决策；所有人的做法，都有他自个儿的道理，我该抱有理解之同情。</p>
<h2 id="第-98-期丨医生的敌人"><a href="#第-98-期丨医生的敌人" class="headerlink" title="第 98 期丨医生的敌人"></a>第 98 期丨医生的敌人</h2><p>法律、舆论、宗教、种族主义<br>背着病人过河</p>
<h2 id="第-99-期丨成大事者不纠结"><a href="#第-99-期丨成大事者不纠结" class="headerlink" title="第 99 期丨成大事者不纠结"></a>第 99 期丨成大事者不纠结</h2><p>未来不迎，当时不杂，过往不恋。<br>不同的手段，“无赖”和“君子”</p>
<h2 id="第-100-期丨武器的进化"><a href="#第-100-期丨武器的进化" class="headerlink" title="第 100 期丨武器的进化"></a>第 100 期丨武器的进化</h2><p>燧发枪的出现，组成对列互相对射<br>杀人的到底是子弹，还是人落后的思想<br>少数精英的创新能力和社会整体的适应能力之间，有一段落差。精英，那些聪明人，把那些新的武器、新的技术，不断地抛到这个世界上。</p>
<h2 id="第-101-期丨一场血流成河的分家"><a href="#第-101-期丨一场血流成河的分家" class="headerlink" title="第 101 期丨一场血流成河的分家"></a>第 101 期丨一场血流成河的分家</h2><p>所谓的宗教因素，它有的时候就是个借口，就是个诱因。真正导致大屠杀的是另外一根逻辑链条。这根逻辑链条里，有三个魔鬼： 第一个，是政治动员； 第二个，一部分人以公义的借口犯下暴行，实际上是为了私利； 第三个，是复仇。</p>
<h2 id="第-102-期丨宋教仁遇刺案"><a href="#第-102-期丨宋教仁遇刺案" class="headerlink" title="第 102 期丨宋教仁遇刺案"></a>第 102 期丨宋教仁遇刺案</h2><p>所谓的现代的宪政民主，本质上是一种自下而上的授权结构，这和原来传统社会帝制时代的权力结构正好相反。 民主跟个人的素质没有太大关系，民主是一种人和人之间的关系状态，只有这种状态的前提条件具备了，民主才可能发育得出来。 民主既是一个好东西，但是它是一个在时间上急不得，在培养公民自治的进程上又等不得的好东西。</p>
<h2 id="第-103-期丨疯狂的投资"><a href="#第-103-期丨疯狂的投资" class="headerlink" title="第 103 期丨疯狂的投资"></a>第 103 期丨疯狂的投资</h2><p>一个创业者应该具备的素质：第一，乐观的禀赋；第二，行动的能力；第三，吹牛，整合资源的本事。<br>社会并不会因为表面上的贫富差距而变得不稳定，关键是财富的总量是不是在增加。<br>富人凭什么挣那么多的钱？ 第一，凭借个人禀赋； 第二，凭借肯吃苦的精神； 第三，因为他们承受了风险； 第四，资本家最终拿到的那笔收入，和他创造的财富相比，其实是很小的一块，他为社会财富总量的增加做了贡献。</p>
<h2 id="第-104-期丨甲午悲歌·上·下"><a href="#第-104-期丨甲午悲歌·上·下" class="headerlink" title="第 104 期丨甲午悲歌·上·下"></a>第 104 期丨甲午悲歌·上·下</h2><p>李鸿章和日本的战争<br>爱国主义的宣传，某种程度上宣扬命运共同体，凝聚人心，自信，骄傲<br>亲历亲为，才能接近事件真相</p>
<h2 id="第-106-期丨是非功罪说泡沫"><a href="#第-106-期丨是非功罪说泡沫" class="headerlink" title="第 106 期丨是非功罪说泡沫"></a>第 106 期丨是非功罪说泡沫</h2><p>泡沫的本质是财产的非正常转移<br>只要是基于自由意愿的自由交易，你永远别说它一定是一个坏东西。  泡沫的破灭虽然可能是一场灾难，但有时也能够为相应领域的发展打下基础。</p>
<h2 id="第-107-期丨数字的坏话"><a href="#第-107-期丨数字的坏话" class="headerlink" title="第 107 期丨数字的坏话"></a>第 107 期丨数字的坏话</h2><p>大数据的本质不是数据多，也不是数字大，而是维度丰富。<br>统计学：1.样本问题 2.反馈失灵<br>布拉德利效应，口是心非，理论和实践的差距<br>数据陷阱：假精确和假对比</p>
<h2 id="第-108-期丨总统是怎么被扒光的"><a href="#第-108-期丨总统是怎么被扒光的" class="headerlink" title="第 108 期丨总统是怎么被扒光的"></a>第 108 期丨总统是怎么被扒光的</h2><p>从水门事件看美国制度，都说美国制度很好，但是也有漏洞，总统有行政权和三军指挥权，但是再好的制度还得靠人去执行，制度和规则制定的再好总能找到漏洞，所以得靠人去执行，小道理得服从大道理<br>制度的形成靠的是人与人自己之间的相互遵守，相互监督，相互制衡。在古代，都有天子犯法与庶民同罪，水门事件使得尼克松下台，当人们严格按照制度来行驶权利时，再大的隐情都会被挖掘出来，让真相浮出水面。</p>
<h2 id="第-109-期丨中国从哪里来"><a href="#第-109-期丨中国从哪里来" class="headerlink" title="第 109 期丨中国从哪里来"></a>第 109 期丨中国从哪里来</h2><p>周朝的礼，吉、凶、军、宾、嘉，要从日常生活的细节来确定的等级规则<br>契约社会？本质上就是法治社会。所谓现代化，民主仅仅是个表象，法治，人和人之间由平等、由规则构建的大共同体，才是现代化的真相。</p>
<h2 id="第-110-期丨大门口的野蛮人"><a href="#第-110-期丨大门口的野蛮人" class="headerlink" title="第 110 期丨大门口的野蛮人"></a>第 110 期丨大门口的野蛮人</h2><p>日本经济管理：终身雇佣制、年功序列制、企业内部工会、决策审核制<br>市场经济，看不见的手，一直在对社会的所有资源，往最优化的方向去配置它<br>希望就是未来的不确定性。如果未来即使非常美好，如果它是确定性的，也不会带来任何希望。<br>当存量过大的时候，创新本身就是在逻辑上不可能的事情<br>那就是靠那些敢想敢干，机会成本特别低，表面看起来可能素质比较低的人，用自己的拼搏精神和机会成本，去大量地试错，然后找出一个可能的创新方向，然后有素质的人再扑上去。人类搞创新，自古至今，这个过程从来没有变过。</p>
<h2 id="第-111-期丨大清帝国的生死时速"><a href="#第-111-期丨大清帝国的生死时速" class="headerlink" title="第 111 期丨大清帝国的生死时速"></a>第 111 期丨大清帝国的生死时速</h2><p>民众他没有理性的，他只有感情的思考，他完全不能做理论上的推导，他只能接受一堆拼凑起来的概念。<br>所有后发现代型国家在搞政治现代化这个问题上，有一个天然的难题。一方面要干事，得集权；一方面，政治现代化本质上就是分权，怎么样用集权的力量去推动分权？</p>
<h2 id="第-112-期丨坏国王的遗产"><a href="#第-112-期丨坏国王的遗产" class="headerlink" title="第 112 期丨坏国王的遗产"></a>第 112 期丨坏国王的遗产</h2><p>只要这个国家保持一个和平的态势，给一个开放的格局，那种零零星星的社会力量它自然就会起作用，原来那些保守的、传统的因素，它渐渐地就会被推着往前走。</p>
<h2 id="第-113-期丨谁绑架了团结"><a href="#第-113-期丨谁绑架了团结" class="headerlink" title="第 113 期丨谁绑架了团结"></a>第 113 期丨谁绑架了团结</h2><p>互联网时代的社群，不是那些失败者抱团取暖的地方。互联网时代的社群，是让牛逼的人变得更加牛逼的地方</p>
<h2 id="第-114-期丨秦始皇在隐瞒什么"><a href="#第-114-期丨秦始皇在隐瞒什么" class="headerlink" title="第 114 期丨秦始皇在隐瞒什么"></a>第 114 期丨秦始皇在隐瞒什么</h2><p>从秦朝到明朝，皇权一直在试图解决几对关系：皇权和皇权的同族兄弟之间的关系、皇权和外戚的关系、皇权和太监的关系、皇权和权臣的关系。</p>
<p>最后一直到明清时代，这个问题才被解决，那个巩固的、集权的皇权，才终于建成。</p>
<h2 id="第-115-期丨人类灭绝的一种可能"><a href="#第-115-期丨人类灭绝的一种可能" class="headerlink" title="第 115 期丨人类灭绝的一种可能"></a>第 115 期丨人类灭绝的一种可能</h2><p>有多少人工就有多少智能<br>人工智能每实现一步，大家马上就不认为它是人工智能了<br>我们稍有常识都知道，未来是一股乱流，我们是无法精确地预测未来的。<br>但是，作为一个努力拓宽自己认知边界的人，把人类摘开，重新探索和思考这个世界的本源，这是一种很有意思的智力活动。</p>
<h2 id="第-116-期丨统一是怎样炼成的"><a href="#第-116-期丨统一是怎样炼成的" class="headerlink" title="第 116 期丨统一是怎样炼成的"></a>第 116 期丨统一是怎样炼成的</h2><p>国家就是时间河流上的航船，所以国家的掌舵人、政治家，他就应该有那个船长的本事。<br>船长从来也不认死理，船长也从来不讲总体解决方案，船长就是跟着时间的河流，该左就左，该右就右。根据当时当下的情况，做出最明智的判断。</p>
<h2 id="第-117-期丨你因挣钱而伟大"><a href="#第-117-期丨你因挣钱而伟大" class="headerlink" title="第 117 期丨你因挣钱而伟大"></a>第 117 期丨你因挣钱而伟大</h2><p>《穷理查历书》，这本书讲了一个浅显的道理，就是一个人当他又能挣又不花，这不仅是积累财富的手段，也是他培养自己美德的手段。</p>
<p>保持旺盛的好奇心，取得正当的财富，赢得有趣的尊重，做最具体、最实在的事情，而且勤奋地去做，而不去空谈大道理。这就是我认为的最有尊严的生活。</p>
<h2 id="第-119-期丨谁杀死了秦帝国"><a href="#第-119-期丨谁杀死了秦帝国" class="headerlink" title="第 119 期丨谁杀死了秦帝国"></a>第 119 期丨谁杀死了秦帝国</h2><p>理想和现实利益之间的这种关系大概有两种：</p>
<p>一种是善意的方式，就是我有我的理想，你有你的理想，我们互相尊重。</p>
<p>不要用理想去绑架别人，同时也不允许别人哪里像绑架我，这是自由主义人生观的重要体现</p>
<p>还有一种恶性的理想主义方式，就是我有我的理想，这玩意儿可是宇宙真理，我的理想就应该是你的理想</p>
<h2 id="第-120-期丨一位民选皇帝的烟花绽放"><a href="#第-120-期丨一位民选皇帝的烟花绽放" class="headerlink" title="第 120 期丨一位民选皇帝的烟花绽放"></a>第 120 期丨一位民选皇帝的烟花绽放</h2><p>西汉：</p>
<ol>
<li>汉高祖 惠帝 吕后</li>
<li>文景之治</li>
<li>汉武帝 刘彻</li>
<li>昭宣盛世 霍光辅政</li>
<li>元、成、哀、平 王莽篡汉</li>
</ol>
<p>在西汉王朝的末端，我们看到了一场道德盛筵，我们看到了一场制度设计的狂欢，是王莽这个人用毕生的心血和巨大的道德自信酿成的一枚苦果，整个新朝十五年像一朵烟花一样在夜空中绽放，然后又归于寂灭。</p>
<h2 id="第-121-期丨丰满理想下的残酷杀戮"><a href="#第-121-期丨丰满理想下的残酷杀戮" class="headerlink" title="第 121 期丨丰满理想下的残酷杀戮"></a>第 121 期丨丰满理想下的残酷杀戮</h2><p>道家：慈 俭 不敢为天下先</p>
<p>保守主义者看来，这个世界上甭管你有多么的理性，甭管你对未来理想社会的设计是多么的完善和美好，对不起，我不信，我就相信从现在的现实出发，一步一步地修修补补，推动现实缓慢地往前走。我们从来也不着急，这就是保守主义的基本世界观</p>
<h2 id="第-122-期丨物种战争"><a href="#第-122-期丨物种战争" class="headerlink" title="第 122 期丨物种战争"></a>第 122 期丨物种战争</h2><p>一个小生物的崛起，千万不要小看它，它带来的何止是破坏，它带来的是生态大结构重整的机会。<br>商业竞争的实质：最浅的是力量之争，深一点的数量之争，最深的是多样化之争</p>
<p>那些新物种仍然在我们地平线的远方，他们还没有到来，这就是这一代创业者的机会，但是它也是现在所有在世的公司的真正威胁。</p>
<h2 id="第-123-期丨午夜将至"><a href="#第-123-期丨午夜将至" class="headerlink" title="第 123 期丨午夜将至"></a>第 123 期丨午夜将至</h2><p>人生而对自己的行为有决定权，但是你的所有决定无往而不在网络之中。</p>
<p>当你把骰子掷出去，当你决定要发起一个强烈对抗性行为的时候，当你决定要做一件不符合你当下道德标准的事情的时候，当你把骰子已经掷出去的时候，你心里应该明白，事实上你对整个事态都是失控的。</p>
<h2 id="第-124-期丨君臣一局棋"><a href="#第-124-期丨君臣一局棋" class="headerlink" title="第 124 期丨君臣一局棋"></a>第 124 期丨君臣一局棋</h2><p>张载 张横渠 横渠四句 为天地立心，为生民立命，为往圣继绝学，为万世开太平<br>内圣外王</p>
<p>法治国家的核心恰恰不在于你看到的这些什么成文法，什么投票，什么议会制度。</p>
<p>而在于用时间和历史去结成一个巨大的共识，再把这个共识返回到时间当中，让它慢慢沉淀，直到它变成一个大家公认的伟大的、牢不可破的传统，这就是宪政社会，这就是法制制度的最稳固的基石。</p>
<h2 id="第-125-期丨爱因斯坦的逆袭"><a href="#第-125-期丨爱因斯坦的逆袭" class="headerlink" title="第 125 期丨爱因斯坦的逆袭"></a>第 125 期丨爱因斯坦的逆袭</h2><p>科学共同体有两个前提。第一个前提是，它是现代科学思维下的共同体；第二，科学共同体它的构成者一定是那些自由意志下的，有担当、负责任的科学家构成的共同体。</p>
<h2 id="第-126-期丨一次体制改革的反面标本"><a href="#第-126-期丨一次体制改革的反面标本" class="headerlink" title="第 126 期丨一次体制改革的反面标本"></a>第 126 期丨一次体制改革的反面标本</h2><p>所以所有的企业家，如果你真觉得自己要面对互联网转型了，真的要参与到这个活力驱动的全新市场环境当中，那好，你面前真的就有一面镜子。它的正面就是我们正在经历的改革开放，而它的反面就是我们今天讲的，王安石变法。</p>
<h2 id="第-127-期丨权术表演家"><a href="#第-127-期丨权术表演家" class="headerlink" title="第 127 期丨权术表演家"></a>第 127 期丨权术表演家</h2><p>权术这个东西它要去使，它有一个前提条件，就是你不得不在这个位置上，你没有其他的选择。</p>
<p>一个传统的权术家，他能够用的权术的招法，在嘉靖皇帝的一生当中，我们都可以看得到，他是最好的一个权术标本。</p>
<h2 id="第-128-期丨商人的道德难题"><a href="#第-128-期丨商人的道德难题" class="headerlink" title="第 128 期丨商人的道德难题"></a>第 128 期丨商人的道德难题</h2><p>科学家：特斯拉 企业家：爱迪生<br>一个企业家判断他成功还是失败，只有一个标准，就是他亲手缔造的那个企业，现在是不是仍然在创造着奇迹，这是企业家这个族群最大最大的悲情。</p>
<h2 id="第-129-期丨其实都是聪明人"><a href="#第-129-期丨其实都是聪明人" class="headerlink" title="第 129 期丨其实都是聪明人"></a>第 129 期丨其实都是聪明人</h2><p>现代化程度的区别就在这儿，越是落后的国家，落后的组织形态，每一个人就越是对自己的位置负责；越是先进的国家，越是先进的创业型公司，就是每一个人为事负责。</p>
<h2 id="第-130-期丨最难的创业"><a href="#第-130-期丨最难的创业" class="headerlink" title="第 130 期丨最难的创业"></a>第 130 期丨最难的创业</h2><p>也许我们的命运上帝已经给定好了，在他的兜里已经装了一张底牌，我们的创业就是奋力地爬过去，爬到上帝的脚边，把他兜里那张底牌掏出来看一眼，看看我这一生穷其可能，尽其才华，我们能把这个生意做到多大。</p>
<p>知道了这个底牌，我们就死可瞑目了，这就是创业者的终极心法。</p>
<h2 id="第-131-期丨西方军队胜利的秘密"><a href="#第-131-期丨西方军队胜利的秘密" class="headerlink" title="第 131 期丨西方军队胜利的秘密"></a>第 131 期丨西方军队胜利的秘密</h2><p>内驱力：</p>
<ol>
<li>从组织样式看军事文化区别</li>
<li>一个组织的效率是如何获得，又是怎样丧失的</li>
<li>让富人不在害怕，让穷人有盼头</li>
</ol>
<p>在方阵当中，其实形成了这样的一种战斗力组织方式，就是每一个人秉着自己的荣誉感，自己的单兵格斗技巧，各尽其责；与此同时，信任身边的战友。</p>
<h2 id="第-132-期丨中国也有一个愚人节"><a href="#第-132-期丨中国也有一个愚人节" class="headerlink" title="第 132 期丨中国也有一个愚人节"></a>第 132 期丨中国也有一个愚人节</h2><p>战场上得不到的东西，我们可以从商业上把它得到；政治家往往在战场上得不到的东西，总想用谎言把它得到。</p>
<h2 id="第-133-期丨强者的宿命"><a href="#第-133-期丨强者的宿命" class="headerlink" title="第 133 期丨强者的宿命"></a>第 133 期丨强者的宿命</h2><p>我们每一个人看每一件事情，看每一个强者和弱者，我们都应该摆脱那种故事思维，说白了单向思维，人的一生永远是多向的，他既有成功，有赢，但是也有道德</p>
<h2 id="第-134-期丨恶之花"><a href="#第-134-期丨恶之花" class="headerlink" title="第 134 期丨恶之花"></a>第 134 期丨恶之花</h2><p>凡夫畏果，菩萨畏因</p>
<p>有修为、有智慧的人，他怕的是什么？怕的是自己的起心动念，就是一切事情的因，一旦一个恶从你内心生长，并且变成具体的行为之后，根本就停不下来。所以说，菩萨畏因，凡夫畏果，一念天堂，一念地狱。</p>
<h2 id="第-136-期丨只有一种人能改写历史"><a href="#第-136-期丨只有一种人能改写历史" class="headerlink" title="第 136 期丨只有一种人能改写历史"></a>第 136 期丨只有一种人能改写历史</h2><p>什么样的人可以改写历史？我想至少应该有两条：</p>
<p>第一，什么资本他都应该有一点，但是什么资本都不是他唯一的依靠。第二，什么规则他心里都有，但什么规则对他来说，都不是牢不可破的天条。</p>
<p>结构洞:族群交流的桥梁</p>
<p>产品经理不见得会写代码，但是他有一个重要的本事，就是既听得懂程序员在想什么，也看得懂市场反馈回来的数字，也搞得懂用户的心思，还搞得清公司高管对这个项目的要求。所以他在整个这个环境当中，他就是结构洞，他是所有人语言的翻译家。</p>
<h2 id="第-137-期丨藩镇割据-毒药还是良药"><a href="#第-137-期丨藩镇割据-毒药还是良药" class="headerlink" title="第 137 期丨藩镇割据:毒药还是良药?"></a>第 137 期丨藩镇割据:毒药还是良药?</h2><p>那就是当企业突然陷入了一股大家还分不清楚东南西北的科技潮流的时候，这个时候有巨大的不确定性，那你就面对两个选择了。</p>
<p>第一个选择，就是继续迷恋什么令行禁止、科学管理、严密考核、长远规划，这一系列代表中央集权的东西，那你就用你的控制力，你的权力欲去跟新时代掰掰腕子。</p>
<p>那第二条道路呢，就是选择相信那些个体和小团队的创造力，把企业变成一个平台，以资本为纽带，让这些人自行其是，分头突围。</p>
<h2 id="第138期丨庸众的迫害"><a href="#第138期丨庸众的迫害" class="headerlink" title="第138期丨庸众的迫害"></a>第138期丨庸众的迫害</h2><p>适度的冷漠，少一些道德绑架，多一些自我。</p>
<h2 id="第139期丨日本为什么会失败"><a href="#第139期丨日本为什么会失败" class="headerlink" title="第139期丨日本为什么会失败"></a>第139期丨日本为什么会失败</h2><p>那什么叫战略低能呢？就是每一步只看得到当下，做各种各样应激反应，有人批评就沮丧，有人表扬有得意，看见利益就想上，看见困难就想退，这种人就叫没有战略。在历史上，不论是国家还是企业，还是个人，其实所有的失败都是战略失败。</p>
<h2 id="第140期丨认钱不认人"><a href="#第140期丨认钱不认人" class="headerlink" title="第140期丨认钱不认人"></a>第140期丨认钱不认人</h2><p>经济学通识: 一，刚需是扯淡；第二，一切皆稀缺；第三，人生全是选择。</p>
<p>所以金钱这个东西最可爱的地方在哪里？就是我们经常骂钱的那句话，叫只认钱不认人。对，这恰恰是金钱的好处，金钱它只凝结了利益要素，它没有凝结什么人格要素。</p>
<p>自由既是目的，又是手段，只有自由才能推动自由，而核心就是金钱。</p>
<h2 id="第141期丨恶之果"><a href="#第141期丨恶之果" class="headerlink" title="第141期丨恶之果"></a>第141期丨恶之果</h2><p>有一个恶的制度，你就必须发明一个更恶的制度来解前面的毒。而一旦一味药解了毒之后，它本身变成了毒，那就再也无药可解了。</p>
<h2 id="第142期丨有的在升起，有的在坠落"><a href="#第142期丨有的在升起，有的在坠落" class="headerlink" title="第142期丨有的在升起，有的在坠落"></a>第142期丨有的在升起，有的在坠落</h2><p>当一个国家用所谓的爱国主义和精神控制，调动起国民的能力，形成一个假想的，一时的现代化国家的幻象，对不起，这个幻象终会破灭，日本人当时的经历就给了我们这样一个活生生的例子。</p>
<h2 id="第143期丨民主小时候"><a href="#第143期丨民主小时候" class="headerlink" title="第143期丨民主小时候"></a>第143期丨民主小时候</h2><p>但是西方人通过上千年的思考，通过几百年的实践，逐渐把这个非常野性的东西已经驯化掉了。所以我们都以为民主是驯化那些精英，驯化那些君主们，错，民主本身就在被驯化。</p>
<p><a class="link"   href="https://m.igetget.com/share/course/article?id=Ozpeyw8lG6QaXk7PjXRd1ZoA75NLBb" >https://m.igetget.com/share/course/article?id=Ozpeyw8lG6QaXk7PjXRd1ZoA75NLBb<i class="fas fa-external-link-alt"></i></a></p>
<h2 id="第144期丨什么是好的经济学"><a href="#第144期丨什么是好的经济学" class="headerlink" title="第144期丨什么是好的经济学"></a>第144期丨什么是好的经济学</h2><p>说改造世界非经济学之长，而改造世界观却是经济学的强项</p>
<p>雇佣也是一种交易，这种交易的自由度也应该得到保护，而不是用什么劳动合同法、最低工资标准来干扰它。一旦干扰会产生恶果的，这个恶果不仅会落在资本家的头上，更多的恶果会落在劳工阶层的头上。</p>
<h2 id="第145期丨什么是有钱人"><a href="#第145期丨什么是有钱人" class="headerlink" title="第145期丨什么是有钱人"></a>第145期丨什么是有钱人</h2><p>我们中国人经常讲一句话嘛，叫吃不穷喝不穷，算计不到要受穷，这是传统社会的观念。而现代商业文明给我们指示了另外一条思路，叫吃不穷喝不穷，没有创造一定受穷。</p>
<h2 id="第146期丨真实世界的创新"><a href="#第146期丨真实世界的创新" class="headerlink" title="第146期丨真实世界的创新"></a>第146期丨真实世界的创新</h2><p>第一，持续地做；第二，系统地做；第三，死磕地做，这恰恰就是创新本身。<br>劳动密集型科研</p>
<h2 id="第147期丨激战中途岛"><a href="#第147期丨激战中途岛" class="headerlink" title="第147期丨激战中途岛"></a>第147期丨激战中途岛</h2><p>每一个人都应该是创意精英，创意精英是不需要管理，甚至不需要激励的，他自己就会找活干。<br>互联网最重要的功劳就是把每一个人的才能和价值都充分地释放出来</p>
<h2 id="第148期丨忽必烈的二次创业"><a href="#第148期丨忽必烈的二次创业" class="headerlink" title="第148期丨忽必烈的二次创业"></a>第148期丨忽必烈的二次创业</h2><p>繁荣：<br>第一，叫有军事实力保障的安定团结；<br>第二，就是小政府，老百姓干什么能不管尽量不管；<br>第三，就是用心地呵护和培养一支商人集团；<br>第四，把贸易和全球尽可能地连通。</p>
<h2 id="第149期丨德国为什么崛起"><a href="#第149期丨德国为什么崛起" class="headerlink" title="第149期丨德国为什么崛起"></a>第149期丨德国为什么崛起</h2><p>战后德国的崛起包括四个方面的因素。第一，坚定的实行自由市场机制。48年开始实施，导致当油价飞涨，但是到59年初，物价就开始关注，到了50年，德国的社会就趋于稳定，而英法等国还是在实施战时配给制，饭都吃不饱。第二，德国当时有美国占领军所提供的强有力的武力保障，保证了社会的基本的平稳。第三，人的因素。德国的物质虽然几乎被完全摧毁，但是有大批的成熟的产业工人，管理层，产业制度，公司制度等等。第四，对内对外开放。对外开放指的是连接全球资源，对内的开放指的是社会阶层结构的流动。</p>
<p>所以什么是开放？开放就是这个国家处于一种非常持续的扩展状态之中，也就是说这个国家在繁荣上升的通道之中。</p>
<p>怎么判断这个国家的开放？就是我刚才讲的两点。第一点，它要能拼命地连接全世界的资源；第二点，就是上下阶层自由流通。那如果按照这两个标准来说，我们中国现在这个社会还基本让人满意。</p>
<h2 id="第150期丨创新是怎么发生的"><a href="#第150期丨创新是怎么发生的" class="headerlink" title="第150期丨创新是怎么发生的"></a>第150期丨创新是怎么发生的</h2><p>婚姻制度尤其是婚姻一夫一妻制的产生，不是人类道德进步的结果，而是狩猎的结果，狩猎让人们不得不合作，另外一个就是狩猎必须要使用武器。</p>
<p>人在不断地主动改变环境，但是被改变之后的环境也会反过来改变人，这就叫互相驯养，互驯。</p>
<h2 id="第151期丨创新是树也是网"><a href="#第151期丨创新是树也是网" class="headerlink" title="第151期丨创新是树也是网"></a>第151期丨创新是树也是网</h2><p>我们再归纳一下刚才讲的这五点，一个是给予，一个是借用，一个是杂交，一个是发明，还有一个是互动。这五个东西是什么？</p>
<p>你想，它就是在别人的创新创造上，我编织一个创新之网的五种针法，这都是统和其他人创新的五种办法。所以只要你掌握了这五种办法，那创新之树就是由你亲手推动成长，创新之网就是由你亲手编织，而创新的果实就由你来品尝。</p>
<h2 id="第152期丨走错路的日本人"><a href="#第152期丨走错路的日本人" class="headerlink" title="第152期丨走错路的日本人"></a>第152期丨走错路的日本人</h2><p>要知道，中国可是现在国际贸易当中，搞自由贸易的响当当的旗手，我们甚至比美国人、比英国人还要更加主张自由贸易，这是一个典型的海洋国家的主张。</p>
<p>所以一旦走向海洋，走向不是占有，而是共享；不是做零和博弈，而是做贸易式的多赢博弈，这个国家就真的有前途。</p>
<h2 id="第153期丨牛顿和现代世界的诞生"><a href="#第153期丨牛顿和现代世界的诞生" class="headerlink" title="第153期丨牛顿和现代世界的诞生"></a>第153期丨牛顿和现代世界的诞生</h2><p>当代科学摘的是低垂之果，要有质的突破需要新的科学范式</p>
<p>人类的精神世界是一个层垒的结构，不管我们现在认为什么是正确的，自由、民主、法制、私有财产、市场经济，所有这些东西从对和错的角度来看它，其实太浅了。</p>
<p>我们要深知，我们是站在人类的一个观念地层的顶端，每一个我们确认的观念，其实都有它逐渐发育的过程，换言之，它并不是天然正确的东西。</p>
<h2 id="第158期丨为什么看好中国经济"><a href="#第158期丨为什么看好中国经济" class="headerlink" title="第158期丨为什么看好中国经济"></a>第158期丨为什么看好中国经济</h2><p>我们在猜，我们在赌中国未来的经济发展趋势是什么样的，要有一个基本的思路。就是过去30多年来，支撑我们发展到今天的那些总趋势不逆转，中国经济就会好下去。</p>
<h2 id="第159期丨现代世界的起源"><a href="#第159期丨现代世界的起源" class="headerlink" title="第159期丨现代世界的起源"></a>第159期丨现代世界的起源</h2><p>现在国际上主张自由贸易的国家，不是高举自由贸易大旗的美国，而是中国。</p>
<p>美式自由贸易有很多政治条件上的限制，而中国主张没有条件的自由贸易。</p>
<h2 id="第160期丨鄙视链是怎样炼成的"><a href="#第160期丨鄙视链是怎样炼成的" class="headerlink" title="第160期丨鄙视链是怎样炼成的"></a>第160期丨鄙视链是怎样炼成的</h2><p>人有两种欲望，一种是跟别人一样，另一种是跟别人不一样。<br>跟别人一样，我在集体中，就可以获取安全感；跟别人不一样，我就能炫耀自己，获取竞争力。<br>这两个需求合在一起的时候，就形成了时尚。</p>
<h2 id="第161期丨南明死局-一"><a href="#第161期丨南明死局-一" class="headerlink" title="第161期丨南明死局(一)"></a>第161期丨南明死局(一)</h2><p>市场上有两种公司：<br>一种是管理得特别好的公司，但是应对转型的能力很差。<br>另一种公司，屁滚尿流，丢盔卸甲，内部极其混乱，但是一路奔向成功。</p>
<p>好管理是一家坏公司的结果。这里的好指的是一种过度精细化的规章制度。一家好公司的运作，实际上并不需要太过刻板的规则，它更应该是一种基于成年人之间的信任合作。这种管理思想，跟道家的无为而治有异曲同工之妙。</p>
<h2 id="第162期丨南明死局-二"><a href="#第162期丨南明死局-二" class="headerlink" title="第162期丨南明死局(二)"></a>第162期丨南明死局(二)</h2><p>了解一个人的趣味，看他的配偶。<br>了解一个人的品格，看他的朋友。<br>了解一个人的能力，看他的对手。</p>
<p>人其实是会被环境驯化的，你找到什么样的对手，进入什么样的格局，你的境界就有多高</p>
<h2 id="第162期丨南明死局-三"><a href="#第162期丨南明死局-三" class="headerlink" title="第162期丨南明死局(三)"></a>第162期丨南明死局(三)</h2><p>构建一个成人式的公司，互相之间信任，谁也别把谁当孩子，谁也别把谁当坏蛋，我们只是在一个价值平台上各自发挥自己的创造性和能动性。</p>
<p><a class="link"   href="https://m.igetget.com/share/course/article?id=0mPqglk6GzZwKrR55KMLBEO3ba2ARN" >https://m.igetget.com/share/course/article?id=0mPqglk6GzZwKrR55KMLBEO3ba2ARN<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>合集</tag>
      </tags>
  </entry>
  <entry>
    <title>三体</title>
    <url>/2018/02/13/%E4%B8%89%E4%BD%93/</url>
    <content><![CDATA[<h1 id="三体"><a href="#三体" class="headerlink" title="三体"></a>三体</h1><p>宇宙社会学 两条公理<br>公理一：生存是文明的第一需要<br>公理二：文明不断增长和扩张,但宇宙中的物质总量基本保持不变</p>
<p>两个附加条件<br>条件一，猜疑链<br>1，光速与空间双重约束下探测或交流的不可能<br>2，打击的成本远远低于探测或交流的成本<br>条件二，技术爆炸<br>一个结果，即黑暗森林状态，通俗说就是所有文明对所有文明的战争<br>一个推论，即黑暗森林打击遵循的原则，随意性和经济性</p>
<p>”射手假说：神枪手在一个靶子上每隔十厘米打一个洞，靶子上的一种二维智能生物，把这个神枪手一时兴起的随意行为，看成了自己宇宙中的铁律。<br>“农场主假说”：农场主每天中午十一点来给火鸡喂食，被火鸡视为伟大定律，感恩节早晨十一点食物没有降临，而是火鸡被杀。</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>东邪西毒</title>
    <url>/2018/03/13/%E4%B8%9C%E9%82%AA%E8%A5%BF%E6%AF%92/</url>
    <content><![CDATA[<h1 id="东邪西毒"><a href="#东邪西毒" class="headerlink" title="东邪西毒"></a>东邪西毒</h1><p>佛典有云<br>旗未动，风也未吹<br>是人的心自己在动</p>
<p>从小我就懂得保护自己，我知道要想不被人拒绝，最好的办法就是先拒绝别人。</p>
<p>虽然我很喜欢她，但始终没有告诉她。因为我知道得不到的东西永远是最好的。</p>
<p>我曾经听人说过，当你不可以再拥有的时候。你唯一可以做的，就是让自己不要忘记。你越想忘记一个人时，其实你越会记得他。人的烦恼就是记性太好，如果可以把所有事都忘掉，以后每一日都是个新开始，你说多好。</p>
<p>每个人都会经过这个阶段，见到一座山，就想知道山后面是什么。我很想告诉他，可能翻过山后面，你会发现没什么特别。回望之下，可能会觉得这一边更好。</p>
<p>其实“醉生梦死”只不过是她跟我开的一个玩笑，你越想知道自己是不是忘记的时候，你反而记得更清楚。我曾经听人说过，当你不能够再拥有，你唯一可以做的，就是令自己不要忘记。</p>
<p>多年之后，我有个绰号叫西毒，任何人都可以变得狠毒，只要你尝试过什么叫做嫉妒。</p>
<p>知不知道饮酒和饮水有什么区别？酒越饮越暖，水越喝越寒。</p>
<p>有些人是离开后才发现，离开了的人才是自己的最爱。<br>  我一直以为是我自己赢了，直到有一天看着镜子，才知道自己输了，在我最美好的时候，我最喜欢的人都不在我身边。</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>乔布斯</title>
    <url>/2018/03/21/%E4%B9%94%E5%B8%83%E6%96%AF/</url>
    <content><![CDATA[<h1 id="乔布斯"><a href="#乔布斯" class="headerlink" title="乔布斯"></a>乔布斯</h1><p>Think different<br>向那些疯狂的家伙们致敬<br>他们特立独行<br>他们桀骜不驯<br>他们惹是生非<br>他们格格不入<br>他们用与众不同的眼光看待事物<br>他们不喜欢墨守成规<br>他们也不愿安于现状<br>你可以赞美他们，引用他们，反对他们<br>质疑他们，颂扬或是诋毁他们<br>但唯独不能漠视他们<br>因为他们改变了事物<br>他们发明，他们想象，他们治愈<br>他们探索，他们创造，他们启迪<br>他们推动人类向前发展<br>也许，他们必需要疯狂<br>你能盯着白纸，就看到美妙的画作么？<br>你能静静坐着，就谱出动听的歌曲么？<br>你能凝视火星，就想到神奇的太空轮么？<br>我们为这些家伙制造良机<br>或许他们是別人眼里的疯子<br>但他们却是我们眼中的天才<br>因为只有那些疯狂到以为自己能够改变世界的人<br>才能真正地改变世界</p>
<p>你们的时间有限，所以不要把它浪费在过其他人的生活。最重要的是，你要有勇气跟随你的内心和直觉。某种程度上，它们已经知道你真正想要成为什么样子。其他所有事情都是次要的。</p>
<p>那些疯狂到以为自己能够改变世界的人、才能真正改变世界</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>转载</tag>
      </tags>
  </entry>
  <entry>
    <title>写给年轻程序员的 10 点启示</title>
    <url>/2018/03/25/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/</url>
    <content><![CDATA[<h1 id="写给年轻程序员的-10-点启示"><a href="#写给年轻程序员的-10-点启示" class="headerlink" title="写给年轻程序员的 10 点启示"></a>写给年轻程序员的 10 点启示</h1><p><a class="link"   href="https://mp.weixin.qq.com/s?__biz=MzI0MDIwNTQ1Mg==&mid=2676492126&idx=1&sn=96244a452b2b2e3625fd9ffa3123aa37&chksm=f362ccbdc41545ab87e40d720dabc7b0192bd48185461adcb0836d5ee2fea05e7c6fedeca5e9&scene=27#wechat_redirect" >转载<i class="fas fa-external-link-alt"></i></a></p>
<ol>
<li><p>正确认识自己<br>相比码农、程序猿、软件工程师、张江男、屌丝程序员等等这些网络词汇，当你把自己看作是一个屌丝程序员的话，那你也可能就是那个衣食不愁，但整天浑浑噩噩、无所追求的屌丝。我更愿意用技匠这个词来形容程序员，就像我给自己起的花名一样。程序员应该是那些不断追求更高技术，并有着自己产品梦的工匠。当你通过对自己技术不断打磨，一次又一次做出那些优秀产品的时候，你会发现自己不再是他人口中的码农或是屌丝，而更多被称为了大师、大神，而受到大家的尊重。</p>
</li>
<li><p>比一般人更加努力<br>优秀的程序员往往会被同天才或高智商的人联系在一起，但我想告诉你，你周围所看到的那些天才（身边的优秀程序员）只是在你没看到的时候花了更多时间工作或者学习而已，当你也坚持这么做时，你也会变得和他们一样优秀。</p>
</li>
<li><p>适时建立个人权威<br>建立个人权威，这能让其他人看到你的不同之处，并为你在公司或团队内部构建起良好的影响力。当然，这一切的前提是你通过不断努力积累了自己的实力，并在恰当的时候去展现它。</p>
</li>
<li><p>遵循最佳实践<br>技术更新太快，作为程序员，如何才能适应这种变化呢？其实，就像每年都会有新的流行设计趋势，然而设计的本质和原则却始终不变一样。这些最佳实践或由此衍生出来的框架、工具都是那些富有经验的程序员通过大量实践，总结出来的最优秀的软件开发思想。通过理解和对它们的有效实践，能够让你站到前人的肩膀之上，对软件开发本身获得更深入的理解和认识。</p>
</li>
<li><p>保持好奇心并乐于探索新的事物<br>优秀的程序员们也往往非常乐于探索那些看似与工作无关的技术。比如，做后端的程序员去学习前端的技能，前端工程师则去学习 UI 设计，等等，这些虽不会让他们成为那一个领域的专家，但技术往往是相通的，当你在探索这些新鲜事物的同时，你会发现你原有的技能也得到了提升。</p>
</li>
<li><p>抛开代码与人沟通<br>“紧盯着电脑屏幕，不断敲击键盘，目光有些呆滞。”这可能是程序员给人的印象。而我所看到的那些优秀的程序员却都不是这样的，他们往往兴趣广泛，并且都乐于与人沟通交流。程序员们很容易会忽视与人的沟通，这其实对他们的职业生涯发展是不利的。我很支持那些年轻的程序员们坚持去走技术路线，但这不应该成为你排斥与人沟通的理由。你需要与人沟通来获得他人的帮助；你需要与人沟通来建立良好的工作关系；当你的能力不断提升，被赋予更多职责时，你更需要与人沟通来管理好自己的团队，以及与老板或客户进行有效的沟通等。</p>
</li>
<li><p>要为优秀的人工作<br>环境对一个人的影响是巨大的，而最可怕的是当你身处其中时，很难意识到你正在变得越来越糟。我之前带过一些不错的程序员，他们中的一些人去了一些整体氛围或环境不是太好的公司。过了一段时间后，再次与他们碰面聊天时，我发现他们的思维、观点相较之前并没有提升，有些甚至反而退步了。</p>
</li>
<li><p>生活、睡眠、旅行<br>我希望每个程序员都能明白工作、技术、写代码这些并不是你存在的意义，而生活才是，你需要懂得生活，并且学会生活。</p>
<p>生活：尝试有节制和有规律的生活，程序员生涯绝不是一次冲刺，而更像一场马拉松。</p>
<p>睡眠：很多人觉得睡眠是弱者的表现，他们往往会长时间熬夜，其实我觉得这是这一种恶性循环，反而会使你的工作效率变的更低。</p>
<p>旅行：去任何一个新的地方都可以称之为旅行，让你发现和感受新的东西，而这些是从电脑屏幕上无法获得的。</p>
</li>
<li><p>相信自己的天赋和创造力<br>每个人的身上都有属于他自己的天赋和创造力，但它们也绝不是与生俱来的，你需要在生活中不断地培养和发掘它们。下面是我觉得一些行之有效的方法。</p>
<p>阅读优秀的书籍：好的想法绝不是凭空产生的，尝试从书中寻找那些能激发你创意和灵感的优秀内容。</p>
<p>记录和收集：尝试用一个小本子，将你转瞬即逝的好想法记录下来，它们可能并不直接有效，但下一个更好的想法可能就是从这些你记录下来的想法中产生的。</p>
<p>尝试动手：光有好的想法是不够的，你需要成为一个有工匠精神的人，通过亲自动手去尝试和实践，你会不断从中得到新的创造力。</p>
</li>
<li><p>如果上面提到的其他建议都对你无效，那么就请坚持第 2 点吧，因为它将成为你最大的竞争优势。</p>
</li>
</ol>
<p>那些程序员们后知后觉的职涯经验</p>
<ol>
<li><p>你的薪酬与工作量无关<br>换句话说你是否容易被取代。公司很容易找到一个和你差不多的应届毕业生，而那些对公司产品非常熟悉，并且起到关键作用的老员工，要想替代他们，公司所需要付出的代价及需要承担的风险就会高得多。所以，不妨摆正心态，正确认识到自己在公司中的位置，努力修炼内功，让自己变得越来越重要，相信你的薪资也会随之提升的。</p>
</li>
<li><p>尽可能持续做一件事<br>既然你对于公司的价值来自于你的不可替代性，那又该如何有效提升它呢？我的建议是尽可能持续做一件事。这既是指技术上的积累，也是指你能完整或较长时间参与同一个项目或开发一个产品。<br>技术深度及完整项目经验的重要性，如果你总是在跟随那些新出现的技术和框架，那你很难在某一项技术上达到理想的深度；同样，在一个公司里，如果你总是在更换项目，那你也很难提升自己的价值。参与 10 个项目，不如完整参与一个项目。持续做一件事是要你把每一件事做透、做好，而不是蜻蜓点水，浅尝辄止。</p>
</li>
<li><p>唯一不变的就是变化本身<br>作为程序员，我们又应该如何应对这些变化呢？我想说，你很难去改变所处的环境，或是阻挡那些变化的大趋势。你所能做的恰恰是培养自己持续学习的能力。</p>
</li>
<li><p>你的声誉非常重要<br>除了那些经常挂在嘴边的诚实守信、踏实肯干等之外，有一点特别重要，那便是严谨。因为它往往是判断一名程序员是否具备优秀潜质的重要因素。严谨的程序员对于分配给自己的任务会认真理解，对于自己的产出会仔细检查，这些都能大大减少工作中的出错概率，给团队或公司中的其他人留下良好的印象。</p>
</li>
<li><p>理解沟通的意义<br>当我们没有对问题有深入理解的时候，我们很难写出正确的程序来，因此我们需要向用户虚心求教，去真正理解他们所希望解决的问题。</p>
</li>
<li><p>你的右脑将是你成功的关键<br>谈到那些我们眼中非常成功的技术大牛、IT 高管，都会出人意料地将一些非技术能力作为自己获得成功的关键。比如，编写文档或做 PPT 的能力、演讲的能力、说服他人的能力，等等。我虽然并不完全赞同最优秀的程序员不写代码这种观点，但我确信你的右脑将会是决定你能否成功的关键。</p>
</li>
<li><p>不要轻易说简单和不可能<br>年轻程序员们不应该轻易做出那些过于绝对的判断，应尽可能去使用科学的方法进行分析和论证，然后用不易被人误解的方式进行有效的表达，这样你提出的观点才能让大家感到信服。</p>
</li>
<li><p>你不应该总是单打独斗<br>如果你真的希望做出一些具有影响力的东西，那么光靠个人是很难实现的。你需要和团队中不同角色的人进行合作，有时候你需要说服别人，有时候你则会被别人说服。</p>
</li>
<li><p>让你的能力显而易见<br>那些优秀的程序员无时无刻不在体现他们的能力，从轻松地解决技术难题，到会议上提出被一致认可的解决方案，以及他们写出的那些优雅且完善的代码，这些都让他们显得与众不同，仿佛是天生的优秀程序员。但我想说，他们其实都是那些努力并使用了正确方法的人。程序员的能力来自于大量的编码实践，以及持续学习的能力和勤于思考的习惯。任何自作聪明，不懂装懂，以及投机取巧在明眼人看来都只会是东施效颦，显得如此微不足道。</p>
</li>
</ol>
<p>每个程序员都应该了解的一件事<br>我曾经接触过一些 IT 高管及行业的技术大牛，当私下聊起他们是如何变得如此出类拔萃时，他们大多会以自嘲但又略带得意的语气来讲述他们的那些独门秘籍。</p>
<p>我的文档写得特别好。</p>
<p>我的口才很好，总是能成功说服别人。</p>
<p>我的 PPT 做得非常棒，是公司里数一数二的。</p>
<p>我写过几篇很受欢迎的技术文章。</p>
<p>我热爱开源文化，并在社区里很有名气。</p>
<p>……</p>
<p>我发现，这些普通人眼中的大神们很少会提及自己的技术有多牛，反而更多地把功劳归于那些看似与技术毫无关系的能力。大家千万别误以为他们只是一群华而不实，靠着一些小伎俩往上爬的小人。完全不是，而且我敢向你保证，他们中的每一个人在担任程序员或负责其他技术工作时，同样都有着非常出色的技术能力和优秀的工作表现。但为什么在他们眼中这些还不足以使他们达到现在的高度，反而是那些不起眼的写文档、做 PPT、演讲等这些技能使他们能够在一次次竞争中胜出，并成为了我们中的佼佼者呢？</p>
<p>其实在我看来，他们所谓的这些秘籍，都可以归纳为一种能力，那就是自我营销。</p>
<p>一名程序员如果能够尽早意识到自我营销的重要性，并有意识地锻炼和运用这种能力，那将对你的事业产生有益的帮助。</p>
<p>那么对于程序员们来说，又有哪些能够提升自我营销能力的方法呢？下面便是我的一些建议。</p>
<ol>
<li><p>读与技术无关的书<br>我建议只买一些经典的技术书籍来帮你打基础，然后从网上去学习一切新的东西。我尤其鼓励大家去读那些与技术无关的书籍。程序员不善于自我营销，其中一个重要原因是他们自身所掌握的知识体系太过于单一，很难跳出技术范畴与人交流，并引起别人的兴趣和认同。你可以读任何历史、经济、人文、艺术类的书籍，它们都能够帮助你丰富自己的知识和思想，使你变得更加全面和完善，而这反过来，又能帮助你建立信心。</p>
</li>
<li><p>会写文档<br>文档可能是你完成代码编写后一个最佳的展示机会。当代码实现了它的功能之后，就很少有人会再去看它，除非它出错了。但文档被阅读的概率却大得多。从一个文档中，我们可以看到关于作者的很多东西，思路是否缜密，逻辑性是否强，设计方案是否优秀，等等。可以说，文档质量的高低是衡量一名程序员是否优秀的重要标准之一。</p>
</li>
<li><p>学会包装<br>说到包装，人们往往会产生一种不好的感觉，把它与虚伪、假的东西联系在一起。其实，我所说的包装应该包含两层意思：</p>
<p>知道什么是美的（优秀的）。</p>
<p>精心制作。</p>
<p>作者举例一个普华永道的高级经理通过一个长达 114 页的非常精美的 PPT 而赢得了保监会关于偿付能力改革的会议。<br>在日常工作中，我经常发现身边的程序员很难写出美观整洁的文档或 PPT 来。这一方面与我们从小缺乏美学教育有关，而更重要的往往是他们并没有真正用心去制作它。其实，我们可以通过寻找一些优秀的文档示例来学习如何制作优秀的文档，这其实并不困难。知道什么是优秀的，然后像写你的代码一样用心去制作就行了。</p>
</li>
<li><p>尝试多讲<br>讲话一直是很多程序员的硬伤，当然这也曾是我的硬伤。根据我的经验，你需要跨过以下两个障碍：</p>
<p>敢说。</p>
<p>让说的和你想的一致。</p>
</li>
<li><p>建立社会化联系<br>一个完全封闭的程序员一定不是一个优秀的程序员。优秀的程序员往往愿意并善于与他人交流，分享自己的经验和想法，并在交流中获得有益的东西。这样做有很多好处：</p>
</li>
</ol>
<p>通过这些社会化的活动能够使你的想法和技能更加完善。</p>
<p>能够使你建立权威，你的技术博客，在一些社区上的技术问题解答，以及你的开源项目等都会使人认为你是这方面的专家。</p>
<p>同样，你也可以获得他人的帮助，来解决棘手的难题。</p>
<p>你可以找到与你有相同兴趣的人，一起做有趣的事情。</p>
<p>你的社交网络将因此扩大，这意味着你所获得的机会将会更多。</p>
<p>程序员的烦恼</p>
<ol>
<li><p>是否还应该留在一线城市<br>一切都能为你的生活赋予意义，并让你感到更加快乐的话，那你还是应该更坚定地留下，而非选择离开。</p>
</li>
<li><p>小公司做的事情太繁杂了<br>时常会说“杂事不杂”，虽然看着被很多与技术无关的事务缠身，但它们对你来说同样具有意义。你从中可能获得沟通能力、管理能力、建立更广的人脉，在企业内部建立影响力，等等</p>
</li>
<li><p>创业公司中的危机感<br>无论成功与否，经历一次完整的创业都将让你受益匪浅。你将学到很多在大公司仅仅做一颗螺丝钉所学不到的东西。虽然在此过程中，你一定会有挫败感、焦虑，但或许坚持一下就会看到曙光。</p>
<p>另外一点我想说的是，创业的过程将让你获得不同的眼光。创业大多是在一个新的领域中进行的，你不应仅仅专注于公司所使用的那些技术，而更需要通过深入理解这个新的领域，去获得不同的视角和眼光，因为它们也会在未来成为你的核心竞争力。</p>
</li>
<li><p>技术单一，想学习更多<br>我总是很鼓励身边的程序员们去涉猎不同的技术甚至领域，但前提是你必须首先对某一门技术做到精通。技术是需要深耕的，深入学习一门主流的开发技术，并不断提升编程思维，比对很多技术栈都浅尝辄止要好很多。因此，如果精力有限不妨先学好一门技术，你会发现之后再去学习其他技术会变得容易许多，因为它们之间往往都是相通的。</p>
</li>
<li><p>我想自学编程，应该学哪一门语言？<br>如果你真的没有任何思路，只是希望你学的这门编程语言能够有用，我的建议是 JavaScript，因为它看起来是唯一可能在未来所有领域内得到应用的编程语言，从我们的移动设备，到传统的 Web 应用，再到服务器端开发甚至是硬件编程，它几乎无处不在。</p>
</li>
<li><p>大专学历，能进大公司吗？<br>全日制本科几乎成了所有内部职位的最低要求，所以学历上的缺失确实会成为你进入大公司的障碍。当然还是有例外的情况：</p>
</li>
</ol>
<p>通过内部员工的推荐。</p>
<p>通过外包公司进入后，再转为内部员工。</p>
<p>努力成为某一领域的专家，或者建立个人影响力。</p>
<p>如果你还是一名大专在读学生，那么我希望你不要过早焦虑，尝试问问自己除了学历之外还有什么让你能够脱颖而出的东西？是否有自己的个人项目？是否为知名的开源项目贡献过代码，甚至只是参与编写文档？是否通过写博客阐述过自己的独到观点，并得到大家的认可？在哪家公司实习过？这些都可能抓住雇主的眼球，从而弥补你在学历上的不足。</p>
<p>给年轻程序员的职涯建议</p>
<ol>
<li><p>尽早确定你想做的事情。尽早确定自己想做的事情——你的职业目标，意味着你可以获得比其他人更多的时间去努力。</p>
</li>
<li><p>一万小时定律</p>
</li>
<li><p>提高工作效率。有以下两点建议：</p>
<p>加快工作节奏</p>
<p>借助工具完成工作</p>
</li>
<li><p>简明的沟通方式</p>
</li>
<li><p>持续学习</p>
</li>
<li><p>学会控制情绪</p>
</li>
<li><p>让最优秀的人围绕在你身边</p>
</li>
<li><p>善于归纳与表达</p>
</li>
<li><p>掌握英语</p>
</li>
<li><p>睡眠是你更强大</p>
</li>
</ol>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>转载</tag>
      </tags>
  </entry>
  <entry>
    <title>现代诗</title>
    <url>/2018/04/20/%E7%8E%B0%E4%BB%A3%E8%AF%97/</url>
    <content><![CDATA[<h1 id="现代诗"><a href="#现代诗" class="headerlink" title="现代诗"></a>现代诗</h1><h2 id="沙扬娜拉"><a href="#沙扬娜拉" class="headerlink" title="沙扬娜拉"></a>沙扬娜拉</h2><p>最是那一低头的温柔,<br>象一朵水莲花不胜凉风的娇羞,<br>道一声珍重,道一声珍重,<br>那一声珍重里有蜜甜的忧愁——<br>沙扬娜拉!</p>
<h2 id="面具"><a href="#面具" class="headerlink" title="面具"></a>面具</h2><p>儿童的世界里<br>没有你便没有乐趣<br>成人的世界里<br>有了你就有了悲剧<br>没有你世界不会完美<br>有了你世界不再完美</p>
<h2 id="永远"><a href="#永远" class="headerlink" title="永远"></a>永远</h2><p>指间的戒指不再闪亮，<br>婚纱在衣柜早就尘封，<br>我们的容颜都已慢慢的苍老，<br>但那份心情，<br>依旧没有改变，<br>感谢你带给我的每一天，<br>正是因为你，<br>我才有勇气说，<br>永远，永远。</p>
<h2 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h2><p>当然人类的精神成长过程被重组<br>与奇观相伴而来的<br>是所有拥有母校的人们<br>是否都可能产生<br>让我们精神紧张的感念<br>那个因为远离世俗功利<br>因此总是储存着<br>我们美好回忆的地方<br>那个因为生长成长中的朦胧<br>因此似乎总是柔情似水<br>又不容分说地<br>规定我们生命节律的地方<br>那些曾经属于每一个人<br>幼儿园里的青梅竹马<br>属于每一个人<br>小学中学里的两小无猜<br>属于每一个人<br>大学校园里林荫树下的恋情<br>又将会在哪里</p>
<h2 id="醒来觉得甚是爱你——朱生豪"><a href="#醒来觉得甚是爱你——朱生豪" class="headerlink" title="醒来觉得甚是爱你——朱生豪"></a>醒来觉得甚是爱你——朱生豪</h2><p>你也许不会相信，我常常想象你是多么美好，多么可爱，但实际见了你面的时候，你比我想象的要美好的多，可爱的多。<br>你不能说我这是说谎，因为如果不然的话，我满可以仅仅想忆你自足，而不必那样渴望着想要看见你。<br>不要愁老之将至，你老了也一定很可爱，而且，假如你老了十岁，我当然也同样老了十岁，世界也老了十岁，上帝也老了十岁，一切都是一样的。<br>我只愿意凭着这一点灵感的相通，时时带给彼此以慰藉，像流行的光辉，照耀我疲惫的梦寐，永远存一个安慰，纵然在别离的时候。<br>醒来觉得甚是爱你。</p>
<h2 id="New-York-is-3-hours-ahead-of-California"><a href="#New-York-is-3-hours-ahead-of-California" class="headerlink" title="New York is 3 hours ahead of California"></a>New York is 3 hours ahead of California</h2><p>New York is 3 hours ahead of California,<br>but it does not make California slow.</p>
<p>Someone graduated at the age of 22,<br>but waited 5 years before securing a good job!</p>
<p>Someone became a CEO at 25,<br>and died at 50.</p>
<p>While another became a CEO at 50,<br>and lived to 90 years.</p>
<p>Someone is still single,<br>while someone else got married.</p>
<p>Obama retires at 55,<br>but Trump starts at 70.</p>
<p>Absolutely everyone in this world works based on their Time Zone.</p>
<p>People around you might seem to go ahead of you,<br>some might seem to be behind you.<br>But everyone is running their own RACE, in their own TIME.<br>Don’t envy them or mock them.<br>They are in their TIME ZONE, and you are in yours!</p>
<p>Life is about waiting for the right moment to act.<br>So, RELAX.<br>You’re not LATE.<br>You’re not EARLY.</p>
<p>You are very much ON TIME, and in your TIME ZONE Destiny set up for you.</p>
<h2 id="稻城亚丁"><a href="#稻城亚丁" class="headerlink" title="稻城亚丁"></a>稻城亚丁</h2><p>我希望有个如你一般的人<br>如山间清爽的风<br>如古城温暖的光<br>从清晨到夜晚<br>由山野到书房<br>等待<br>不怕岁月蹉跎<br>不怕路途遥远<br>只要最后<br>是你就好<br>听闻远方有你<br>动身跋涉千里<br>我吹过你吹过的风<br>这算不算相拥<br>我走过你走过的路<br>这算不算相逢<br>我还是喜欢你<br>从一而终</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>合集</tag>
      </tags>
  </entry>
  <entry>
    <title>敬天爱人</title>
    <url>/2018/06/20/%E6%95%AC%E5%A4%A9%E7%88%B1%E4%BA%BA/</url>
    <content><![CDATA[<h1 id="敬天爱人"><a href="#敬天爱人" class="headerlink" title="敬天爱人"></a>敬天爱人</h1><p>无私<br>舍私利，断私欲，行正道<br>任用人才关键在于相信人的成长<br>功者有禄，德者任官<br>位万名之上者，慎己，正品行，戒骄奢，勉节俭，勤植物，为人民之楷模。<br>把自相矛盾的极端性格融为一体，游刃有余，毫无矛盾，具备这种能力呢人也就是具备了最高的智慧。<br>越成功，越伟大，就越应谦恭行事。并且，应率先做出自我牺牲，以做表率。若无承担最大损失的勇气，如何能成为领导者？无自我牺牲之人若居高位，是位于其下者之不幸。<br>在追求全体员工物质精神两方面幸福的同时，为人类、为社会的进步发展做出贡献。舍欲，至诚，利他<br>克己，临于万事欲克而不得。故先修身养性而后成也。<br>不与人对，与天对。与天相对，尽己责而勿咎人，寻己诚之不足<br>精进：</p>
<ol>
<li>付出不亚于任何人的努力</li>
<li>要谦虚，不要骄傲</li>
<li>日日反省</li>
<li>活着、就要感谢</li>
<li>积善行，思利他</li>
<li>不要有感性的烦恼，不要总是担忧</li>
</ol>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>游戏改变世界</title>
    <url>/2018/06/23/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E7%9A%84%E5%BE%B7%E8%A1%8C/</url>
    <content><![CDATA[<h1 id="中国人的德行"><a href="#中国人的德行" class="headerlink" title="中国人的德行"></a>中国人的德行</h1><p>死要面子<br>节俭<br>辛勤努力<br>处处守礼<br>浪费时间<br>漠视标准<br>说不明白<br>委婉的表达方式<br>柔中带刚<br>思维混乱<br>神经麻木<br>轻蔑外族<br>缺乏公德心<br>因循守旧<br>随遇而安<br>生命力旺盛<br>忍耐<br>知足<br>孝心<br>仁德<br>缺乏同情心<br>争强好胜<br>有责任及遵纪守法<br>互相猜疑<br>缺乏诚信<br>多神论及无神论<br>现实与需求<br>同一性和多样性<br>裙带关系<br>喜欢吃<br>爱名利<br>容易相信<br>性格温和<br>不敢得罪人<br>寄生性<br>不注重基础<br>不懂得保存遗迹<br>注重中介<br>缺少利他思想</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux</title>
    <url>/2018/08/01/Linux/</url>
    <content><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><p>[TOC]</p>
<h2 id="Base"><a href="#Base" class="headerlink" title="Base"></a>Base</h2><h3 id="bash"><a href="#bash" class="headerlink" title="bash"></a>bash</h3><p>查看当前shell <code>echo $SHELL</code></p>
<p>列出所有shell <code>cat /etc/shells</code></p>
<p>切换shell <code>bash</code> 直接输入shell名</p>
<p>安装 <a class="link"   href="https://github.com/Bash-it/bash-it" >bash-it<i class="fas fa-external-link-alt"></i></a></p>
<p>修改bash ~/.inputrc</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> show-all-if-ambiguous on  <span class="comment"># 一次tab键显示补全列表</span></span><br><span class="line"><span class="built_in">set</span> visible-stats on    <span class="comment"># 结尾增加文件类型 @ 链接 / 目录</span></span><br><span class="line"><span class="built_in">set</span> colored-completion-prefix on <span class="comment"># 增加颜色显示prefix</span></span><br><span class="line"><span class="built_in">set</span> completion-ignore-case on  <span class="comment"># 忽略大小写</span></span><br></pre></td></tr></table></figure>

<p>删除上一条命令多余输入 ^1  替换 ^1^2,替换或删除 找到的第一个</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat file1, ^1,   cat file</span><br><span class="line">cat fiel1, ^1^2, cat file2</span><br></pre></td></tr></table></figure>

<p>全局替换</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ansible nginx -a <span class="string">&#x27;which nginx&#x27;</span></span><br><span class="line">!:gs/nginx/haproxy <span class="comment"># 全局（g）替换（s）</span></span><br><span class="line">ansible haproxy -a <span class="string">&#x27;which haproxy&#x27;</span></span><br></pre></td></tr></table></figure>


<h3 id="家目录"><a href="#家目录" class="headerlink" title="家目录 ~"></a>家目录 ~</h3><p>root用户 <code>/root</code><br>普通用户 <code>/home</code></p>
<h3 id="How"><a href="#How" class="headerlink" title="How"></a>How</h3><table>
<thead>
<tr>
<th>$</th>
<th>……</th>
</tr>
</thead>
<tbody><tr>
<td>whatis command</td>
<td>简要说明</td>
</tr>
<tr>
<td>man command</td>
<td>说明文档</td>
</tr>
<tr>
<td>which command</td>
<td>binary 文件路径</td>
</tr>
<tr>
<td>whereis command</td>
<td>搜索路径</td>
</tr>
</tbody></table>
<h3 id="DIRECTORIES"><a href="#DIRECTORIES" class="headerlink" title="DIRECTORIES"></a>DIRECTORIES</h3><table>
<thead>
<tr>
<th align="left">$</th>
<th>……</th>
</tr>
</thead>
<tbody><tr>
<td align="left">pwd</td>
<td>Display path of current working <em>directory</em></td>
</tr>
<tr>
<td align="left">cd <em>directory</em></td>
<td>Change directory to <em>directory</em></td>
</tr>
<tr>
<td align="left">ls -lh</td>
<td>List directory contents</td>
</tr>
<tr>
<td align="left">mkdir <em>directory</em></td>
<td>Create new directory named <em>directory</em></td>
</tr>
<tr>
<td align="left">ls -lh</td>
<td>List directory contents</td>
</tr>
<tr>
<td align="left">tree -h</td>
<td>List the contents of the directory in a tree view</td>
</tr>
</tbody></table>
<h3 id="OUTPUT"><a href="#OUTPUT" class="headerlink" title="OUTPUT"></a>OUTPUT</h3><table>
<thead>
<tr>
<th align="left">$</th>
<th>……</th>
</tr>
</thead>
<tbody><tr>
<td align="left">cat <em>file</em>&gt;</td>
<td>Output the contents of <em>file</em></td>
</tr>
<tr>
<td align="left">less <em>file</em></td>
<td>Output the contents of <em>file</em> using the less command</td>
</tr>
<tr>
<td align="left">head <em>file</em></td>
<td>Output the first 10 lines of <em>file</em></td>
</tr>
<tr>
<td align="left"><em>cmd</em> &gt; <em>file</em></td>
<td>Direct the output of <em>cmd</em> into <em>file</em></td>
</tr>
<tr>
<td align="left"><em>cmd</em> &gt;&gt; <em>file</em></td>
<td>Append the output of <em>cmd</em> to <em>file</em></td>
</tr>
<tr>
<td align="left">clear</td>
<td>Clear the command line window</td>
</tr>
</tbody></table>
<h3 id="FILES"><a href="#FILES" class="headerlink" title="FILES"></a>FILES</h3><table>
<thead>
<tr>
<th align="left">$</th>
<th>……</th>
</tr>
</thead>
<tbody><tr>
<td align="left">rm <em>file</em></td>
<td>Delete <em>file</em></td>
</tr>
<tr>
<td align="left">rm -r <em>directory</em></td>
<td>Delete <em>directory</em></td>
</tr>
<tr>
<td align="left">rm -f <em>file</em></td>
<td>Force-delete <em>file</em> (add -r to force-delete a directory)</td>
</tr>
<tr>
<td align="left">mv <em>file-old</em> <em>file-new</em></td>
<td>Rename <em>file-old</em> to <em>file-new</em></td>
</tr>
<tr>
<td align="left">mv <em>file</em> <em>directory</em></td>
<td>Move <em>file</em> to<em>directory</em> (overwriting an existing file)</td>
</tr>
<tr>
<td align="left">cp <em>file</em> <em>directory</em></td>
<td>Copy <em>file</em> to<em>directory</em> (overwriting an existing file)</td>
</tr>
<tr>
<td align="left">touch <em>file</em></td>
<td>Update file access &amp; modification time (and create <em>file</em> if it doesn’t exist)</td>
</tr>
</tbody></table>
<h3 id="PERMISSIONS"><a href="#PERMISSIONS" class="headerlink" title="PERMISSIONS"></a>PERMISSIONS</h3><table>
<thead>
<tr>
<th align="left">$</th>
<th>……</th>
</tr>
</thead>
<tbody><tr>
<td align="left">chmod 755 <em>file</em></td>
<td>Change permissions of <em>file</em> to 755</td>
</tr>
<tr>
<td align="left">chmod -R 600 <em>directory</em></td>
<td>Change permissions of <em>directory</em> (and its contents) to 600</td>
</tr>
<tr>
<td align="left">chown <em>user</em>:<em>group</em> <em>file</em></td>
<td>Change ownership of <em>file</em> to <em>user</em> and <em>group</em> (add -R to include a directory’s contents)</td>
</tr>
</tbody></table>
<h3 id="SEARCH"><a href="#SEARCH" class="headerlink" title="SEARCH"></a>SEARCH</h3><table>
<thead>
<tr>
<th align="left">$</th>
<th>……</th>
</tr>
</thead>
<tbody><tr>
<td align="left">find <em>dir</em> -name “ <em>file</em>“</td>
<td>Find all files named <em>file</em> inside <em>dir</em></td>
</tr>
<tr>
<td align="left">grep “ <em>text</em>“ <em>file</em></td>
<td>Output all occurrences of <em>text</em> inside <em>file</em> (add -i for case-insensitivity)</td>
</tr>
<tr>
<td align="left">grep -rl “<em>text</em>“ <em>dir</em></td>
<td>Search for all files containing <em>text</em> inside <em>dir</em></td>
</tr>
</tbody></table>
<h3 id="CTRL"><a href="#CTRL" class="headerlink" title="CTRL"></a>CTRL</h3><table>
<thead>
<tr>
<th align="left">$</th>
<th>……</th>
</tr>
</thead>
<tbody><tr>
<td align="left">CTRL+A</td>
<td>move the caret to the beginning</td>
</tr>
<tr>
<td align="left">CTRL+E</td>
<td>move the caret to the end of the line</td>
</tr>
<tr>
<td align="left">CTRL+K</td>
<td>delete all characters after the caret</td>
</tr>
<tr>
<td align="left">CTRL+U</td>
<td>delete all characters in front of the caret</td>
</tr>
<tr>
<td align="left">CTRL+L</td>
<td>clear  command</td>
</tr>
<tr>
<td align="left">CTRL+C</td>
<td>abort a running command</td>
</tr>
</tbody></table>
<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><h3 id="alias"><a href="#alias" class="headerlink" title="alias"></a>alias</h3><p>永久命名别名，查看 <code>~/.bashrc</code> 文件，发现这样一段代码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if [ -f ~/.bash_aliases ]; then</span><br><span class="line">  . ~/.bash_aliases</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<p>新建文件 <code>.bash_alases</code> , 写入 <code>alias ll=&#39;ll -lh&#39;</code> , 保存后执行 <code>source ~/.bashrc</code></p>
<h3 id="替换-man-为中文"><a href="#替换-man-为中文" class="headerlink" title="替换 man 为中文"></a>替换 man 为中文</h3><p>apt-get install manpages-zh<br>vi /etc/manpath.config<br>:1,$s#/usr/share/man#/usr/share/man/zh_CN#g</p>
<p>1.在用 vi 命令编辑文件，使用命令前先按：键，然后输入命令 1,$s#/usr/share/man#/usr/share/man/zh_CN#g，回车即可 2.替换第 1 行开始到最后一行中所有的 /usr/share/man 为 /usr/share/man/zh_CN</p>
<h3 id="开启远程ssh登录"><a href="#开启远程ssh登录" class="headerlink" title="开启远程ssh登录"></a>开启远程ssh登录</h3><ol>
<li>安装openssh-server: sudo apt-get install openssh-server</li>
<li>开机自动启动ssh命令: sudo systemctl enable ssh</li>
<li>关闭ssh开机自动启动命令: sudo systemctl disable ssh</li>
<li>单次开启ssh: sudo systemctl start ssh</li>
<li>单次关闭ssh: sudo systemctl stop ssh</li>
<li>设置好后重启系统 reboot</li>
<li>查看ssh是否启动，看到Active: active (running)即表示成功 sudo systemctl status ssh</li>
</ol>
<p>ssh生成密钥：ssh-keygen</p>
<p>复制本地公钥到服务器：ssh-copy-id user@remoteip</p>
<p>复制器配置别名 code ~/.ssh/config 可通过ssh deepin 登录服务器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Host deeping</span><br><span class="line">HostName 192.168.0.118</span><br><span class="line">User wukong</span><br><span class="line">IdentitiesOnly yes</span><br></pre></td></tr></table></figure>

<h3 id="byobu"><a href="#byobu" class="headerlink" title="byobu"></a>byobu</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">F2 - Create a new win</span><br><span class="line">F3 - Move to previous win</span><br><span class="line">F4 - Move to next win</span><br><span class="line">F5 - Reload prof</span><br><span class="line">F6 - Detach from this sess</span><br><span class="line">F7 - Enter copy/scrollback m</span><br><span class="line">F8 - Re-title a win</span><br><span class="line">F9 - Configuration M</span><br><span class="line">F12 -  Lock this termi</span><br><span class="line">shift-F2 - Split the screen horizonta</span><br><span class="line">ctrl-F2 - Split the screen vertica</span><br><span class="line">shift-F3 - Shift the focus to the previous split reg</span><br><span class="line">shift-F4 - Shift the focus to the next split reg</span><br><span class="line">shift-F5 - Join all spl</span><br><span class="line">ctrl-F6 - Remove this sp</span><br><span class="line">ctrl-F5 - Reconnect GPG and SSH sock</span><br><span class="line">shift-F6 - Detach, but do not log</span><br><span class="line">alt-pgup - Enter scrollback m</span><br><span class="line">alt-pgdn - Enter scrollback m</span><br><span class="line">Ctrl-a $ - show detailed sta</span><br><span class="line">Ctrl-a R - Reload prof</span><br><span class="line">Ctrl-a ! - Toggle key bindings on and </span><br><span class="line">Ctrl-a k - Kill the current win</span><br><span class="line">Ctrl-a ~ - Save the current window&#x27;s scrollback buffer</span><br></pre></td></tr></table></figure>

<h3 id="micro"><a href="#micro" class="headerlink" title="micro"></a>micro</h3><p>下载 <code>curl https://getmic.ro | bash</code></p>
<p>设置全局使用 <code>mv ~/micro /usr/bin/micro</code></p>
<h3 id="tldr"><a href="#tldr" class="headerlink" title="tldr"></a>tldr</h3><p>下载tldr替代 ls  man</p>
<p><a class="link"   href="https://mp.weixin.qq.com/s/qPhUxmIF2ar2pQbJe6Buyg" >https://mp.weixin.qq.com/s/qPhUxmIF2ar2pQbJe6Buyg<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="bat-替代-cat"><a href="#bat-替代-cat" class="headerlink" title="bat 替代 cat"></a>bat 替代 cat</h3><p><a class="link"   href="https://github.com/sharkdp/bat/blob/master/doc/README-zh.md#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8" >bat<i class="fas fa-external-link-alt"></i></a></p>
<p><a class="link"   href="https://www.51cto.com/article/707013.html" >比Cat更好用的命令！<i class="fas fa-external-link-alt"></i></a></p>
<p>使用 batcat,建议 修改 alias cat=’batcat’</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>learn</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Spider</title>
    <url>/2018/08/12/Spider/</url>
    <content><![CDATA[<h1 id="spider"><a href="#spider" class="headerlink" title="spider"></a>spider</h1><h2 id="HTTP原理"><a href="#HTTP原理" class="headerlink" title="HTTP原理"></a>HTTP原理</h2><h3 id="HTTP请求方式"><a href="#HTTP请求方式" class="headerlink" title="HTTP请求方式"></a>HTTP请求方式</h3><p>常用的请求方式是GET和POST：</p>
<p>GET请求：是以实体的方式得到由请求URL所指定资源的信息，一般来说我们输入一个网址时，默认的请求就是GET请求。</p>
<p>POST请求：用来向目的服务器发出请求，要求它接受被附在请求后的实体，并把它当作请求队列中请求URL所指定资源的附加新子项。比如网页上的注册、登录等等都是POST请求。</p>
<p>GET与POST方法有以下区别：</p>
<p>在客户端，GET方式通过URL提交数据，数据在URL中可以看到；POST方式的数据放置在实体区内提交，不能直接看到。</p>
<p>GET方式提交的数据最多只能有1024个字节，而POST则没有此限制。</p>
<p>安全性问题，使用GET的时候，参数会显示在地址栏上，而POST不会，所以，如果这些数据是非敏感数据，那么使用GET；如果用户输入的数据包含敏感数据，那么还是使用POST提交比较靠谱。（其实POST也是不安全的）</p>
<h3 id="HTTP状态码含义"><a href="#HTTP状态码含义" class="headerlink" title="HTTP状态码含义"></a>HTTP状态码含义</h3><p>200 ——请求成功</p>
<p>202 [已接受] 已接受请求，但尚未处理</p>
<p>204 成功处理了请求，但没有返回内容</p>
<p>206 服务器成功处理了部分 GET 请求<br>301 —— 资源（网页等）被永久转移到其他URL（永久重定向）</p>
<p>302 ——资源（网页等）被临时转移到其他的URL（临时重定向）</p>
<p>304 —— 资源（网页）没有更新</p>
<p>305 请求者只能使用代理访问请求的网页</p>
<p>400 错误请求，服务器不理解请求的语法</p>
<p>401 未授权，请求要求身份验证</p>
<p>403 —— 表示资源不可用。服务器理解客户的请求，但拒绝处理它，通常由于服务器上文件或目录的权限设置导致的WEB访问错误。</p>
<p>404 ——请求的资源（网页等）不存在</p>
<p>500  ——  服务器内部错误，主要是由于IWAM账号的密码错误造成的</p>
<p>502 作为网关或代理从上游收到无效响应</p>
<p>503  ——  由于临时的服务器维护或者过载，服务器当前无法处理请求</p>
<h3 id="HTTP头部信息"><a href="#HTTP头部信息" class="headerlink" title="HTTP头部信息"></a>HTTP头部信息</h3><h4 id="Request-Header"><a href="#Request-Header" class="headerlink" title="Request Header"></a>Request Header</h4><p>Accept请求报头域，用于指定客户端接收哪些类型的信息。</p>
<p>Accept-Encoding请求报头域，用于指定客户端可接受的内容编码。</p>
<p>Accept-Language请求报头域，类似Accept，但是它用于指定一种自然语言。</p>
<p>Connection报头域允许发送用于指定连接的选项。</p>
<p>Cookie辨别用户身份、进行 session 跟踪而储存在用户本地终端上的数据（通常经过加密）</p>
<p>Host头域，用于指定请求资源的intenet主机和端口号，必须表示请求URL的原始服务器或网关的位置。</p>
<p>User-Agent头域，里面包含发出请求的用户信息，其中有使用浏览器的型号，版本和操作系统的信息。这个头域经常用来作为反爬虫的措施。</p>
<h4 id="Response-Header"><a href="#Response-Header" class="headerlink" title="Response Header"></a>Response Header</h4><p>Cache-Contorl用于指定缓存指定，缓存指令是单向的，且是独立的。</p>
<p>Content-Type 实体报头域用于指明发送给接收者的实体正文的媒体类型。</p>
<p>Date表示消息产生的日期和时间</p>
<p>Expires-CT实体报头域给出响应过期日期和时间。（用来查看缓存过期时间）</p>
<p>Last-Modified实体报头域用于指示资源的最后修改日期和时间。</p>
<p>Transfer-Encoding：chunked表示输出的内容长度不能确定</p>
<h2 id="urllib"><a href="#urllib" class="headerlink" title="urllib"></a>urllib</h2><p>参考链接：<code>https://cloud.tencent.com/developer/news/207605</code><br><code>https://docs.python.org/3/library/urllib.request.html</code></p>
<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Python3中urllib是一个URL处理包，这个包中集合了一些处理URL的模块，包括了request模块、error模块、parse模块和robotparser模块。</p>
<ul>
<li>urllib.request模块是用来打开和读取URL的；</li>
<li>urllib.error模块包含一些有urllib.request产生 的错误，可以使用try进行捕捉处理；</li>
<li>urllib.parse模块包含了一些解析URLs的方法；</li>
<li>urllib.robotparser模块用来解析robots.txt文本文件.它提供了一个单独的RobotFileParser类，通过该类提供的can_fetch()方法测试爬虫是否可以下载一个页面。</li>
</ul>
<h3 id="request"><a href="#request" class="headerlink" title="request"></a>request</h3><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><p>urllib.request.urlopen(url) 可以直接打开url地址，但是如果需要执行更复杂的操作，比如增加HTTP报头，则必须创建一个Request实例来作为urlopen()的参数，而需要访问的url地址则作为Request实例的参数。</p>
<p>urllib.request.Request(url, data=None, headers={}, origin_req_host=None, unverifiable=False, method=None)</p>
<p>Request实例参数</p>
<ul>
<li>data（默认为空）：是伴随url提交的数据（比如post的数据），同时HTTP请求将从“GET”方式改为“POST”方式。</li>
<li>headers（默认为空）：是一个字典，包含了需要发送的HTTP报头的键值对。<ul>
<li>User-Agent伪装成公认的浏览器</li>
<li>调用Request.add_header() 添加/修改一个特定的header</li>
<li>调用Request.get_header()来查看已有的header。</li>
</ul>
</li>
</ul>
<p>基本教程示例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line"><span class="comment"># chrome 的 User-Agent，包含在 header里</span></span><br><span class="line">header = &#123;<span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构造Request请求 返回&lt;urllib.request.Request object at 0x02C4C450&gt;</span></span><br><span class="line">request = urllib.request.Request(<span class="string">&quot;http://www.baidu.com/&quot;</span>, headers = header)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用Request.add_header() 添加/修改一个特定的header</span></span><br><span class="line">request.add_header(<span class="string">&quot;Connection&quot;</span>, <span class="string">&quot;keep-alive&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 向服务器发送请求 返回&lt;http.client.HTTPResponse object at 0x09135850&gt;</span></span><br><span class="line">response = urllib.request.urlopen(request)</span><br><span class="line"></span><br><span class="line">html = response.read().decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(html)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">request类Request方法常用的内置方法</span><br><span class="line"></span><br><span class="line">Request.add_data(data)  设置data参数，如果一开始创建的时候没有给data参数，那么可以使用该方法追加data 参数</span><br><span class="line"></span><br><span class="line">Request.get_method() 返回HTTP请求方法，一般返回GET或是POST</span><br><span class="line"></span><br><span class="line">Request.has_data() 查看是否设置了data参数</span><br><span class="line"></span><br><span class="line">Request.get_data() 获取data参数的数据</span><br><span class="line"></span><br><span class="line">Request.add_header(key, val) 添加头部信息，key为头域名，val为域值</span><br><span class="line"></span><br><span class="line">Request.get_full_url() 获取请求的完整url</span><br><span class="line"></span><br><span class="line">Request.get_host() 返回请求url的host（主域名）</span><br><span class="line"></span><br><span class="line">Request.set_proxy(host, type) 设置代理，第一个参数是代理ip和端口，第二个参数是代理类型（http/https)</span><br></pre></td></tr></table></figure>

<h4 id="微博登录示例"><a href="#微博登录示例" class="headerlink" title="微博登录示例"></a>微博登录示例</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request, parse</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Login to weibo.cn...&#x27;</span>)</span><br><span class="line">email = <span class="built_in">input</span>(<span class="string">&#x27;Email: &#x27;</span>)</span><br><span class="line">passwd = <span class="built_in">input</span>(<span class="string">&#x27;Password: &#x27;</span>)</span><br><span class="line">login_data = parse.urlencode([</span><br><span class="line">    (<span class="string">&#x27;username&#x27;</span>, email),</span><br><span class="line">    (<span class="string">&#x27;password&#x27;</span>, passwd),</span><br><span class="line">    (<span class="string">&#x27;entry&#x27;</span>, <span class="string">&#x27;mweibo&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;client_id&#x27;</span>, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;savestate&#x27;</span>, <span class="string">&#x27;1&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;ec&#x27;</span>, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;pagerefer&#x27;</span>, <span class="string">&#x27;https://passport.weibo.cn/signin/welcome?entry=mweibo&amp;r=http%3A%2F%2Fm.weibo.cn%2F&#x27;</span>)</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">req = request.Request(<span class="string">&#x27;https://passport.weibo.cn/sso/login&#x27;</span>)</span><br><span class="line">req.add_header(<span class="string">&#x27;Origin&#x27;</span>, <span class="string">&#x27;https://passport.weibo.cn&#x27;</span>)</span><br><span class="line">req.add_header(<span class="string">&#x27;User-Agent&#x27;</span>, <span class="string">&#x27;Mozilla/6.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/8.0 Mobile/10A5376e Safari/8536.25&#x27;</span>)</span><br><span class="line">req.add_header(<span class="string">&#x27;Referer&#x27;</span>, <span class="string">&#x27;https://passport.weibo.cn/signin/login?entry=mweibo&amp;res=wel&amp;wm=3349&amp;r=http%3A%2F%2Fm.weibo.cn%2F&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> request.urlopen(req, data=login_data.encode(<span class="string">&#x27;utf-8&#x27;</span>)) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Status:&#x27;</span>, f.status, f.reason)</span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> f.getheaders():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s: %s&#x27;</span> % (k, v))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Data:&#x27;</span>, f.read().decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure>

<h2 id="Beautiful-Soup4"><a href="#Beautiful-Soup4" class="headerlink" title="Beautiful Soup4"></a>Beautiful Soup4</h2><p>参考链接:</p>
<ul>
<li><a class="link"   href="https://beautifulsoup.readthedocs.io/zh_CN/latest/" >Beautiful Soup 4.4.0 文档<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.html" >Beautiful Soup Documentation 文档<i class="fas fa-external-link-alt"></i></a></li>
</ul>
<h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><p>Beautiful Soup 是一个可以从HTML或XML文件中提取数据的Python库.它能够通过你喜欢的转换器实现惯用的文档导航,查找,修改文档的方式.</p>
<h3 id="对象的种类"><a href="#对象的种类" class="headerlink" title="对象的种类"></a>对象的种类</h3><p>得到BeautifulSoup对象 并按标准格式输出<br><code>soup = BeautifulSoup(html, &quot;html.parser&quot;)</code></p>
<p>Beautiful Soup将复杂HTML文档转换成一个复杂的树形结构,每个节点都是Python对象,所有对象可以归纳为4种:  BeautifulSoup,Tag, NavigableString, Comment</p>
<h4 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h4><p>BeautifulSoup 对象表示的是一个文档的全部内容.大部分时候,可以把它当作 Tag 对象</p>
<h4 id="Tag"><a href="#Tag" class="headerlink" title="Tag"></a>Tag</h4><p>Tag子节点 对象与XML或HTML原生文档中的tag相同:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup = BeautifulSoup(<span class="string">&#x27;&lt;b class=&quot;boldest&quot;&gt;Extremely bold&lt;/b&gt;&#x27;</span>)</span><br><span class="line">tag = soup.b</span><br><span class="line"><span class="built_in">type</span>(tag)</span><br><span class="line"><span class="comment"># &lt;class &#x27;bs4.element.Tag&#x27;&gt;</span></span><br><span class="line">tag.name</span><br><span class="line"><span class="comment"># u&#x27;b&#x27;</span></span><br><span class="line"></span><br><span class="line">tag[<span class="string">&#x27;class&#x27;</span>]</span><br><span class="line"><span class="comment"># u&#x27;boldest&#x27;</span></span><br><span class="line">tag.attrs</span><br><span class="line"><span class="comment"># &#123;u&#x27;class&#x27;: u&#x27;boldest&#x27;&#125;</span></span><br><span class="line">tag[<span class="string">&#x27;class&#x27;</span>] = <span class="string">&#x27;verybold&#x27;</span></span><br><span class="line">tag[<span class="string">&#x27;id&#x27;</span>] = <span class="number">1</span></span><br><span class="line">tag</span><br><span class="line"><span class="comment"># &lt;blockquote class=&quot;verybold&quot; id=&quot;1&quot;&gt;Extremely bold&lt;/blockquote&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> tag[<span class="string">&#x27;class&#x27;</span>]</span><br><span class="line"><span class="keyword">del</span> tag[<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">tag</span><br><span class="line"><span class="comment"># &lt;blockquote&gt;Extremely bold&lt;/blockquote&gt;</span></span><br><span class="line"></span><br><span class="line">tag[<span class="string">&#x27;class&#x27;</span>]</span><br><span class="line"><span class="comment"># KeyError: &#x27;class&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(tag.get(<span class="string">&#x27;class&#x27;</span>))</span><br><span class="line"><span class="comment"># None</span></span><br></pre></td></tr></table></figure>

<p>节点操作</p>
<p>soup.contents 将子节点以列表的方式输出 返回类型 list</p>
<p>soup.children 将子节点以可迭代列表的方式输出 返回类型 list_iterator</p>
<p>可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator</p>
<p>soup.descendants 对所有tag的子孙节点进行递归循环 返回类型 generator</p>
<p>父节点 .parents 递归得到所有父辈节点 返回类型 generator</p>
<p>.previous_sibling .next_sibling 查询兄弟节点</p>
<h4 id="NavigableString"><a href="#NavigableString" class="headerlink" title="NavigableString"></a>NavigableString</h4><p>字符串常被包含在tag内.Beautiful Soup用 NavigableString 类来包装tag中的字符串:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tag.string</span><br><span class="line"><span class="comment"># u&#x27;Extremely bold&#x27;</span></span><br><span class="line"><span class="built_in">type</span>(tag.string)</span><br><span class="line"><span class="comment"># &lt;class &#x27;bs4.element.NavigableString&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不能编辑，但可以直接替换</span></span><br><span class="line">tag.string.replace_with(<span class="string">&quot;No longer bold&quot;</span>)</span><br><span class="line">tag</span><br><span class="line"><span class="comment"># &lt;blockquote&gt;No longer bold&lt;/blockquote&gt;</span></span><br></pre></td></tr></table></figure>

<p>字符串操作</p>
<p>tag中包含多个字符串 可以用.strings循环获取 返回 generator<br> .stripped_strings获取删除空格和空行后的内容</p>
<h4 id="Comment"><a href="#Comment" class="headerlink" title="Comment"></a>Comment</h4><p>Comment 对象是一个特殊类型的 NavigableString 对象,<br>html和xml中的注释部分</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">markup = <span class="string">&quot;&lt;b&gt;&lt;!--Hey, buddy. Want to buy a used parser?--&gt;&lt;/b&gt;&quot;</span></span><br><span class="line">soup = BeautifulSoup(markup)</span><br><span class="line">comment = soup.b.string</span><br><span class="line"><span class="built_in">type</span>(comment)</span><br><span class="line"><span class="comment"># &lt;class &#x27;bs4.element.Comment&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="搜索文档树"><a href="#搜索文档树" class="headerlink" title="搜索文档树"></a>搜索文档树</h3><p>find(self, name=None, attrs={}, recursive=True, text=None,**kwargs)<br>find_all(self, name=None, attrs={}, recursive=True, text=None,limit=None, **kwargs)</p>
<h4 id="name"><a href="#name" class="headerlink" title="name"></a>name</h4><p>name 参数可以查找所有名字为 name 的tag,字符串对象会被自动忽略掉</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.find_all(<span class="string">&quot;title&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br></pre></td></tr></table></figure>

<h4 id="attrs"><a href="#attrs" class="headerlink" title="attrs"></a>attrs</h4><p>根据属性查找</p>
<p>其中，class 属于python中的保留字，通过class_ 搜索</p>
<p>string 搜索文档中字符串的内容</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.find_all(<span class="built_in">id</span>=<span class="string">&#x27;link2&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(href=re.<span class="built_in">compile</span>(<span class="string">&quot;elsie&quot;</span>))</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在文档树中查找所有包含 id 属性的tag,无论 id 的值是什么</span></span><br><span class="line">soup.find_all(<span class="built_in">id</span>=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(href=re.<span class="built_in">compile</span>(<span class="string">&quot;elsie&quot;</span>), <span class="built_in">id</span>=<span class="string">&#x27;link1&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;three&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(<span class="string">&quot;a&quot;</span>, class_=<span class="string">&quot;sister&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(string=<span class="string">&quot;Elsie&quot;</span>)</span><br><span class="line"><span class="comment"># [u&#x27;Elsie&#x27;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(string=[<span class="string">&quot;Tillie&quot;</span>, <span class="string">&quot;Elsie&quot;</span>, <span class="string">&quot;Lacie&quot;</span>])</span><br><span class="line"><span class="comment"># [u&#x27;Elsie&#x27;, u&#x27;Lacie&#x27;, u&#x27;Tillie&#x27;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(string=re.<span class="built_in">compile</span>(<span class="string">&quot;Dormouse&quot;</span>))</span><br><span class="line">[<span class="string">u&quot;The Dormouse&#x27;s story&quot;</span>, <span class="string">u&quot;The Dormouse&#x27;s story&quot;</span>]</span><br><span class="line"></span><br><span class="line">soup.find_all(<span class="string">&quot;a&quot;</span>, string=<span class="string">&quot;Elsie&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.find_all(<span class="string">&quot;a&quot;</span>, limit=<span class="number">2</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br></pre></td></tr></table></figure>

<h4 id="recursive"><a href="#recursive" class="headerlink" title="recursive"></a>recursive</h4><p>只搜索tag的子节点 recursive=False</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.html.find_all(<span class="string">&quot;title&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.html.find_all(<span class="string">&quot;title&quot;</span>, recursive=<span class="literal">False</span>)</span><br><span class="line"><span class="comment"># []</span></span><br></pre></td></tr></table></figure>

<h4 id="直接调用tag"><a href="#直接调用tag" class="headerlink" title="直接调用tag"></a>直接调用tag</h4><p>find_all 最常用 简写方法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.find_all(<span class="string">&quot;a&quot;</span>)</span><br><span class="line">soup(<span class="string">&quot;a&quot;</span>)</span><br><span class="line"></span><br><span class="line">soup.title.find_all(string=<span class="literal">True</span>)</span><br><span class="line">soup.title(string=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>

<h3 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> .select() 方法中传入字符串参数, 即可使用CSS选择器的语法找到tag:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;title&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;p:nth-of-type(3)&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;]</span></span><br><span class="line">通过tag标签逐层查找:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;body a&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot;  id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;html head title&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br><span class="line">找到某个tag标签下的直接子标签 [<span class="number">6</span>] :</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;head &gt; title&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;p &gt; a&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot;  id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;p &gt; a:nth-of-type(2)&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;p &gt; #link1&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;body &gt; a&quot;</span>)</span><br><span class="line"><span class="comment"># []</span></span><br><span class="line">找到兄弟节点标签:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;#link1 ~ .sister&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot;id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;#link1 + .sister&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br><span class="line">通过CSS的类名查找:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;.sister&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;[class~=sister]&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line">通过tag的<span class="built_in">id</span>查找:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;#link1&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;a#link2&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br><span class="line">同时用多种CSS选择器查询元素:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;#link1,#link2&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br><span class="line">通过是否存在某个属性来查找:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&#x27;a[href]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line">通过属性的值来查找:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&#x27;a[href=&quot;http://example.com/elsie&quot;]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&#x27;a[href^=&quot;http://example.com/&quot;]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&#x27;a[href$=&quot;tillie&quot;]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&#x27;a[href*=&quot;.com/el&quot;]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line">通过语言设置来查找:</span><br><span class="line"></span><br><span class="line">multilingual_markup = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"> &lt;p lang=&quot;en&quot;&gt;Hello&lt;/p&gt;</span></span><br><span class="line"><span class="string"> &lt;p lang=&quot;en-us&quot;&gt;Howdy, y&#x27;all&lt;/p&gt;</span></span><br><span class="line"><span class="string"> &lt;p lang=&quot;en-gb&quot;&gt;Pip-pip, old fruit&lt;/p&gt;</span></span><br><span class="line"><span class="string"> &lt;p lang=&quot;fr&quot;&gt;Bonjour mes amis&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">multilingual_soup = BeautifulSoup(multilingual_markup)</span><br><span class="line">multilingual_soup.select(<span class="string">&#x27;p[lang|=en]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;p lang=&quot;en&quot;&gt;Hello&lt;/p&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;p lang=&quot;en-us&quot;&gt;Howdy, y&#x27;all&lt;/p&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;p lang=&quot;en-gb&quot;&gt;Pip-pip, old fruit&lt;/p&gt;]</span></span><br><span class="line">返回查找到的元素的第一个</span><br><span class="line"></span><br><span class="line">soup.select_one(<span class="string">&quot;.sister&quot;</span>)</span><br><span class="line"><span class="comment"># &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;</span></span><br><span class="line">对于熟悉CSS选择器语法的人来说这是个非常方便的方法.Beautiful Soup也支持CSS选择器API, 如果你仅仅需要CSS选择器的功能,那么直接使用 lxml 也可以, 而且速度更快,支持更多的CSS选择器语法,但Beautiful Soup整合了CSS选择器的语法和自身方便使用API.</span><br></pre></td></tr></table></figure>

<h2 id="pdfkit"><a href="#pdfkit" class="headerlink" title="pdfkit"></a>pdfkit</h2><p>使用pdfkit依赖 wkhtmltopdf 需要在本地path下配置</p>
<p>或本地path未配置</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pdfkit</span><br><span class="line"><span class="comment"># 配置path后 可以不写</span></span><br><span class="line">path_wk = <span class="string">r&#x27;C:\Program Files\wkhtmltopdf\bin\wkhtmltopdf.exe&#x27;</span>  </span><br><span class="line"><span class="comment"># wkhtmltopdf安装位置</span></span><br><span class="line">config = pdfkit.configuration(wkhtmltopdf=path_wk)</span><br><span class="line">pdfkit.from_string(html, file_name, options=options, configuration=config)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pdfkit</span><br><span class="line">pdfkit.from_url(<span class="string">&#x27;http://google.com&#x27;</span>, <span class="string">&#x27;out.pdf&#x27;</span>)</span><br><span class="line">pdfkit.from_file(<span class="string">&#x27;test.html&#x27;</span>, <span class="string">&#x27;out.pdf&#x27;</span>)</span><br><span class="line">pdfkit.from_string(<span class="string">&#x27;Hello!&#x27;</span>, <span class="string">&#x27;out.pdf&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>cmd下执行<code>wkhtmltopdf &quot;www.baidu.com&quot; &quot;out.pdf&quot;</code></p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>learn</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Keep 主题使用指南</title>
    <url>/2018/10/07/%E7%B4%A0%E7%AE%80/</url>
    <content><![CDATA[<h1 id="素简"><a href="#素简" class="headerlink" title="素简"></a>素简</h1><p>素简   人活到极致，一定是素与简。活得越素简，越能听见内心的声音生活越是素简，内心越是绚烂丰盈。素简生活，可以从 20 条做起：<br>1、找出对你最重要的几件事<br>2、简化你的工作任务<br>3、一次只做一件事，做到最好<br>4、释放时间做你喜欢做的事情<br>5、养成规律的作息习惯<br>6、定期整理房间<br>7、控制购买欲，不买不需之物<br>8、确是必需物品，买最好的，充分使用它<br>9、减少使用社交网络，少刷微博微信<br>10、尽量不关注娱乐、社会新闻<br>11、找到属于自己的情感宣泄方式<br>12、删除长期不用 APP<br>13、享受慢生活<br>14、不做无效社交<br>15、坚持锻炼身体<br>16、少吃垃圾食品<br>17、穿着简洁、不花哨<br>18、找出时间独处<br>19、花时间和自己爱的人相处<br>20、学习拒绝</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>转载</tag>
      </tags>
  </entry>
  <entry>
    <title>经营四圣</title>
    <url>/2018/10/07/%E7%BB%8F%E8%90%A5%E5%9B%9B%E5%9C%A3/</url>
    <content><![CDATA[<h1 id="经营四圣"><a href="#经营四圣" class="headerlink" title="经营四圣"></a>经营四圣</h1><ul>
<li>松下幸之助（松下公司）松下政经塾    经营之神</li>
<li>本田宗一郎（本田公司）本田摩托 低公害发动机</li>
<li>盛田昭夫（索尼公司）</li>
<li>稻盛和夫（京瓷公司）</li>
</ul>
<h2 id="松下幸之助"><a href="#松下幸之助" class="headerlink" title="松下幸之助"></a>松下幸之助</h2><p>经营哲学：首先要细心倾听他人的意见<br>经营理念：为了使人们生活变得更加丰富、更加舒适，并为了世界文化的发展作出贡献<br>企业的形体远远没有企业的精神重要</p>
<p>自来水哲学：消除世界贫困，使人类走向共同富裕。<br>让世界物资丰富以消除一切不方便，把大众需要的东西，变得像自来水一样便宜。<br>经营就是从“无”当中制造“有”，通过生产活动给所有人类带来富足丰裕的生活<br>质量必须优先，价格必须低廉，服务必须周到。</p>
<p>玻璃式经营：公开和透明</p>
<p>堤坝式经营：珍惜老天赐予的每一滴水，并加以有效应用。<br>避免经营过程中的周期性震荡，减少不确定性对企业的冲击。<br>在经营上各方面都要保留宽裕的运用弹性。</p>
<p>守信、自律，绝不靠政治赚钱，彻底遵守商人道德。</p>
<h3 id="松下名言"><a href="#松下名言" class="headerlink" title="松下名言"></a>松下名言</h3><p>1．人的生存意义不在于赚多少钱，而在于你为你的民族做了多少事。<br>2．企业即人，成也在人，败也在人。<br>3．经营者必须兼任端菜的工作。<br>4．工作本身如果是对的，是对社会有益的，金钱会自然而来。<br>5．我们可以为金钱而工作，但不可为金钱而出卖尊严。<br>6．谦和的态度，常会使别人难以拒绝你的要求，这也是一个人无往不胜的要诀。</p>
<h2 id="本田宗一郎"><a href="#本田宗一郎" class="headerlink" title="本田宗一郎"></a>本田宗一郎</h2><p>三个喜悦： 购买的喜悦、销售的喜悦、制造的喜悦<br>三个尊重： 尊重理论、尊重创造、尊重时间<br>敢于承担社会责任</p>
<p>经营理念<br>充分尊重个人，公平合理授权<br>和不同类型的人合作<br>权利交给有能力的人<br>职员平等 不以职务称<br>为自己工作<br>一人一事，自由竞争<br>保证自由选择主攻方向的权利<br>创造性<br>1、引进合理化建议制度。<br>2、建立 “新设想工作室”。<br>3、举办违反常规作品的展览会。<br>4、技术面前人人平等。</p>
<h2 id="稻盛和夫"><a href="#稻盛和夫" class="headerlink" title="稻盛和夫"></a>稻盛和夫</h2><p>企业成功的三个要素：专业人才、金钱、技术<br>人格第一，勇气第二，能力第三<br>创造力 = 能力 × 热情 × 思维方式</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Git</title>
    <url>/2018/10/27/Git/</url>
    <content><![CDATA[<p><img  
                     lazyload
                     alt="image"
                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3wphg2yj30hs056769.jpg"
                      alt="image.png"
                ><br><img  
                     lazyload
                     alt="image"
                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3xf46koj31lo14q7wi.jpg"
                      alt="image.png"
                ></p>
<p>终端信息<code>git config --global user.name &quot;Your Name&quot;</code></p>
<p><code>git config --global user.email &quot;email@example.com&quot;</code></p>
<p>初始化一个Git仓库，使用git init命令。</p>
<p>添加文件到Git仓库，分两步：</p>
<p>第一步，使用命令<code>git add &lt;file&gt;</code>，可反复多次使用添加多个文件；文件修改添加到暂存区</p>
<p>第二步，使用命令<code>git commit -m</code> “注释” ，完成。 暂存区的全部内容提交到master分支</p>
<p>修改文件后 运行<code>git status</code>命令看看结果：</p>
<p><code>touch</code> 创建文件  <code>cat</code> 查看文件</p>
<p>查看修改文件详情 <code>git diff &lt;file&gt;</code></p>
<p>查看提交历史记录（回退） <code>git log (--pretty=oneline)；</code></p>
<p>返回上一个版本  <code>git reset --hard HEAD^</code>   上上一个 HEAD^^</p>
<p>查看文件内容 <code>cat &lt;file&gt;</code></p>
<p>跳到任意版本  <code>git reset &lt;commit id&gt;</code></p>
<p>查看命令记录（未来）  `git reflog``</p>
<p>查看工作区和版本库里面最新版本的区别<code>git diff HEAD -- &lt;file&gt;</code></p>
<p>撤销工作区的更改  <code>git checkout -- &lt;file&gt;</code></p>
<p>撤销暂存区的文件更改  <code>git reset HEAD &lt;file&gt;</code></p>
<p>删除暂存区的文件 <code>git rm &lt;file&gt;</code></p>
<p>生成ssd目录<code>ssh-keygen -t rsa -C [wukong1996@163.com](mailto:wukong1996@163.com)</code></p>
<p>关联远程库  <code>git remote add origin https://github.com/wukong1024/&lt;repository&gt;.git</code></p>
<p>第一次上传/后期  <code>git push [-u] origin master</code></p>
<p>克隆到本地  <code>git clone git@github.com:wukong1024/&lt;repository&gt;.git</code></p>
<p>[创建]并切换  <code>git checkout [-b] dev</code></p>
<p>查看分支 <code>git branch</code></p>
<p>合并分支到当期  <code>git merge dev</code></p>
<p>删除分支：<code>git branch -d &lt;name&gt;</code></p>
<p>分支分布图:<code>git log --graph</code></p>
<p>普通合并<code>git merge --no-ff -m &quot;merge with no-ff&quot; dev</code></p>
<p>隐藏修改：<code>git status</code></p>
<p>查看历史隐藏：<code>git stash list</code></p>
<p>恢复隐藏：<code>git stash apply [num]</code></p>
<p>删除隐藏： <code>git stash pop [num]</code></p>
<p>恢复并删除:<code>git stash pop [num]</code></p>
<p>标签：<code>git tag v1.0 [commit id]</code></p>
<p>命令<code>git push origin &lt;tagname&gt;</code>可以推送一个本地标签；</p>
<p>命令<code>git push origin --tags</code>可以推送全部未推送过的本地标签；</p>
<p>命令<code>git tag -d &lt;tagname&gt;</code>可以删除一个本地标签；</p>
<p>命令<code>git push origin :refs/tags/&lt;tagname&gt;</code>可以删除一个远程标签</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>learn</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown</title>
    <url>/2018/11/15/Markdown/</url>
    <content><![CDATA[<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><p>[TOC]</p>
<!-- 导入外部文件 @import name-->

<h2 id="Cmd-Markdown简明语法"><a href="#Cmd-Markdown简明语法" class="headerlink" title="Cmd Markdown简明语法"></a>Cmd Markdown简明语法</h2><p>标签: Cmd-Markdown</p>
<h3 id="1-斜体和粗体"><a href="#1-斜体和粗体" class="headerlink" title="1. 斜体和粗体"></a>1. 斜体和粗体</h3><p>这是 <em>斜体</em>  这是 <strong>粗体</strong></p>
<h3 id="2-分级标题"><a href="#2-分级标题" class="headerlink" title="2. 分级标题"></a>2. 分级标题</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这是一个一级标题</span><br><span class="line">=========================</span><br><span class="line"></span><br><span class="line">这是一个二级标题</span><br><span class="line">-------------------------</span><br></pre></td></tr></table></figure>

<h3 id="3-外链接"><a href="#3-外链接" class="headerlink" title="3. 外链接"></a>3. 外链接</h3><p>个人博客 <a href="http://wukong1024.github.io/" title="你倒是点呀">悟空</a>的链接</p>
<p>邮箱: <a class="link"   href="mailto:&#119;&#117;&#107;&#111;&#x6e;&#103;&#x31;&#x30;&#50;&#52;&#x40;&#x31;&#54;&#x33;&#x2e;&#x63;&#x6f;&#109;" >&#119;&#117;&#107;&#111;&#x6e;&#103;&#x31;&#x30;&#50;&#52;&#x40;&#x31;&#54;&#x33;&#x2e;&#x63;&#x6f;&#109;<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="4-无序列表"><a href="#4-无序列表" class="headerlink" title="4. 无序列表"></a>4. 无序列表</h3><ul>
<li>1</li>
<li>2</li>
<li>3</li>
</ul>
<h3 id="5-有序列表"><a href="#5-有序列表" class="headerlink" title="5. 有序列表"></a>5. 有序列表</h3><ol>
<li>一</li>
<li>二</li>
<li>三</li>
</ol>
<h3 id="6-文字引用"><a href="#6-文字引用" class="headerlink" title="6. 文字引用"></a>6. 文字引用</h3><blockquote>
<p>黄金白璧买歌笑，一醉累月轻王侯</p>
</blockquote>
<h3 id="7-行内代码块"><a href="#7-行内代码块" class="headerlink" title="7. 行内代码块"></a>7. 行内代码块</h3><p>人生苦短 <code>python</code></p>
<h3 id="8-代码块"><a href="#8-代码块" class="headerlink" title="8. 代码块"></a>8. 代码块</h3><p>  这是一个代码块，左侧有四个空格</p>
<h3 id="9-插入图像"><a href="#9-插入图像" class="headerlink" title="9. 插入图像"></a>9. 插入图像</h3><p><img  
                     lazyload
                     alt="image"
                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3y6hewcj307i03l0sk.jpg"
                      alt="image.png"
                ></p>
<h3 id="10-注释"><a href="#10-注释" class="headerlink" title="10. 注释"></a>10. 注释</h3><!-- 我只是一个注释 -->

<h3 id="11-上标、下标和表情"><a href="#11-上标、下标和表情" class="headerlink" title="11. 上标、下标和表情"></a>11. 上标、下标和表情</h3><p>30^th^</p>
<p>H<del>2</del>O</p>
<p>:smile: :sa: :smirk:  :heart_eyes:</p>
<h3 id="12-缩略"><a href="#12-缩略" class="headerlink" title="12. 缩略"></a>12. 缩略</h3><p>*[HTML]: Hyper Text Markup Language<br>*[W3C]:  World Wide Web Consortium<br>The HTML specification<br>is maintained by the W3C.</p>
<h3 id="13-标记"><a href="#13-标记" class="headerlink" title="13. 标记"></a>13. 标记</h3><p>==marked==</p>
<h2 id="Cmd-Markdown高阶语法"><a href="#Cmd-Markdown高阶语法" class="headerlink" title="Cmd Markdown高阶语法"></a>Cmd Markdown高阶语法</h2><h3 id="1-内容目录"><a href="#1-内容目录" class="headerlink" title="1. 内容目录"></a>1. 内容目录</h3><p>在段落里填写<code>[TOC]</code>显示全文目录(部分编辑器不显示)<br><code>[TOC]</code></p>
<h3 id="2-标签分类"><a href="#2-标签分类" class="headerlink" title="2. 标签分类"></a>2. 标签分类</h3><p>标签: 数学 英语</p>
<p>Tags: Markdown Python Linux</p>
<h3 id="3-删除线"><a href="#3-删除线" class="headerlink" title="3. 删除线"></a>3. 删除线</h3><p><del>这是一行错误的文本</del></p>
<h3 id="4-注脚"><a href="#4-注脚" class="headerlink" title="4. 注脚"></a>4. 注脚</h3><p>使用注脚[^footnote]</p>
<p>这是第一个注脚<a href="%E8%BF%99%E6%98%AF%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%B3%A8%E8%84%9A%E6%96%87%E6%9C%AC">^1</a></p>
<p>这是第二个注脚<a href="%E8%BF%99%E6%98%AF%E7%AC%AC%E4%BA%8C%E4%B8%AA%E6%B3%A8%E8%84%9A%E6%96%87%E6%9C%AC">^2</a></p>
<h3 id="5-代码块"><a href="#5-代码块" class="headerlink" title="5. 代码块"></a>5. 代码块</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$sudo apt-get install vim-gnome</span><br></pre></td></tr></table></figure>

<p>Python示例</p>
<figure class="highlight python"><figcaption><span>&#123;.line-numbers&#125;</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">somefunc</span>(<span class="params">param1=<span class="string">&#x27;&#x27;</span>, param2=<span class="number">0</span></span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;A docstring&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> param1 &gt; param2: <span class="comment"># interesting</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Greater&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> (param2 - param1 + <span class="number">1</span>) <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">&#x27;&#x27;&#x27;interpreter</span></span><br><span class="line"><span class="string"><span class="meta">... </span>prompt&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>

<p>JavaScript 示例</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* nth element in the fibonacci series.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param </span>n &gt;= 0</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return </span>the nth element, &gt;= 0.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fib</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">1</span>, b = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">var</span> tmp;</span><br><span class="line">  <span class="keyword">while</span> (--n &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">    tmp = a;</span><br><span class="line">    a += b;</span><br><span class="line">    b = tmp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(fib(<span class="number">10</span>));</span><br></pre></td></tr></table></figure>

<h3 id="6-表格"><a href="#6-表格" class="headerlink" title="6. 表格"></a>6. 表格</h3><table>
<thead>
<tr>
<th>项目</th>
<th align="right">价格</th>
<th align="center">数量</th>
</tr>
</thead>
<tbody><tr>
<td>计算机</td>
<td align="right">9999</td>
<td align="center">5</td>
</tr>
<tr>
<td>手机</td>
<td align="right">999</td>
<td align="center">15</td>
</tr>
<tr>
<td>键盘</td>
<td align="right">99</td>
<td align="center">555</td>
</tr>
</tbody></table>
<h3 id="7-Html标签"><a href="#7-Html标签" class="headerlink" title="7. Html标签"></a>7. Html标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>值班人员<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>星期一<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>星期二<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>星期三<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>李强<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>张明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>王平<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="8-代办时间-TODO-列表"><a href="#8-代办时间-TODO-列表" class="headerlink" title="8.代办时间 TODO 列表"></a>8.代办时间 TODO 列表</h3><ul>
<li><p><strong>Cmd Markdown 开发</strong></p>
<ul>
<li><input disabled="" type="checkbox"> 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li>
<li><input disabled="" type="checkbox"> 支持以 PDF 格式导出文稿</li>
<li><input checked="" disabled="" type="checkbox"> 新增Todo列表功能</li>
<li><input checked="" disabled="" type="checkbox"> 改进 LaTex 功能<ul>
<li><input checked="" disabled="" type="checkbox"> 修复 LaTex 公式渲染问题</li>
<li><input checked="" disabled="" type="checkbox"> 新增 LaTex 公式编号功能</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>七月旅行准备</strong></p>
<ul>
<li><input disabled="" type="checkbox"> 准备邮轮上需要携带的物品</li>
<li><input disabled="" type="checkbox"> 浏览日本免税店的物品</li>
<li><input checked="" disabled="" type="checkbox"> 购买蓝宝石公主号七月一日的船票</li>
</ul>
</li>
</ul>
<h3 id="9-公式"><a href="#9-公式" class="headerlink" title="9. 公式"></a>9. 公式</h3><p>$$<br>a=b+c-1<br>$$</p>
<h3 id="10-字体"><a href="#10-字体" class="headerlink" title="10.字体"></a>10.字体</h3><p><font size=1>大小为1的字体</font><br><font size=6>大小为6的字体</font><br><font color=gray size=4>gray颜色的字</font><br><font color=green size=4>green颜色的字</font><br><font color=hotpink size=4>hotpink颜色的字</font><br><font color=LightCoral size=4>LightCoral颜色的字</font><br><font color=LightSlateGray size=4>LightSlateGray颜色的字</font><br><font color=orangered size=4>orangered颜色的字</font><br><font color=red size=4>red颜色的字</font><br><font color=springgreen size=4>springgreen颜色的字</font><br><font color=Turquoise size=4>Turquoise颜色的字</font></p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>learn</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>jQuery</title>
    <url>/2018/11/16/jQuery/</url>
    <content><![CDATA[<h1 id="jQuery学习笔记"><a href="#jQuery学习笔记" class="headerlink" title="jQuery学习笔记"></a>jQuery学习笔记</h1><p>[TOC]</p>
<h2 id="1-基本格式"><a href="#1-基本格式" class="headerlink" title="1. 基本格式"></a>1. 基本格式</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;jquery-1.12.4.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        $(<span class="string">&quot;#left&gt;li&quot;</span>).mouseenter(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            $(<span class="string">&quot;#center&gt;li:eq(&quot;</span> + $(<span class="built_in">this</span>).index() + <span class="string">&quot;)&quot;</span>).show().siblings().hide();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        $(<span class="string">&quot;#right&gt;li&quot;</span>).mouseenter(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            $(<span class="string">&quot;#center&gt;li&quot;</span>).eq($(<span class="built_in">this</span>).index() + <span class="number">9</span>).show().siblings().hide();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h2 id="2-选择器"><a href="#2-选择器" class="headerlink" title="2. 选择器"></a>2. 选择器</h2><ul>
<li><p>基本选择器  </p>
<ul>
<li>标签 div p ul li</li>
<li>类 .class</li>
<li>id选择器 #id</li>
<li>交集  li.green.big</li>
<li>并集  .green,.red</li>
</ul>
</li>
<li><p>层级选择器</p>
<ul>
<li>子代 s1&gt;s2</li>
<li>后代 s1 s2</li>
</ul>
</li>
<li><p>过滤选择器</p>
<ul>
<li>:even:偶数</li>
<li>:odd:奇数  </li>
<li>:eq：指定下标</li>
<li>:first  :last  :gt  :lt</li>
</ul>
</li>
<li><p>筛选选择器</p>
<ul>
<li>children():找儿子</li>
<li>find():找后代</li>
<li>parent():找爹</li>
<li>siblings():找兄弟，不包括自己</li>
<li>next():下一个兄弟</li>
<li>prev():上一次兄弟</li>
<li>eq():指定下标</li>
</ul>
</li>
</ul>
<p>$(this).index()返回的当前元素在所有兄弟里面的索引。</p>
<h2 id="3-操作"><a href="#3-操作" class="headerlink" title="3. 操作"></a>3. 操作</h2><h3 id="1-操作样式"><a href="#1-操作样式" class="headerlink" title="1. 操作样式"></a>1. 操作样式</h3><ul>
<li>1.1 css操作<ul>
<li>设置单个样式 .css(name, value)</li>
<li>设置多个样式 .css({    })</li>
<li>获取样式     .css(name) 隐式迭代 只返回第一个元素对应的值</li>
</ul>
</li>
<li>1.2 class操作<ul>
<li>添加类：addClass(name)</li>
<li>移除类：removeClass(name)</li>
<li>判断类：hasClass(name)</li>
<li>切换：  toggleClass(name)</li>
</ul>
</li>
</ul>
<h3 id="2-操作属性"><a href="#2-操作属性" class="headerlink" title="2.操作属性"></a>2.操作属性</h3><ul>
<li>2.1 attr<ul>
<li>设置单个属性 attr(name,value)</li>
<li>设置多个属性 attr({   })</li>
<li>获取属性 attr(name)</li>
</ul>
</li>
<li>2.2 prop<ul>
<li>对于布尔类型的属性，disabled，selected,checked，只能用prop</li>
</ul>
</li>
<li>2.3移除某个属性 removeAttr(name)</li>
</ul>
<h3 id="3-动画"><a href="#3-动画" class="headerlink" title="3. 动画"></a>3. 动画</h3><ul>
<li>3.1 三组基本动画<ul>
<li>show/hide,  slideDown/slideUp/slideToggle,  fadeIn/fadeOut/fadeToggle</li>
</ul>
</li>
<li>3.2 自定义动画<ul>
<li>animate(prop, [speed], [swing/linear][callback])</li>
</ul>
</li>
<li>3.3 停止动画<ul>
<li>stop</li>
</ul>
</li>
</ul>
<h3 id="4-操作节点"><a href="#4-操作节点" class="headerlink" title="4. 操作节点"></a>4. 操作节点</h3><ul>
<li>4.1 创建节点:<!-- $('<a href="http://wukong1024.github.io" target="_blank">悟空</a>') --></li>
<li>4.2 添加节点   append, appendTo, prepend, prependTo, after, before</li>
<li>4.3 清空内容   empty</li>
<li>4.4 删除节点   remove</li>
<li>4.5 克隆节点   clone</li>
</ul>
<h2 id="4-特殊属性与事件"><a href="#4-特殊属性与事件" class="headerlink" title="4. 特殊属性与事件"></a>4. 特殊属性与事件</h2><h3 id="1-特殊属性"><a href="#1-特殊属性" class="headerlink" title="1. 特殊属性"></a>1. 特殊属性</h3><ul>
<li>val 设置或获取表单元素的值 input textarea<ul>
<li>获取值 $(“#name”).val()</li>
<li>设置值 $(“#name”).val(“Wukong”)</li>
</ul>
</li>
<li>html 相当于innerHTML text</li>
<li>text 相当于inner Text</li>
<li>width height scrollTop scrollLeft</li>
<li>offset 获取元素距离document的位置</li>
<li>position 获取元素距离有定位的父元素的位置</li>
</ul>
<h3 id="2-jQuery事件机制"><a href="#2-jQuery事件机制" class="headerlink" title="2.jQuery事件机制"></a>2.jQuery事件机制</h3><ul>
<li><p>on 注册</p>
<ul>
<li>简单事件 $(selector).on( “click”, function() {}); 自己触发 不支持动态绑定</li>
<li>委托事件 $(selector).on( “click”,“span”, function() {}); 内部后代元素触发 支持后代绑定</li>
<li>on语法 $(selector).on(events[,selector][,data],handler);<ul>
<li>第一个参数：events，绑定事件的名称可以是由空格分隔的多个事件（标准事件或者自定义事件）</li>
<li>第二个参数：selector, 执行事件的后代元素（可选），如果没有后代元素，那么事件将有自己执行。</li>
<li>第三个参数：data，传递给处理函数的数据，事件触发的时候通过event.data来使用（不常使用）</li>
<li>第四个参数：handler，事件处理函数</li>
</ul>
</li>
</ul>
</li>
<li><p>off 解绑</p>
<ul>
<li>$(selector).off(); 解绑所有事件</li>
<li>$(selector).off(“click”); 解绑所有click事件</li>
</ul>
</li>
<li><p>trigger 触发</p>
<ul>
<li>$(selector).trigger(“click”);</li>
</ul>
</li>
<li><p>jQuery事件对象</p>
<ul>
<li>screenX和screenY    对应屏幕最左上角的值</li>
<li>clientX和clientY    距离页面左上角的位置（忽视滚动条）</li>
<li>pageX和pageY    距离页面最顶部的左上角的位置（会计算滚动条的距离</li>
<li>event.keyCode    按下的键盘代码</li>
<li>event.data    存储绑定事件时传递的附加数</li>
<li>event.stopPropagation()    阻止事件冒泡行为</li>
<li>event.preventDefault()    阻止浏览器默认行为</li>
<li>return false:既能阻止事件冒泡，又能阻止浏览器默认行为。</li>
</ul>
</li>
<li><p>补充知识点</p>
<ul>
<li>end(); 筛选选择器会改变jQuery对象的DOM对象，想要回复到上一次的状态，并且返回匹配元素之前的状态。</li>
<li>遍历集合 $(selector).each(function(index,element){});</li>
<li>var c = $.noConflict(); 释放$的控制权,并且把$的能力给了c</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>learn</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 基础</title>
    <url>/2018/11/23/Python%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><p>[TOC]</p>
<h2 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h2><h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h3><p>只能出现一次  并 自动排序 a={}  或  a=set([])</p>
<h3 id="检查对象"><a href="#检查对象" class="headerlink" title="检查对象"></a>检查对象</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dir</span>(a))</span><br></pre></td></tr></table></figure>

<h3 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h3><p><img  
                     lazyload
                     alt="image"
                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3vgiqvnj30pa0h5q5a.jpg"
                      alt="python数据类型转换.jpg"
                ></p>
<h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><h4 id="类的继承"><a href="#类的继承" class="headerlink" title="类的继承"></a>类的继承</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fish</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.name=<span class="string">&quot;fish&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Salmon</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__() <span class="comment"># 调用防止覆盖</span></span><br><span class="line">        self.sex=<span class="string">&quot;male&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="私有属性"><a href="#私有属性" class="headerlink" title="私有属性"></a>私有属性</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>:</span></span><br><span class="line">    __name=<span class="string">&quot;悟空&quot;</span> <span class="comment"># 私有属性外部不可直接调用</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getName</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__name</span><br></pre></td></tr></table></figure>

<h4 id="BIF"><a href="#BIF" class="headerlink" title="BIF"></a>BIF</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">issubclass</span>(<span class="class"><span class="keyword">class</span>,<span class="title">classinfo</span>) # 判断是否为其子类</span></span><br><span class="line"><span class="class"><span class="title">isinstance</span>(<span class="params"><span class="built_in">object</span>,classinfo</span>) # 判断对象是否属于类</span></span><br><span class="line"><span class="class"><span class="title">hasattr</span>(<span class="params"><span class="built_in">object</span>,name</span>) # 判断属性是否属于对象</span></span><br><span class="line"><span class="class"><span class="title">getattr</span>(<span class="params"><span class="built_in">object</span>,name[,default]</span>) # 返回对象的属性值</span></span><br><span class="line"><span class="class"><span class="title">setattr</span>(<span class="params"><span class="built_in">object</span>,name,value</span>) # 设置对象的属性值</span></span><br><span class="line"><span class="class"><span class="title">delattr</span>(<span class="params"><span class="built_in">object</span>,name</span>) # 删除对象的属性值</span></span><br></pre></td></tr></table></figure>

<h4 id="property"><a href="#property" class="headerlink" title="property"></a>property</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">property</span>(fget=<span class="literal">None</span>, fset=<span class="literal">None</span>, fdel=<span class="literal">None</span>, doc=<span class="literal">None</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, age</span>):</span></span><br><span class="line">        self._name = name</span><br><span class="line">        self._age = age</span><br><span class="line">        self._color = <span class="string">&#x27;Black&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_name</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self._name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_name</span>(<span class="params">self, value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(value, <span class="built_in">str</span>):</span><br><span class="line">            self._name = value</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self._name = <span class="string">&#x27;No name&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">del_name</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">del</span> self._name</span><br><span class="line"></span><br><span class="line">    name = <span class="built_in">property</span>(fget=get_name, fset=set_name,</span><br><span class="line">                    fdel=del_name, doc=<span class="string">&#x27;name of an animal&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_age</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self._age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_age</span>(<span class="params">self, value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> value &gt; <span class="number">0</span> <span class="keyword">and</span> value &lt; <span class="number">100</span>:</span><br><span class="line">            self._age = value</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self._age = <span class="number">0</span></span><br><span class="line">            <span class="comment"># print &#x27;invalid age value.&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">del_age</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">del</span> self._age</span><br><span class="line"></span><br><span class="line">    age = <span class="built_in">property</span>(fget=get_age, fset=set_age,</span><br><span class="line">                   fdel=del_age, doc=<span class="string">&#x27;age of an animal&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = Animal(<span class="string">&#x27;black dog&#x27;</span>, <span class="number">3</span>)</span><br><span class="line">a.name = <span class="string">&#x27;white dog&#x27;</span></span><br><span class="line">a.age = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Name:&#x27;</span>, a.name)</span><br><span class="line"><span class="built_in">print</span>(Animal.name.__doc__)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Age:&#x27;</span>, a.age)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="属性访问"><a href="#属性访问" class="headerlink" title="属性访问"></a>属性访问</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,width=<span class="number">0</span>,height=<span class="number">0</span></span>):</span></span><br><span class="line">        self.width=width</span><br><span class="line">        self.height=height</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setattr__</span>(<span class="params">self.name,value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> name == <span class="string">&#x27;square&#x27;</span>:</span><br><span class="line">            self.width=value</span><br><span class="line">            self.height=value</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">super</span>().__setattr__(name,value)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getArea</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.width*self.height</span><br></pre></td></tr></table></figure>

<h4 id="斐波那契迭代"><a href="#斐波那契迭代" class="headerlink" title="斐波那契迭代"></a>斐波那契迭代</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fibs</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,n=<span class="number">10</span></span>):</span></span><br><span class="line">        self.a=<span class="number">0</span></span><br><span class="line">        self.b=<span class="number">1</span></span><br><span class="line">        self.n=n</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__next__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.a,self.b=self.b,self.a+self.b</span><br><span class="line">        <span class="keyword">if</span> self.a&gt;self.n:</span><br><span class="line">            <span class="keyword">raise</span> StopIteration</span><br><span class="line">        <span class="keyword">return</span> self.a</span><br><span class="line">fibs=Fibs(<span class="number">100</span>)</span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> fibs:</span><br><span class="line">    <span class="built_in">print</span>(each)</span><br></pre></td></tr></table></figure>

<h4 id="斐波那契生成器"><a href="#斐波那契生成器" class="headerlink" title="斐波那契生成器"></a>斐波那契生成器</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">libs</span>():</span></span><br><span class="line">    a=<span class="number">0</span></span><br><span class="line">    b=<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        a,b=b,a+b</span><br><span class="line">        <span class="keyword">yield</span> a</span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> libs():</span><br><span class="line">    <span class="keyword">if</span> each &gt;<span class="number">100</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(each,end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure>

<h4 id="推导式"><a href="#推导式" class="headerlink" title="推导式"></a>推导式</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#  列表推导式</span></span><br><span class="line">a = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>) <span class="keyword">if</span> <span class="keyword">not</span> ( i % <span class="number">2</span>) <span class="keyword">and</span> i % <span class="number">3</span>]</span><br><span class="line"><span class="comment"># 字典推导式</span></span><br><span class="line">b = &#123;i: i % <span class="number">2</span>==<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>) &#125;</span><br></pre></td></tr></table></figure>

<h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3><h4 id="main"><a href="#main" class="headerlink" title="main"></a>main</h4><p>if <strong>name</strong>=”<strong>main</strong>“</p>
<h4 id="sys"><a href="#sys" class="headerlink" title="sys"></a>sys</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sys.path</span><br><span class="line"><span class="comment"># 将本地路径添加到系统路径</span></span><br><span class="line">sys.path.append(<span class="string">&quot;c:\\xxxx\\xxxx&quot;</span>)</span><br></pre></td></tr></table></figure>

<h4 id="包"><a href="#包" class="headerlink" title="包"></a>包</h4><p>在包含多个模块文件目录下创建__init.py__文件可以为空<br>调用方式 import M1.test</p>
<h4 id="模块使用"><a href="#模块使用" class="headerlink" title="模块使用"></a>模块使用</h4><p>test.<strong>doc</strong><br>test.<strong>file</strong><br>help(test)</p>
<h2 id="实时天气"><a href="#实时天气" class="headerlink" title="实时天气"></a>实时天气</h2><h3 id="pickle"><a href="#pickle" class="headerlink" title="pickle"></a>pickle</h3><h4 id="读数据"><a href="#读数据" class="headerlink" title="读数据"></a>读数据</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cities=&#123;&#125;</span><br><span class="line">pickle_file = <span class="built_in">open</span>(<span class="string">&#x27;city_data.pkl&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">pickle.dump(cities, pickle_file)</span><br><span class="line">pickle_file.close()</span><br></pre></td></tr></table></figure>

<h4 id="取数据"><a href="#取数据" class="headerlink" title="取数据"></a>取数据</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pickle_file = <span class="built_in">open</span>(<span class="string">&#x27;city_data.pkl&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">cities = pickle.load(pickle_file)</span><br></pre></td></tr></table></figure>

<h3 id="天气api"><a href="#天气api" class="headerlink" title="天气api"></a>天气api</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">https://free-api.heweather.com/s6/weather/lifestyle?&#123;</span><br><span class="line">    location=haikou|海口|CNxxxxxxxxx|auto_ip</span><br><span class="line">    key=669d03a83ebf4f83b0ee9e4bbd2a09ce&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request <span class="keyword">as</span> ur</span><br><span class="line">file_life = ur.urlopen(</span><br><span class="line">    <span class="string">&#x27;https://free-api.heweather.com/s6/weather/lifestyle?location=haikou&amp;key=669d03a83ebf4f83b0ee9e4bbd2a09ce&#x27;</span>)</span><br><span class="line">HTML_life = file_life.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="comment"># print(HTML_life)</span></span><br><span class="line">JSON_life = json.JSONDecoder().decode(HTML_life)</span><br><span class="line"><span class="comment"># print(JSON_life)</span></span><br><span class="line">life = JSON_life[<span class="string">&quot;HeWeather6&quot;</span>][<span class="number">0</span>]</span><br><span class="line">now = JSON_now[<span class="string">&quot;HeWeather6&quot;</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure>

<h2 id="spider"><a href="#spider" class="headerlink" title="spider"></a>spider</h2><h3 id="HTTP原理"><a href="#HTTP原理" class="headerlink" title="HTTP原理"></a>HTTP原理</h3><h4 id="HTTP请求方式"><a href="#HTTP请求方式" class="headerlink" title="HTTP请求方式"></a>HTTP请求方式</h4><p>常用的请求方式是GET和POST：</p>
<p>GET请求：是以实体的方式得到由请求URL所指定资源的信息，一般来说我们输入一个网址时，默认的请求就是GET请求。</p>
<p>POST请求：用来向目的服务器发出请求，要求它接受被附在请求后的实体，并把它当作请求队列中请求URL所指定资源的附加新子项。比如网页上的注册、登录等等都是POST请求。</p>
<p>GET与POST方法有以下区别：</p>
<p>在客户端，GET方式通过URL提交数据，数据在URL中可以看到；POST方式的数据放置在实体区内提交，不能直接看到。</p>
<p>GET方式提交的数据最多只能有1024个字节，而POST则没有此限制。</p>
<p>安全性问题，使用GET的时候，参数会显示在地址栏上，而POST不会，所以，如果这些数据是非敏感数据，那么使用GET；如果用户输入的数据包含敏感数据，那么还是使用POST提交比较靠谱。（其实POST也是不安全的）</p>
<h4 id="HTTP状态码含义"><a href="#HTTP状态码含义" class="headerlink" title="HTTP状态码含义"></a>HTTP状态码含义</h4><p>1xx （临时响应）</p>
<p> 表示临时响应并需要请求者继续执行操作的状态代码。</p>
<table>
<thead>
<tr>
<th>代码</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>100</td>
<td>（继续） 请求者应当继续提出请求。 服务器返回此代码表示已收到请求的第一部分，正在等待其余部分。</td>
</tr>
<tr>
<td>101</td>
<td>（切换协议） 请求者已要求服务器切换协议，服务器已确认并准备切换。</td>
</tr>
</tbody></table>
<p>2xx （成功）</p>
<p>表示成功处理了请求的状态代码。</p>
<table>
<thead>
<tr>
<th>代码</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>200</td>
<td>（成功） 服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。</td>
</tr>
<tr>
<td>201</td>
<td>（已创建） 请求成功并且服务器创建了新的资源。</td>
</tr>
<tr>
<td>202</td>
<td>（已接受） 服务器已接受请求，但尚未处理。</td>
</tr>
<tr>
<td>203</td>
<td>（非授权信息） 服务器已成功处理了请求，但返回的信息可能来自另一来源。</td>
</tr>
<tr>
<td>204</td>
<td>（无内容） 服务器成功处理了请求，但没有返回任何内容。</td>
</tr>
<tr>
<td>205</td>
<td>（重置内容） 服务器成功处理了请求，但没有返回任何内容。</td>
</tr>
<tr>
<td>206</td>
<td>（部分内容） 服务器成功处理了部分 GET 请求。</td>
</tr>
</tbody></table>
<p>3xx （重定向</p>
<p>表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。</p>
<table>
<thead>
<tr>
<th>代码</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>300</td>
<td>（多种选择） 针对请求，服务器可执行多种操作。 服务器可根据请求者 (user agent) 选择一项操作，或提供操作列表供请求者选择。</td>
</tr>
<tr>
<td>301</td>
<td>（永久移动） 请求的网页已永久移动到新位置。 服务器返回此响应（对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。</td>
</tr>
<tr>
<td>302</td>
<td>（临时移动） 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</td>
</tr>
<tr>
<td>303</td>
<td>（查看其他位置） 请求者应当对不同的位置使用单独的 GET 请求来检索响应时，服务器返回此代码。</td>
</tr>
<tr>
<td>304</td>
<td>（未修改） 自从上次请求后，请求的网页未修改过。 服务器返回此响应时，不会返回网页内容。</td>
</tr>
<tr>
<td>305</td>
<td>（使用代理） 请求者只能使用代理访问请求的网页。 如果服务器返回此响应，还表示请求者应使用代理。</td>
</tr>
<tr>
<td>307</td>
<td>（临时重定向） 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</td>
</tr>
</tbody></table>
<p>4xx（请求错误）</p>
<p>这些状态代码表示请求可能出错，妨碍了服务器的处理。</p>
<table>
<thead>
<tr>
<th>代码</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>400</td>
<td>（错误请求） 服务器不理解请求的语法。</td>
</tr>
<tr>
<td>401</td>
<td>（未授权） 请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。</td>
</tr>
<tr>
<td>403</td>
<td>（禁止） 服务器拒绝请求。</td>
</tr>
<tr>
<td>404</td>
<td>（未找到） 服务器找不到请求的网页。</td>
</tr>
<tr>
<td>405</td>
<td>（方法禁用） 禁用请求中指定的方法。</td>
</tr>
<tr>
<td>406</td>
<td>（不接受） 无法使用请求的内容特性响应请求的网页。</td>
</tr>
<tr>
<td>407</td>
<td>（需要代理授权） 此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理。</td>
</tr>
<tr>
<td>408</td>
<td>（请求超时） 服务器等候请求时发生超时。</td>
</tr>
<tr>
<td>409</td>
<td>（冲突） 服务器在完成请求时发生冲突。 服务器必须在响应中包含有关冲突的信息。</td>
</tr>
<tr>
<td>410</td>
<td>（已删除） 如果请求的资源已永久删除，服务器就会返回此响应。</td>
</tr>
<tr>
<td>411</td>
<td>（需要有效长度） 服务器不接受不含有效内容长度标头字段的请求。</td>
</tr>
<tr>
<td>412</td>
<td>（未满足前提条件） 服务器未满足请求者在请求中设置的其中一个前提条件。</td>
</tr>
<tr>
<td>413</td>
<td>（请求实体过大） 服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。</td>
</tr>
<tr>
<td>414</td>
<td>（请求的 URI 过长） 请求的 URI（通常为网址）过长，服务器无法处理。</td>
</tr>
<tr>
<td>415</td>
<td>（不支持的媒体类型） 请求的格式不受请求页面的支持。</td>
</tr>
<tr>
<td>416</td>
<td>（请求范围不符合要求） 如果页面无法提供请求的范围，则服务器会返回此状态代码。</td>
</tr>
<tr>
<td>417</td>
<td>（未满足期望值） 服务器未满足”期望”请求标头字段的要求</td>
</tr>
</tbody></table>
<p>5xx（服务器错误）</p>
<p>这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。</p>
<table>
<thead>
<tr>
<th>代码</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>500</td>
<td>（服务器内部错误） 服务器遇到错误，无法完成请求。</td>
</tr>
<tr>
<td>501</td>
<td>（尚未实施） 服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。</td>
</tr>
<tr>
<td>502</td>
<td>（错误网关） 服务器作为网关或代理，从上游服务器收到无效响应。</td>
</tr>
<tr>
<td>503</td>
<td>（服务不可用） 服务器目前无法使用（由于超载或停机维护）。 通常，这只是暂时状态。</td>
</tr>
<tr>
<td>504</td>
<td>（网关超时） 服务器作为网关或代理，但是没有及时从上游服务器收到请求。</td>
</tr>
<tr>
<td>505</td>
<td>（HTTP 版本不受支持） 服务器不支持请求中所用的 HTTP 协议版本。</td>
</tr>
</tbody></table>
<h4 id="HTTP头部信息"><a href="#HTTP头部信息" class="headerlink" title="HTTP头部信息"></a>HTTP头部信息</h4><h5 id="Request-Header"><a href="#Request-Header" class="headerlink" title="Request Header"></a>Request Header</h5><p>Accept请求报头域，用于指定客户端接收哪些类型的信息。</p>
<p>Accept-Encoding请求报头域，用于指定客户端可接受的内容编码。</p>
<p>Accept-Language请求报头域，类似Accept，但是它用于指定一种自然语言。</p>
<p>Connection报头域允许发送用于指定连接的选项。</p>
<p>Cookie辨别用户身份、进行 session 跟踪而储存在用户本地终端上的数据（通常经过加密）</p>
<p>Host头域，用于指定请求资源的intenet主机和端口号，必须表示请求URL的原始服务器或网关的位置。</p>
<p>User-Agent头域，里面包含发出请求的用户信息，其中有使用浏览器的型号，版本和操作系统的信息。这个头域经常用来作为反爬虫的措施。</p>
<h5 id="Response-Header"><a href="#Response-Header" class="headerlink" title="Response Header"></a>Response Header</h5><p>Cache-Contorl用于指定缓存指定，缓存指令是单向的，且是独立的。</p>
<p>Content-Type 实体报头域用于指明发送给接收者的实体正文的媒体类型。</p>
<p>Date表示消息产生的日期和时间</p>
<p>Expires-CT实体报头域给出响应过期日期和时间。（用来查看缓存过期时间）</p>
<p>Last-Modified实体报头域用于指示资源的最后修改日期和时间。</p>
<p>Transfer-Encoding：chunked表示输出的内容长度不能确定</p>
<h3 id="urllib"><a href="#urllib" class="headerlink" title="urllib"></a>urllib</h3><p>参考链接：<code>https://cloud.tencent.com/developer/news/207605</code><br><code>https://docs.python.org/3/library/urllib.request.html</code></p>
<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>Python3中urllib是一个URL处理包，这个包中集合了一些处理URL的模块，包括了request模块、error模块、parse模块和robotparser模块。</p>
<ul>
<li>urllib.request模块是用来打开和读取URL的；</li>
<li>urllib.error模块包含一些有urllib.request产生 的错误，可以使用try进行捕捉处理；</li>
<li>urllib.parse模块包含了一些解析URLs的方法；</li>
<li>urllib.robotparser模块用来解析robots.txt文本文件.它提供了一个单独的RobotFileParser类，通过该类提供的can_fetch()方法测试爬虫是否可以下载一个页面。</li>
</ul>
<h4 id="request"><a href="#request" class="headerlink" title="request"></a>request</h4><h5 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h5><p>urllib.request.urlopen(url) 可以直接打开url地址，但是如果需要执行更复杂的操作，比如增加HTTP报头，则必须创建一个Request实例来作为urlopen()的参数，而需要访问的url地址则作为Request实例的参数。</p>
<p>urllib.request.Request(url, data=None, headers={}, origin_req_host=None, unverifiable=False, method=None)</p>
<p>Request实例参数</p>
<ul>
<li>data（默认为空）：是伴随url提交的数据（比如post的数据），同时HTTP请求将从“GET”方式改为“POST”方式。</li>
<li>headers（默认为空）：是一个字典，包含了需要发送的HTTP报头的键值对。<ul>
<li>User-Agent伪装成公认的浏览器</li>
<li>调用Request.add_header() 添加/修改一个特定的header</li>
<li>调用Request.get_header()来查看已有的header。</li>
</ul>
</li>
</ul>
<p>基本教程示例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line"><span class="comment"># chrome 的 User-Agent，包含在 header里</span></span><br><span class="line">header = &#123;<span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构造Request请求 返回&lt;urllib.request.Request object at 0x02C4C450&gt;</span></span><br><span class="line">request = urllib.request.Request(<span class="string">&quot;http://www.baidu.com/&quot;</span>, headers = header)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用Request.add_header() 添加/修改一个特定的header</span></span><br><span class="line">request.add_header(<span class="string">&quot;Connection&quot;</span>, <span class="string">&quot;keep-alive&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 向服务器发送请求 返回&lt;http.client.HTTPResponse object at 0x09135850&gt;</span></span><br><span class="line">response = urllib.request.urlopen(request)</span><br><span class="line"></span><br><span class="line">html = response.read().decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(html)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">request类Request方法常用的内置方法</span><br><span class="line"></span><br><span class="line">Request.add_data(data)  设置data参数，如果一开始创建的时候没有给data参数，那么可以使用该方法追加data 参数</span><br><span class="line"></span><br><span class="line">Request.get_method() 返回HTTP请求方法，一般返回GET或是POST</span><br><span class="line"></span><br><span class="line">Request.has_data() 查看是否设置了data参数</span><br><span class="line"></span><br><span class="line">Request.get_data() 获取data参数的数据</span><br><span class="line"></span><br><span class="line">Request.add_header(key, val) 添加头部信息，key为头域名，val为域值</span><br><span class="line"></span><br><span class="line">Request.get_full_url() 获取请求的完整url</span><br><span class="line"></span><br><span class="line">Request.get_host() 返回请求url的host（主域名）</span><br><span class="line"></span><br><span class="line">Request.set_proxy(host, type) 设置代理，第一个参数是代理ip和端口，第二个参数是代理类型（http/https)</span><br></pre></td></tr></table></figure>

<h5 id="微博登录示例"><a href="#微博登录示例" class="headerlink" title="微博登录示例"></a>微博登录示例</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request, parse</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Login to weibo.cn...&#x27;</span>)</span><br><span class="line">email = <span class="built_in">input</span>(<span class="string">&#x27;Email: &#x27;</span>)</span><br><span class="line">passwd = <span class="built_in">input</span>(<span class="string">&#x27;Password: &#x27;</span>)</span><br><span class="line">login_data = parse.urlencode([</span><br><span class="line">    (<span class="string">&#x27;username&#x27;</span>, email),</span><br><span class="line">    (<span class="string">&#x27;password&#x27;</span>, passwd),</span><br><span class="line">    (<span class="string">&#x27;entry&#x27;</span>, <span class="string">&#x27;mweibo&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;client_id&#x27;</span>, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;savestate&#x27;</span>, <span class="string">&#x27;1&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;ec&#x27;</span>, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;pagerefer&#x27;</span>, <span class="string">&#x27;https://passport.weibo.cn/signin/welcome?entry=mweibo&amp;r=http%3A%2F%2Fm.weibo.cn%2F&#x27;</span>)</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">req = request.Request(<span class="string">&#x27;https://passport.weibo.cn/sso/login&#x27;</span>)</span><br><span class="line">req.add_header(<span class="string">&#x27;Origin&#x27;</span>, <span class="string">&#x27;https://passport.weibo.cn&#x27;</span>)</span><br><span class="line">req.add_header(<span class="string">&#x27;User-Agent&#x27;</span>, <span class="string">&#x27;Mozilla/6.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/8.0 Mobile/10A5376e Safari/8536.25&#x27;</span>)</span><br><span class="line">req.add_header(<span class="string">&#x27;Referer&#x27;</span>, <span class="string">&#x27;https://passport.weibo.cn/signin/login?entry=mweibo&amp;res=wel&amp;wm=3349&amp;r=http%3A%2F%2Fm.weibo.cn%2F&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> request.urlopen(req, data=login_data.encode(<span class="string">&#x27;utf-8&#x27;</span>)) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Status:&#x27;</span>, f.status, f.reason)</span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> f.getheaders():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s: %s&#x27;</span> % (k, v))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Data:&#x27;</span>, f.read().decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure>

<h3 id="Beautiful-Soup4"><a href="#Beautiful-Soup4" class="headerlink" title="Beautiful Soup4"></a>Beautiful Soup4</h3><p>参考链接:<code>https://beautifulsoup.readthedocs.io/zh_CN/latest/</code><br><code>https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.html</code></p>
<h4 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h4><p>Beautiful Soup 是一个可以从HTML或XML文件中提取数据的Python库.它能够通过你喜欢的转换器实现惯用的文档导航,查找,修改文档的方式.</p>
<h4 id="对象的种类"><a href="#对象的种类" class="headerlink" title="对象的种类"></a>对象的种类</h4><p>得到BeautifulSoup对象 并按标准格式输出<br><code>soup = BeautifulSoup(html, &quot;html.parser&quot;)</code></p>
<p>Beautiful Soup将复杂HTML文档转换成一个复杂的树形结构,每个节点都是Python对象,所有对象可以归纳为4种:  BeautifulSoup,Tag, NavigableString, Comment</p>
<h5 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h5><p>BeautifulSoup 对象表示的是一个文档的全部内容.大部分时候,可以把它当作 Tag 对象</p>
<h5 id="Tag"><a href="#Tag" class="headerlink" title="Tag"></a>Tag</h5><p>Tag子节点 对象与XML或HTML原生文档中的tag相同:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup = BeautifulSoup(<span class="string">&#x27;&lt;b class=&quot;boldest&quot;&gt;Extremely bold&lt;/b&gt;&#x27;</span>)</span><br><span class="line">tag = soup.b</span><br><span class="line"><span class="built_in">type</span>(tag)</span><br><span class="line"><span class="comment"># &lt;class &#x27;bs4.element.Tag&#x27;&gt;</span></span><br><span class="line">tag.name</span><br><span class="line"><span class="comment"># u&#x27;b&#x27;</span></span><br><span class="line"></span><br><span class="line">tag[<span class="string">&#x27;class&#x27;</span>]</span><br><span class="line"><span class="comment"># u&#x27;boldest&#x27;</span></span><br><span class="line">tag.attrs</span><br><span class="line"><span class="comment"># &#123;u&#x27;class&#x27;: u&#x27;boldest&#x27;&#125;</span></span><br><span class="line">tag[<span class="string">&#x27;class&#x27;</span>] = <span class="string">&#x27;verybold&#x27;</span></span><br><span class="line">tag[<span class="string">&#x27;id&#x27;</span>] = <span class="number">1</span></span><br><span class="line">tag</span><br><span class="line"><span class="comment"># &lt;blockquote class=&quot;verybold&quot; id=&quot;1&quot;&gt;Extremely bold&lt;/blockquote&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> tag[<span class="string">&#x27;class&#x27;</span>]</span><br><span class="line"><span class="keyword">del</span> tag[<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">tag</span><br><span class="line"><span class="comment"># &lt;blockquote&gt;Extremely bold&lt;/blockquote&gt;</span></span><br><span class="line"></span><br><span class="line">tag[<span class="string">&#x27;class&#x27;</span>]</span><br><span class="line"><span class="comment"># KeyError: &#x27;class&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(tag.get(<span class="string">&#x27;class&#x27;</span>))</span><br><span class="line"><span class="comment"># None</span></span><br></pre></td></tr></table></figure>

<p>节点操作</p>
<p>soup.contents 将子节点以列表的方式输出 返回类型 list</p>
<p>soup.children 将子节点以可迭代列表的方式输出 返回类型 list_iterator</p>
<p>可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator</p>
<p>soup.descendants 对所有tag的子孙节点进行递归循环 返回类型 generator</p>
<p>父节点 .parents 递归得到所有父辈节点 返回类型 generator</p>
<p>.previous_sibling .next_sibling 查询兄弟节点</p>
<h5 id="NavigableString"><a href="#NavigableString" class="headerlink" title="NavigableString"></a>NavigableString</h5><p>字符串常被包含在tag内.Beautiful Soup用 NavigableString 类来包装tag中的字符串:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tag.string</span><br><span class="line"><span class="comment"># u&#x27;Extremely bold&#x27;</span></span><br><span class="line"><span class="built_in">type</span>(tag.string)</span><br><span class="line"><span class="comment"># &lt;class &#x27;bs4.element.NavigableString&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不能编辑，但可以直接替换</span></span><br><span class="line">tag.string.replace_with(<span class="string">&quot;No longer bold&quot;</span>)</span><br><span class="line">tag</span><br><span class="line"><span class="comment"># &lt;blockquote&gt;No longer bold&lt;/blockquote&gt;</span></span><br></pre></td></tr></table></figure>

<p>字符串操作</p>
<p>tag中包含多个字符串 可以用.strings循环获取 返回 generator<br> .stripped_strings获取删除空格和空行后的内容</p>
<h5 id="Comment"><a href="#Comment" class="headerlink" title="Comment"></a>Comment</h5><p>Comment 对象是一个特殊类型的 NavigableString 对象,<br>html和xml中的注释部分</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">markup = <span class="string">&quot;&lt;b&gt;&lt;!--Hey, buddy. Want to buy a used parser?--&gt;&lt;/b&gt;&quot;</span></span><br><span class="line">soup = BeautifulSoup(markup)</span><br><span class="line">comment = soup.b.string</span><br><span class="line"><span class="built_in">type</span>(comment)</span><br><span class="line"><span class="comment"># &lt;class &#x27;bs4.element.Comment&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="搜索文档树"><a href="#搜索文档树" class="headerlink" title="搜索文档树"></a>搜索文档树</h4><p>find(self, name=None, attrs={}, recursive=True, text=None,**kwargs)<br>find_all(self, name=None, attrs={}, recursive=True, text=None,limit=None, **kwargs)</p>
<h5 id="name"><a href="#name" class="headerlink" title="name"></a>name</h5><p>name 参数可以查找所有名字为 name 的tag,字符串对象会被自动忽略掉</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.find_all(<span class="string">&quot;title&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br></pre></td></tr></table></figure>

<h5 id="attrs"><a href="#attrs" class="headerlink" title="attrs"></a>attrs</h5><p>根据属性查找</p>
<p>其中，class 属于python中的保留字，通过class_ 搜索</p>
<p>string 搜索文档中字符串的内容</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.find_all(<span class="built_in">id</span>=<span class="string">&#x27;link2&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(href=re.<span class="built_in">compile</span>(<span class="string">&quot;elsie&quot;</span>))</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在文档树中查找所有包含 id 属性的tag,无论 id 的值是什么</span></span><br><span class="line">soup.find_all(<span class="built_in">id</span>=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(href=re.<span class="built_in">compile</span>(<span class="string">&quot;elsie&quot;</span>), <span class="built_in">id</span>=<span class="string">&#x27;link1&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;three&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(<span class="string">&quot;a&quot;</span>, class_=<span class="string">&quot;sister&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(string=<span class="string">&quot;Elsie&quot;</span>)</span><br><span class="line"><span class="comment"># [u&#x27;Elsie&#x27;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(string=[<span class="string">&quot;Tillie&quot;</span>, <span class="string">&quot;Elsie&quot;</span>, <span class="string">&quot;Lacie&quot;</span>])</span><br><span class="line"><span class="comment"># [u&#x27;Elsie&#x27;, u&#x27;Lacie&#x27;, u&#x27;Tillie&#x27;]</span></span><br><span class="line"></span><br><span class="line">soup.find_all(string=re.<span class="built_in">compile</span>(<span class="string">&quot;Dormouse&quot;</span>))</span><br><span class="line">[<span class="string">u&quot;The Dormouse&#x27;s story&quot;</span>, <span class="string">u&quot;The Dormouse&#x27;s story&quot;</span>]</span><br><span class="line"></span><br><span class="line">soup.find_all(<span class="string">&quot;a&quot;</span>, string=<span class="string">&quot;Elsie&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.find_all(<span class="string">&quot;a&quot;</span>, limit=<span class="number">2</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br></pre></td></tr></table></figure>

<h5 id="recursive"><a href="#recursive" class="headerlink" title="recursive"></a>recursive</h5><p>只搜索tag的子节点 recursive=False</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.html.find_all(<span class="string">&quot;title&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.html.find_all(<span class="string">&quot;title&quot;</span>, recursive=<span class="literal">False</span>)</span><br><span class="line"><span class="comment"># []</span></span><br></pre></td></tr></table></figure>

<h5 id="直接调用tag"><a href="#直接调用tag" class="headerlink" title="直接调用tag"></a>直接调用tag</h5><p>find_all 最常用 简写方法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.find_all(<span class="string">&quot;a&quot;</span>)</span><br><span class="line">soup(<span class="string">&quot;a&quot;</span>)</span><br><span class="line"></span><br><span class="line">soup.title.find_all(string=<span class="literal">True</span>)</span><br><span class="line">soup.title(string=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>

<h4 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> .select() 方法中传入字符串参数, 即可使用CSS选择器的语法找到tag:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;title&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;p:nth-of-type(3)&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;]</span></span><br><span class="line">通过tag标签逐层查找:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;body a&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot;  id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;html head title&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br><span class="line">找到某个tag标签下的直接子标签 [<span class="number">6</span>] :</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;head &gt; title&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;p &gt; a&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot;  id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;p &gt; a:nth-of-type(2)&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;p &gt; #link1&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;body &gt; a&quot;</span>)</span><br><span class="line"><span class="comment"># []</span></span><br><span class="line">找到兄弟节点标签:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;#link1 ~ .sister&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot;id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;#link1 + .sister&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br><span class="line">通过CSS的类名查找:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;.sister&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;[class~=sister]&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line">通过tag的<span class="built_in">id</span>查找:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;#link1&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;a#link2&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br><span class="line">同时用多种CSS选择器查询元素:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&quot;#link1,#link2&quot;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span></span><br><span class="line">通过是否存在某个属性来查找:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&#x27;a[href]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line">通过属性的值来查找:</span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&#x27;a[href=&quot;http://example.com/elsie&quot;]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&#x27;a[href^=&quot;http://example.com/&quot;]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&#x27;a[href$=&quot;tillie&quot;]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.select(<span class="string">&#x27;a[href*=&quot;.com/el&quot;]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span></span><br><span class="line">通过语言设置来查找:</span><br><span class="line"></span><br><span class="line">multilingual_markup = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"> &lt;p lang=&quot;en&quot;&gt;Hello&lt;/p&gt;</span></span><br><span class="line"><span class="string"> &lt;p lang=&quot;en-us&quot;&gt;Howdy, y&#x27;all&lt;/p&gt;</span></span><br><span class="line"><span class="string"> &lt;p lang=&quot;en-gb&quot;&gt;Pip-pip, old fruit&lt;/p&gt;</span></span><br><span class="line"><span class="string"> &lt;p lang=&quot;fr&quot;&gt;Bonjour mes amis&lt;/p&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">multilingual_soup = BeautifulSoup(multilingual_markup)</span><br><span class="line">multilingual_soup.select(<span class="string">&#x27;p[lang|=en]&#x27;</span>)</span><br><span class="line"><span class="comment"># [&lt;p lang=&quot;en&quot;&gt;Hello&lt;/p&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;p lang=&quot;en-us&quot;&gt;Howdy, y&#x27;all&lt;/p&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;p lang=&quot;en-gb&quot;&gt;Pip-pip, old fruit&lt;/p&gt;]</span></span><br><span class="line">返回查找到的元素的第一个</span><br><span class="line"></span><br><span class="line">soup.select_one(<span class="string">&quot;.sister&quot;</span>)</span><br><span class="line"><span class="comment"># &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;</span></span><br><span class="line">对于熟悉CSS选择器语法的人来说这是个非常方便的方法.Beautiful Soup也支持CSS选择器API, 如果你仅仅需要CSS选择器的功能,那么直接使用 lxml 也可以, 而且速度更快,支持更多的CSS选择器语法,但Beautiful Soup整合了CSS选择器的语法和自身方便使用API.</span><br></pre></td></tr></table></figure>

<h3 id="pdfkit"><a href="#pdfkit" class="headerlink" title="pdfkit"></a>pdfkit</h3><p>使用pdfkit依赖 wkhtmltopdf 需要在本地path下配置</p>
<p>或本地path未配置</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pdfkit</span><br><span class="line"><span class="comment"># 配置path后 可以不写</span></span><br><span class="line">path_wk = <span class="string">r&#x27;C:\Program Files\wkhtmltopdf\bin\wkhtmltopdf.exe&#x27;</span></span><br><span class="line"><span class="comment"># wkhtmltopdf安装位置</span></span><br><span class="line">config = pdfkit.configuration(wkhtmltopdf=path_wk)</span><br><span class="line">pdfkit.from_string(html, file_name, options=options, configuration=config)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pdfkit</span><br><span class="line">pdfkit.from_url(<span class="string">&#x27;http://google.com&#x27;</span>, <span class="string">&#x27;out.pdf&#x27;</span>)</span><br><span class="line">pdfkit.from_file(<span class="string">&#x27;test.html&#x27;</span>, <span class="string">&#x27;out.pdf&#x27;</span>)</span><br><span class="line">pdfkit.from_string(<span class="string">&#x27;Hello!&#x27;</span>, <span class="string">&#x27;out.pdf&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>cmd下执行<code>wkhtmltopdf &quot;www.baidu.com&quot; &quot;out.pdf&quot;</code></p>
<h2 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h2><h2 id="Python标准异常"><a href="#Python标准异常" class="headerlink" title="Python标准异常"></a>Python标准异常</h2><table>
<thead>
<tr>
<th>名称</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>AssertionError</td>
<td>断言语句（assert）失败</td>
</tr>
<tr>
<td>AttributeError</td>
<td>尝试访问未知的对象属性</td>
</tr>
<tr>
<td>EOFError</td>
<td>用户输入文件末尾标志EOF（Ctrl+d）</td>
</tr>
<tr>
<td>FloatingPointError</td>
<td>浮点计算错误</td>
</tr>
<tr>
<td>GeneratorExit</td>
<td>generator.close()方法被调用的时候</td>
</tr>
<tr>
<td>ImportError</td>
<td>导入模块失败的时候</td>
</tr>
<tr>
<td>IndexError</td>
<td>索引超出序列的范围</td>
</tr>
<tr>
<td>KeyError</td>
<td>字典中查找一个不存在的关键字</td>
</tr>
<tr>
<td>KeyboardInterrupt</td>
<td>用户输入中断键（Ctrl+c）</td>
</tr>
<tr>
<td>MemoryError</td>
<td>内存溢出（可通过删除对象释放内存）</td>
</tr>
<tr>
<td>NameError</td>
<td>尝试访问一个不存在的变量</td>
</tr>
<tr>
<td>NotImplementedError</td>
<td>尚未实现的方法</td>
</tr>
<tr>
<td>OSError</td>
<td>操作系统产生的异常（例如打开一个不存在的文件）</td>
</tr>
<tr>
<td>OverflowError</td>
<td>数值运算超出最大限制</td>
</tr>
<tr>
<td>ReferenceError</td>
<td>弱引用（weak reference）试图访问一个已经被垃圾回收机制回收了的对象</td>
</tr>
<tr>
<td>RuntimeError</td>
<td>一般的运行时错误</td>
</tr>
<tr>
<td>StopIteration</td>
<td>迭代器没有更多的值</td>
</tr>
<tr>
<td>SyntaxError</td>
<td>Python的语法错误</td>
</tr>
<tr>
<td>IndentationError</td>
<td>缩进错误</td>
</tr>
<tr>
<td>TabError</td>
<td>Tab和空格混合使用</td>
</tr>
<tr>
<td>SystemError</td>
<td>Python编译器系统错误</td>
</tr>
<tr>
<td>SystemExit</td>
<td>Python编译器进程被关闭</td>
</tr>
<tr>
<td>TypeError</td>
<td>不同类型间的无效操作</td>
</tr>
<tr>
<td>UnboundLocalError</td>
<td>访问一个未初始化的本地变量（NameError的子类）</td>
</tr>
<tr>
<td>UnicodeError</td>
<td>Unicode相关的错误（ValueError的子类）</td>
</tr>
<tr>
<td>UnicodeEncodeError</td>
<td>Unicode编码时的错误（UnicodeError的子类）</td>
</tr>
<tr>
<td>UnicodeDecodeError</td>
<td>Unicode解码时的错误（UnicodeError的子类）</td>
</tr>
<tr>
<td>UnicodeTranslateError</td>
<td>Unicode转换时的错误（UnicodeError的子类）</td>
</tr>
<tr>
<td>ValueError</td>
<td>传入无效的参数</td>
</tr>
<tr>
<td>ZeroDivisionError</td>
<td>除数为零</td>
</tr>
</tbody></table>
<p>以下是 Python 内置异常类的层次结构：<br>BaseException<br>+– SystemExit<br>+– KeyboardInterrupt<br>+– GeneratorExit<br>+– Exception<br>      +– StopIteration<br>      +– ArithmeticError<br>      |    +– FloatingPointError<br>      |    +– OverflowError<br>      |    +– ZeroDivisionError<br>      +– AssertionError<br>      +– AttributeError<br>      +– BufferError<br>      +– EOFError<br>      +– ImportError<br>      +– LookupError<br>      |    +– IndexError<br>      |    +– KeyError<br>      +– MemoryError<br>      +– NameError<br>      |    +– UnboundLocalError<br>      +– OSError<br>      |    +– BlockingIOError<br>      |    +– ChildProcessError<br>      |    +– ConnectionError<br>      |    |    +– BrokenPipeError<br>      |    |    +– ConnectionAbortedError<br>      |    |    +– ConnectionRefusedError<br>      |    |    +– ConnectionResetError<br>      |    +– FileExistsError<br>      |    +– FileNotFoundError<br>      |    +– InterruptedError<br>      |    +– IsADirectoryError<br>      |    +– NotADirectoryError<br>      |    +– PermissionError<br>      |    +– ProcessLookupError<br>      |    +– TimeoutError<br>      +– ReferenceError<br>      +– RuntimeError<br>      |    +– NotImplementedError<br>      +– SyntaxError<br>      |    +– IndentationError<br>      |         +– TabError<br>      +– SystemError<br>      +– TypeError<br>      +– ValueError<br>      |    +– UnicodeError<br>      |         +– UnicodeDecodeError<br>      |         +– UnicodeEncodeError<br>      |         +– UnicodeTranslateError<br>      +– Warning<br>           +– DeprecationWarning<br>           +– PendingDeprecationWarning<br>           +– RuntimeWarning<br>           +– SyntaxWarning<br>           +– UserWarning<br>           +– FutureWarning<br>           +– ImportWarning<br>           +– UnicodeWarning<br>           +– BytesWarning<br>           +– ResourceWarning</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>learn</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>丑陋的中国人</title>
    <url>/2018/12/14/%E4%B8%91%E9%99%8B%E7%9A%84%E4%B8%AD%E5%9B%BD%E4%BA%BA/</url>
    <content><![CDATA[<h1 id="丑陋的中国人"><a href="#丑陋的中国人" class="headerlink" title="丑陋的中国人"></a>丑陋的中国人</h1><p>为什么喧哗，因为没有安全感<br>中国人最拿手的就是内斗<br>永远带着面具生活<br>中国人喜欢讲大话，喜欢讲空话，喜欢讲假话，喜欢讲谎话，更喜欢讲毒话。<br>狭窄的心胸，没有包容性的性格，造成了两个极端。一方面绝对的自卑，成为了奴才，像团狗屎；另一方面绝对的自傲，成为主人，觉得其他人都是狗屎；唯独，没有自尊。<br>中国人是天下最容易膨胀的民族，为什么容易膨胀？因为中国人“器小易盈”，见识太少，心胸太窄，稍稍有一点气候，就认为天地虽大，已装不下他。<br>神经质的恐惧，是培养暴君最好的温床，所以中国的暴君永远不会绝迹。<br>中国人喜欢做官，这是大家所公认的，谁都难以反驳。只要有人给他做官，他就会服服帖帖地把民族意识，和人性尊严，全部交出来。<br>中国人太聪明，太聪明的极致一定是太自私，凡是不自私的行为，不自私的想法，都被讥笑为傻子</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Django</title>
    <url>/2019/01/01/Django/</url>
    <content><![CDATA[<h1 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h1><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><h3 id="软件列表"><a href="#软件列表" class="headerlink" title="软件列表"></a>软件列表</h3><p>python mysql navicat</p>
<h4 id="安装-mysql8-0"><a href="#安装-mysql8-0" class="headerlink" title="安装 mysql8.0"></a>安装 mysql8.0</h4><p>下载<a class="link"   href="https://dev.mysql.com/downloads/mysql/" >链接<i class="fas fa-external-link-alt"></i></a></p>
<p>安装<a class="link"   href="https://blog.csdn.net/qq_37350706/article/details/81707862" >教程<i class="fas fa-external-link-alt"></i></a></p>
<p>cmd 下登录 mysql <code>mysql -uroot -p</code></p>
<p>修改密码<code>ALTER USER &quot;root&quot;@&quot;localhost&quot; IDENTIFIED BY &quot;你的新密码&quot;;</code></p>
<h3 id="python-虚拟环境"><a href="#python-虚拟环境" class="headerlink" title="python 虚拟环境"></a>python 虚拟环境</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install virtualenv  安装模块虚拟环境模块</span><br><span class="line"></span><br><span class="line">pip install virtualenvwrapper-win  安装环境管理模块</span><br><span class="line"></span><br><span class="line">mkvirtualenv testenv  新建环境在Administrator/Envs/</span><br><span class="line"></span><br><span class="line">mkvirtualenv --python=python版本的python.exe路径 虚拟环境名称   指定版本</span><br><span class="line"></span><br><span class="line">rmvirtualenv &lt;name&gt; 删除环境</span><br><span class="line"></span><br><span class="line">workon 查看当前虚拟环境</span><br><span class="line"></span><br><span class="line">workon &lt;name&gt; 进入虚拟环境 (在cmd下运行)</span><br><span class="line"></span><br><span class="line">deactivate退出环境</span><br></pre></td></tr></table></figure>

<h3 id="安装依赖的包"><a href="#安装依赖的包" class="headerlink" title="安装依赖的包"></a>安装依赖的包</h3><p>替换国内镜像源<a class="link"   href="https://cloud.tencent.com/developer/article/1520882" >教程<i class="fas fa-external-link-alt"></i></a></p>
<p>导出 pip freeze &gt;r.txt</p>
<p>新建 r.txt 文件 pip install -r r.txt 安装</p>
<h3 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h3><p>在 settings.py 文件中配置</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">LANGUAGE_CODE = <span class="string">&#x27;zh-hans&#x27;</span></span><br><span class="line"></span><br><span class="line">TIME_ZONE = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"></span><br><span class="line">USE_I18N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_L10N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_TZ = <span class="literal">False</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="项目开始"><a href="#项目开始" class="headerlink" title="项目开始"></a>项目开始</h2><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">django-admin startproject mysite 创建django项目</span><br><span class="line">python manage.py runserver 8080 设置端口号</span><br><span class="line">python manage.py runserver 0.0.0.0:8080  监听所有公共ip</span><br><span class="line">python manage.py startapp &lt;name&gt; 创建应用后在INSTALLED_APPS中增加 &lt;name&gt;</span><br></pre></td></tr></table></figure>

<h3 id="搭建目录文件"><a href="#搭建目录文件" class="headerlink" title="搭建目录文件"></a>搭建目录文件</h3><p>apps 存放应用列表 同时在 setting 中增加 <code>sys.path.insert(0, os.path.join(BASE_DIR, &#39;apps&#39;))</code></p>
<p>log 存放日志</p>
<p>media 存放上传文件 增加 <code>MEDIA_URL = &#39;/media/&#39; MEDIA_ROOT = os.path.join(BASE_DIR, &#39;media&#39;)</code></p>
<p>static 全局静态文件 js css 静态图片 STATIC_URL 后增加<code>STATICFILES_DIRS = [os.path.join(BASE_DIR, &#39;static&#39;)]</code></p>
<p>templates 网页模板 在 TEMPLATES 下的 DIRS 中增加 <code>os.path.join(BASE_DIR, &#39;templates&#39;)</code></p>
<h3 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h3><p>先配置 MySQLdb<a class="link"   href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysql-python" >驱动<i class="fas fa-external-link-alt"></i></a> 下载对应版本后</p>
<p>虚拟环境下 pip install xx.whl pip install mysqlclient</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;MOOC&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>: <span class="string">&#x27;1234&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>python manage.py makemigrations</p>
<p>python manage.py migrate</p>
<p>迁移无效时，先删除之前的 makemigrations 生成的文件</p>
<h3 id="创建超级用户"><a href="#创建超级用户" class="headerlink" title="创建超级用户"></a>创建超级用户</h3><p><code>python manage.py createsuperuser</code></p>
<p>wukong 1234</p>
<h2 id="应用开发"><a href="#应用开发" class="headerlink" title="应用开发"></a>应用开发</h2><h3 id="models"><a href="#models" class="headerlink" title="models"></a>models</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserMessage</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">u&#x27;用户名&#x27;</span>)  <span class="comment"># 对字段的注释</span></span><br><span class="line">    email = models.EmailField(verbose_name=<span class="string">u&#x27;邮箱&#x27;</span>)</span><br><span class="line">    address = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u&#x27;地址&#x27;</span>)</span><br><span class="line">    message = models.CharField(max_length=<span class="number">500</span>, verbose_name=<span class="string">u&#x27;留言信息&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u&#x27;用户留言信息&#x27;</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">        <span class="comment"># db_table=&#x27;user_message&#x27;  # 指定表名</span></span><br><span class="line">        <span class="comment"># ordering = &#x27;-id&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="用户的登录和注册"><a href="#用户的登录和注册" class="headerlink" title="用户的登录和注册"></a>用户的登录和注册</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重定义验证方式</span></span><br><span class="line">AUTHENTICATION_BACKENDS = (</span><br><span class="line">    <span class="string">&#x27;users.views.CustomBacked&#x27;</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>安装 <code>django-simple-captcha</code> APPS 下增加 captcha</p>
<h2 id="附加包开发"><a href="#附加包开发" class="headerlink" title="附加包开发"></a>附加包开发</h2><h3 id="xadmin"><a href="#xadmin" class="headerlink" title="xadmin"></a>xadmin</h3><p>下载 xadmin <a class="link"   href="https://github.com/sshwsfc/xadmin" >链接<i class="fas fa-external-link-alt"></i></a></p>
<p>新建 extra_apps 文件夹 将 xadmin 复制到其中 注册 xadmin 和 crispy_forms 将 extra_apps 加入系统路径</p>
<p>配置后需要更新数据库</p>
<p>个性化配置</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseSetting</span>(<span class="params"><span class="built_in">object</span></span>):</span>  <span class="comment"># 设置主题</span></span><br><span class="line">    enable_themes = <span class="literal">True</span></span><br><span class="line">    use_bootswatch = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GlobalSettings</span>(<span class="params"><span class="built_in">object</span></span>):</span>  <span class="comment"># 设置标题</span></span><br><span class="line">    site_title = <span class="string">&#x27;WMOOC&#x27;</span></span><br><span class="line">    site_footer = <span class="string">&#x27;Wukong&#x27;</span></span><br><span class="line">    menu_style = <span class="string">&#x27;accordion&#x27;</span>  <span class="comment"># 折叠目录</span></span><br><span class="line"></span><br><span class="line">xadmin.site.register(views.BaseAdminView, BaseSetting)</span><br><span class="line">xadmin.site.register(views.CommAdminView, GlobalSettings)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>django 主题失败解决方案 修改<code>/xadmin/plugins/themes.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> httplib2</span><br><span class="line"><span class="keyword">from</span> django.template <span class="keyword">import</span> loader</span><br><span class="line"><span class="keyword">from</span> django.core.cache <span class="keyword">import</span> cache</span><br><span class="line"><span class="keyword">from</span> django.utils <span class="keyword">import</span> six</span><br><span class="line"><span class="keyword">from</span> django.utils.translation <span class="keyword">import</span> ugettext <span class="keyword">as</span> _</span><br><span class="line"><span class="keyword">from</span> xadmin.sites <span class="keyword">import</span> site</span><br><span class="line"><span class="keyword">from</span> xadmin.models <span class="keyword">import</span> UserSettings</span><br><span class="line"><span class="keyword">from</span> xadmin.views <span class="keyword">import</span> BaseAdminPlugin, BaseAdminView</span><br><span class="line"><span class="keyword">from</span> xadmin.util <span class="keyword">import</span> static, json</span><br><span class="line"><span class="keyword">import</span> six</span><br><span class="line"><span class="keyword">if</span> six.PY2:</span><br><span class="line">    <span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line">THEME_CACHE_KEY = <span class="string">&#x27;xadmin_themes&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThemePlugin</span>(<span class="params">BaseAdminPlugin</span>):</span></span><br><span class="line"></span><br><span class="line">    enable_themes = <span class="literal">False</span></span><br><span class="line">    <span class="comment"># &#123;&#x27;name&#x27;: &#x27;Blank Theme&#x27;, &#x27;description&#x27;: &#x27;...&#x27;, &#x27;css&#x27;: &#x27;http://...&#x27;, &#x27;thumbnail&#x27;: &#x27;...&#x27;&#125;</span></span><br><span class="line">    user_themes = <span class="literal">None</span></span><br><span class="line">    use_bootswatch = <span class="literal">False</span></span><br><span class="line">    default_theme = static(<span class="string">&#x27;xadmin/css/themes/bootstrap-xadmin.css&#x27;</span>)</span><br><span class="line">    bootstrap2_theme = static(<span class="string">&#x27;xadmin/css/themes/bootstrap-theme.css&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">init_request</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.enable_themes</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_theme</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.user:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">return</span> UserSettings.objects.get(user=self.user, key=<span class="string">&quot;site-theme&quot;</span>).value</span><br><span class="line">            <span class="keyword">except</span> Exception:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;_theme&#x27;</span> <span class="keyword">in</span> self.request.COOKIES:</span><br><span class="line">            <span class="keyword">if</span> six.PY2:</span><br><span class="line">                func = urllib.unquote</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                func = urllib.parse.unquote</span><br><span class="line">            <span class="keyword">return</span> func(self.request.COOKIES[<span class="string">&#x27;_theme&#x27;</span>])</span><br><span class="line">        <span class="keyword">return</span> self.default_theme</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_context</span>(<span class="params">self, context</span>):</span></span><br><span class="line">        context[<span class="string">&#x27;site_theme&#x27;</span>] = self._get_theme()</span><br><span class="line">        <span class="keyword">return</span> context</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Media</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_media</span>(<span class="params">self, media</span>):</span></span><br><span class="line">        <span class="keyword">return</span> media + self.vendor(<span class="string">&#x27;jquery-ui-effect.js&#x27;</span>, <span class="string">&#x27;xadmin.plugin.themes.js&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Block Views</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">block_top_navmenu</span>(<span class="params">self, context, nodes</span>):</span></span><br><span class="line"></span><br><span class="line">        themes = [</span><br><span class="line">            &#123;<span class="string">&#x27;name&#x27;</span>: _(<span class="string">u&quot;Default&quot;</span>), <span class="string">&#x27;description&#x27;</span>: _(<span class="string">u&quot;Default bootstrap theme&quot;</span>), <span class="string">&#x27;css&#x27;</span>: self.default_theme&#125;,</span><br><span class="line">            &#123;<span class="string">&#x27;name&#x27;</span>: _(<span class="string">u&quot;Bootstrap2&quot;</span>), <span class="string">&#x27;description&#x27;</span>: _(<span class="string">u&quot;Bootstrap 2.x theme&quot;</span>), <span class="string">&#x27;css&#x27;</span>: self.bootstrap2_theme&#125;,</span><br><span class="line">            ]</span><br><span class="line">        select_css = context.get(<span class="string">&#x27;site_theme&#x27;</span>, self.default_theme)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.user_themes:</span><br><span class="line">            themes.extend(self.user_themes)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.use_bootswatch:</span><br><span class="line">            ex_themes = cache.get(THEME_CACHE_KEY)</span><br><span class="line">            <span class="keyword">if</span> ex_themes:</span><br><span class="line">                themes.extend(json.loads(ex_themes))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ex_themes = []</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    h = httplib2.Http()</span><br><span class="line">                    resp, content = h.request(<span class="string">&quot;https://bootswatch.com/api/3.json&quot;</span>, <span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                        headers=&#123;<span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json&quot;</span>, <span class="string">&quot;User-Agent&quot;</span>: self.request.META[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>]&#125;)</span><br><span class="line">                    <span class="keyword">if</span> six.PY3:</span><br><span class="line">                        content = content.decode()</span><br><span class="line">                    watch_themes = json.loads(content)[<span class="string">&#x27;themes&#x27;</span>]</span><br><span class="line">                    ex_themes.extend([</span><br><span class="line">                        &#123;<span class="string">&#x27;name&#x27;</span>: t[<span class="string">&#x27;name&#x27;</span>], <span class="string">&#x27;description&#x27;</span>: t[<span class="string">&#x27;description&#x27;</span>],</span><br><span class="line">                            <span class="string">&#x27;css&#x27;</span>: t[<span class="string">&#x27;cssMin&#x27;</span>], <span class="string">&#x27;thumbnail&#x27;</span>: t[<span class="string">&#x27;thumbnail&#x27;</span>]&#125;</span><br><span class="line">                        <span class="keyword">for</span> t <span class="keyword">in</span> watch_themes])</span><br><span class="line">                <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                    <span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line">                cache.<span class="built_in">set</span>(THEME_CACHE_KEY, json.dumps(ex_themes), <span class="number">24</span> * <span class="number">3600</span>)</span><br><span class="line">                themes.extend(ex_themes)</span><br><span class="line"></span><br><span class="line">        nodes.append(loader.render_to_string(<span class="string">&#x27;xadmin/blocks/comm.top.theme.html&#x27;</span>, &#123;<span class="string">&#x27;themes&#x27;</span>: themes, <span class="string">&#x27;select_css&#x27;</span>: select_css&#125;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">site.register_plugin(ThemePlugin, BaseAdminView)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="template"><a href="#template" class="headerlink" title="template"></a>template</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data-url=<span class="string">&quot;&#123;&#123;MEDIA.URL&#125;&#125;&#123;&#123;course_org.image&#125;&#125;&quot;</span></span><br><span class="line"><span class="comment"># settings.py context_processors中增加</span></span><br><span class="line"><span class="comment"># 将 MEDIA.URL 注册到 html</span></span><br><span class="line">django.core.context_processors.media</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="页码"><a href="#页码" class="headerlink" title="页码"></a>页码</h3><p><code>pip install django-pure-pagination</code></p>
<p>INSTALLED_APPS=(<br>…<br>‘pure_pagination’,<br>)</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>work</tag>
        <tag>Django</tag>
      </tags>
  </entry>
  <entry>
    <title>实力至上</title>
    <url>/2019/02/04/%E5%AE%9E%E5%8A%9B%E8%87%B3%E4%B8%8A/</url>
    <content><![CDATA[<h1 id="实力至上"><a href="#实力至上" class="headerlink" title="实力至上"></a>实力至上</h1><p>什么是恶？凡是源于虚弱的东西都是恶。――F·W·尼采『反基督』</p>
<p>深藏不露是一种卓越的才能。――拉罗什富科『箴言集』NO.245</p>
<p>人是唯一会交易的动物。因为没有狗会拿骨头去交换。――亚当·斯『国富论』</p>
<p>我们不必为他人隐藏本性而感到愤怒。<br>因为你自己也在隐藏本性。<br>――拉罗什富科『箴言集』NO.11</p>
<p>他人即地狱。<br>――让-保罗·萨特『禁闭』</p>
<p>谎言分两种。<br>关于过去的事实上的谎言以及关于未来的权利上的谎言。<br>――让-雅克·卢梭『爱弥儿：论教育』</p>
<p>宁可有聪明的敌人也不要有无知的朋友。<br>——『寓言诗』</p>
<p>进入此门者当舍弃一切希望。<br>——但丁 『神曲』</p>
<p>然而，人们泛称为命运的事情却通常都是自己做出来的蠢事。<br>——叔本华 『附录与补遗：哲学短片集』</p>
<p>天才就住在疯子的楼上。<br>——叔本华 『附录与补遗：哲学短片集』</p>
<p>人注定要受自由之苦。<br>——保罗·萨特『何为存在主义』</p>
<p>说到最危险的背叛者，就是所有人自身所隐藏起来的另一面。<br>——克尔凯郭尔『爱的作为』</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Nodejs</title>
    <url>/2019/02/15/nodejs/</url>
    <content><![CDATA[<h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><h2 id="Linux设置"><a href="#Linux设置" class="headerlink" title="Linux设置"></a>Linux设置</h2><p>工欲善其事，必先利其器。开启本地虚拟机，打开deepin(国产优秀的linux系统),再通过finalshell连接</p>
<p>解决ssh无法远程连接到NAT模式的虚拟机的问题<a class="link"   href="https://blog.csdn.net/disalone201107/article/details/78411073" >方案<i class="fas fa-external-link-alt"></i></a></p>
<p>如何彻底卸载，安装和启动ssh服务<a class="link"   href="https://blog.csdn.net/qq_30770095/article/details/53516594" >方案<i class="fas fa-external-link-alt"></i></a></p>
<h2 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h2><p>NPM是随同NodeJS一起安装的包管理工具，下载第三方包或命令行</p>
<p>本地安装</p>
<ol>
<li>将安装包放在 ./node_modules 下（运行 npm 命令时所在的目录），如果没有=node_modules目录，会在当前执行 npm 命令的目录下生成 node_modules 目录。</li>
<li>可以通过 require() 来引入本地安装的包。</li>
</ol>
<p>全局安装</p>
<ol>
<li>将安装包放在 /usr/local 下或者你 node 的安装目录。</li>
<li>可以直接在命令行里使用。</li>
</ol>
<p>如果你希望具备两者功能，则需要在两个地方安装它或使用 npm link。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 升级 nmp</span><br><span class="line">sudo nmp install npm -g</span><br><span class="line"></span><br><span class="line"># 安装模块</span><br><span class="line">npm install express # 本地安装</span><br><span class="line">npm install express -g # 全局安装</span><br><span class="line"></span><br><span class="line"># 错误解决办法 npm err! Error: connect ECONNREFUSED 127.0.0.1:8087</span><br><span class="line">npm config set proxy null</span><br><span class="line"></span><br><span class="line"># 查看安装信息</span><br><span class="line">npm list -g  # 已安装的全局模块</span><br><span class="line">npm ls  # 已安装的本地模块</span><br><span class="line">npm list grunt  # 某个模块的版本号</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>npm 遇到 write access的问题怎么办</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 第一步：在你的用户文件下新建一个文件夹，这个.npm-global 名字可以用你自己喜欢的名字替换，推荐直接使用这个名字。</span><br><span class="line">mkdir ~/.npm-global</span><br><span class="line"></span><br><span class="line">#第二步：更改node的安装连接</span><br><span class="line">npm config set prefix &#x27;~/.npm-global&#x27;</span><br><span class="line"></span><br><span class="line">#第三步：在用户的profile下增加path，为的是系统能够找到可执行文件的目录</span><br><span class="line"> export PATH=~/.npm-global/bin:$PATH</span><br><span class="line"></span><br><span class="line">#第四步：update profile。使其生效</span><br><span class="line">source ~/.profile</span><br></pre></td></tr></table></figure>

<p>npm更新已安装模块</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g npm-check-updates</span><br><span class="line"></span><br><span class="line">ncu  # 查看更新</span><br><span class="line">ncu  # 更新</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>使用淘宝 NPM 镜像</p>
<p>你可以使用淘宝定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line">这样就可以使用 cnpm 命令来安装模块了：</span><br><span class="line"></span><br><span class="line">cnpm install [name]</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>learn</tag>
        <tag>Nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>UNEN</title>
    <url>/2019/02/19/unen/</url>
    <content><![CDATA[<h1 id="UNEN"><a href="#UNEN" class="headerlink" title="UNEN"></a>UNEN</h1><p>[TOC]</p>
<p>阿里云</p>
<p>域名 unen.cn 公司</p>
<p>服务器 47.107.224.216 Windows Server 2012R2 悟空</p>
<h2 id="服务器配置及备案"><a href="#服务器配置及备案" class="headerlink" title="服务器配置及备案"></a>服务器配置及备案</h2><h3 id="备案"><a href="#备案" class="headerlink" title="备案"></a>备案</h3><p>服务器在悟空账户 域名在公司账户</p>
<p>登录悟空账户 进入备案管理</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3lis27qj31mt0ffgwq.jpg"
                      alt="备案管理1"
                ></p>
<p>复制备案服务号 切换到公司账户</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3m5beg8j31fv08jjv4.jpg"
                      alt="备案管理2"
                ></p>
<p> 切换公司账户后 进入ICP备案系统 填写基本信息后 将复制的备案服务号 粘贴到 ECS实例中</p>
<h3 id="已弃用的方案windows"><a href="#已弃用的方案windows" class="headerlink" title="已弃用的方案windows"></a>已弃用的方案windows</h3><h4 id="FileZilla"><a href="#FileZilla" class="headerlink" title="FileZilla"></a>FileZilla</h4><p>远程连接 <a class="link"   href="https://jingyan.baidu.com/article/e4d08ffdb2e6080fd2f60d3f.html" >教程<i class="fas fa-external-link-alt"></i></a></p>
<h4 id="配置阿里云oss做media库"><a href="#配置阿里云oss做media库" class="headerlink" title="配置阿里云oss做media库"></a>配置阿里云oss做media库</h4><p><a class="link"   href="https://blog.csdn.net/u014633966/article/details/78727034" >教程<i class="fas fa-external-link-alt"></i></a></p>
<h4 id="解决远程无法连接问题"><a href="#解决远程无法连接问题" class="headerlink" title="解决远程无法连接问题"></a>解决远程无法连接问题</h4><ol>
<li><p>启动wimRM服务 <a class="link"   href="https://cloud.tencent.com/developer/ask/24542/answer/26856" >教程<i class="fas fa-external-link-alt"></i></a></p>
</li>
<li><p>在本地服务器中 启动远程管理</p>
</li>
<li><p>安装远程协助 <a class="link"   href="https://help.aliyun.com/knowledge_detail/40880.html?spm=5176.11065259.1996646101.searchclickresult.52981ee5qRywnE#windows2012" >教程<i class="fas fa-external-link-alt"></i></a></p>
</li>
<li><p>在高级属性中  打开远程协助</p>
</li>
</ol>
<h4 id="1-解决80端口被占用问题"><a href="#1-解决80端口被占用问题" class="headerlink" title="1.解决80端口被占用问题"></a>1.解决80端口被占用问题</h4><ol>
<li>使用管理员身份运行 shell</li>
<li>net stop http //停止系统http服务</li>
<li>sc config http start= disabled //禁用服务的自动启动，此处注意等号后面的空格不可少</li>
</ol>
<h4 id="2-开放80端口"><a href="#2-开放80端口" class="headerlink" title="2.开放80端口"></a>2.开放80端口</h4><p>控制面板—防火墙—高级设置—高级设置—出站规则—最右边 新建规则“新建出站规则向导”，在向导的第一步，选择要创建的防火墙规则类型，选择第二个“端口”。</p>
<p>再增加 入站规则</p>
<p>开放80 命名为 unen</p>
<h3 id="更换为linux服务器"><a href="#更换为linux服务器" class="headerlink" title="更换为linux服务器"></a>更换为linux服务器</h3><p>被window服务器折磨到不行，现更换服务器为linux，现在本地测试成功在，再更换服务器后进行部署。</p>
<h4 id="mysql的安装与远程登录"><a href="#mysql的安装与远程登录" class="headerlink" title="mysql的安装与远程登录"></a>mysql的安装与远程登录</h4><h5 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h5><h6 id="1-下载安装包"><a href="#1-下载安装包" class="headerlink" title="1.下载安装包"></a>1.下载安装包</h6><p>下载<a class="link"   href="https://dev.mysql.com/downloads/mysql/" >链接<i class="fas fa-external-link-alt"></i></a> 选择对应版本 这里选用的是 Linux-Generic</p>
<h6 id="2-安装依赖库"><a href="#2-安装依赖库" class="headerlink" title="2.安装依赖库"></a>2.安装依赖库</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install numactl</span><br><span class="line">apt install libaio-dev</span><br></pre></td></tr></table></figure>

<h6 id="3-解压到指定目录"><a href="#3-解压到指定目录" class="headerlink" title="3.解压到指定目录"></a>3.解压到指定目录</h6><p>解压tar.xz文件：先 xz -d xxx.tar.xz 将 xxx.tar.xz解压成 xxx.tar 然后，再用 tar -xvf xxx.tar来解包。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf mysql-xxx</span><br><span class="line">mv mysql-xxx /usr/local/mysql</span><br></pre></td></tr></table></figure>

<h6 id="4-添加文件夹、用户、设置权限"><a href="#4-添加文件夹、用户、设置权限" class="headerlink" title="4.添加文件夹、用户、设置权限"></a>4.添加文件夹、用户、设置权限</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd -r -g mysql -s /bin/false mysql</span><br><span class="line"></span><br><span class="line">mkdir mysql-files</span><br><span class="line">chown mysql:mysql mysql-files</span><br><span class="line">chmod 750 mysql-files</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="5-初始化数据库"><a href="#5-初始化数据库" class="headerlink" title="5.初始化数据库"></a>5.初始化数据库</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bin/mysqld --initialize --user=mysql 保存生成的临时密码 root@localhost: xxx</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="6-安装ssl服务"><a href="#6-安装ssl服务" class="headerlink" title="6.安装ssl服务"></a>6.安装ssl服务</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install openssh</span><br><span class="line">bin/mysql_ssl_rsa_setup</span><br></pre></td></tr></table></figure>

<h6 id="7-复制服务文件"><a href="#7-复制服务文件" class="headerlink" title="7.复制服务文件"></a>7.复制服务文件</h6><p><code>cp support-files/mysql.server /etc/init.d/mysql.server</code></p>
<h5 id="登录msyql与修改密码"><a href="#登录msyql与修改密码" class="headerlink" title="登录msyql与修改密码"></a>登录msyql与修改密码</h5><h6 id="1-开启服务"><a href="#1-开启服务" class="headerlink" title="1.开启服务"></a>1.开启服务</h6><p>&amp;是后台运行的意思，执行命令之后，终端会卡在一个位置，再按一次enter即可</p>
<p><code>bin/mysqld_safe --user=mysql &amp;</code></p>
<h6 id="2-使用root登录并改密"><a href="#2-使用root登录并改密" class="headerlink" title="2.使用root登录并改密"></a>2.使用root登录并改密</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bin/mysql -uroot -p 输入之前保存的随机密码</span><br><span class="line"></span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;new password&#x27; PASSWORD EXPIRE NEVER;</span><br><span class="line">use mysql;</span><br><span class="line">update user set host=&#x27;%&#x27; where user = &#x27;root&#x27;;</span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;new password&#x27;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

<h6 id="3-配置mysql为全局变量"><a href="#3-配置mysql为全局变量" class="headerlink" title="3.配置mysql为全局变量"></a>3.配置mysql为全局变量</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/profile</span><br><span class="line">export PATH=$PATH:/opt/software/node-v8.9.3-linux-x64/bin/node   //增加并保存</span><br><span class="line">//修改好配置文件后执行source /etc/profile 或者 source /root/.bashrc使配置文件生效</span><br></pre></td></tr></table></figure>

<h5 id="mysql问题集锦"><a href="#mysql问题集锦" class="headerlink" title="mysql问题集锦"></a>mysql问题集锦</h5><p>ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/tmp/mysql.sock’ (2)</p>
<p><code>/etc/init.d/mysql.server start</code></p>
<h4 id="配置python开发环境"><a href="#配置python开发环境" class="headerlink" title="配置python开发环境"></a>配置python开发环境</h4><h5 id="默认设为python3和pip3"><a href="#默认设为python3和pip3" class="headerlink" title="默认设为python3和pip3"></a>默认设为python3和pip3</h5><p>sudo rm -rf /usr/bin/python<br>删除后再建立新的链接关系：<br>sudo ln -s /usr/bin/python3  /usr/bin/python</p>
<p>sudo apt-get install python3-pip</p>
<p>设置pip3同上</p>
<h5 id="问题集锦"><a href="#问题集锦" class="headerlink" title="问题集锦"></a>问题集锦</h5><p>安装mysqlclient报mysql_config not found<a class="link"   href="https://blog.csdn.net/qq_37925422/article/details/80552347" >教程<i class="fas fa-external-link-alt"></i></a></p>
<h2 id="服务器开发"><a href="#服务器开发" class="headerlink" title="服务器开发"></a>服务器开发</h2><h3 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h3><h4 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h4><h5 id="软件列表"><a href="#软件列表" class="headerlink" title="软件列表"></a>软件列表</h5><p>python mysql navicat</p>
<h5 id="安装mysql8-0"><a href="#安装mysql8-0" class="headerlink" title="安装mysql8.0"></a>安装mysql8.0</h5><p>下载<a class="link"   href="https://dev.mysql.com/downloads/mysql/" >链接<i class="fas fa-external-link-alt"></i></a></p>
<p>安装<a class="link"   href="https://blog.csdn.net/qq_37350706/article/details/81707862" >教程<i class="fas fa-external-link-alt"></i></a></p>
<p>shell下登录mysql <code>mysql -uroot -p</code></p>
<p>修改密码<code>ALTER USER &quot;root&quot;@&quot;localhost&quot; IDENTIFIED  BY &quot;你的新密码&quot;;</code></p>
<h5 id="python虚拟环境"><a href="#python虚拟环境" class="headerlink" title="python虚拟环境"></a>python虚拟环境</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install virtualenv  安装模块虚拟环境模块</span><br><span class="line"></span><br><span class="line">pip install virtualenvwrapper-win  安装环境管理模块</span><br><span class="line"></span><br><span class="line">mkvirtualenv testenv  新建环境在Administrator/Envs/</span><br><span class="line"></span><br><span class="line">mkvirtualenv --python=python版本的python.exe路径 虚拟环境名称   指定版本</span><br><span class="line"></span><br><span class="line">rmvirtualenv &lt;name&gt; 删除环境</span><br><span class="line"></span><br><span class="line">workon 查看当前虚拟环境</span><br><span class="line"></span><br><span class="line">workon &lt;name&gt; 进入虚拟环境 (在shell下运行)</span><br><span class="line"></span><br><span class="line">deactivate退出环境</span><br></pre></td></tr></table></figure>

<h5 id="安装依赖的包"><a href="#安装依赖的包" class="headerlink" title="安装依赖的包"></a>安装依赖的包</h5><p>导出 pip freeze &gt;r.txt</p>
<p>新建 r.txt文件  pip install -r r.txt安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="项目开始"><a href="#项目开始" class="headerlink" title="项目开始"></a>项目开始</h4><h5 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">django-admin startproject mysite 创建django项目</span><br><span class="line">python manage.py runserver 8080 设置端口号</span><br><span class="line">python manage.py runserver 0.0.0.0:8080  监听所有公共ip</span><br><span class="line">python manage.py startapp &lt;name&gt; 创建应用后在INSTALLED_APPS中增加 &lt;name&gt;</span><br></pre></td></tr></table></figure>

<h5 id="搭建目录文件"><a href="#搭建目录文件" class="headerlink" title="搭建目录文件"></a>搭建目录文件</h5><p>apps 存放应用列表 同时在setting 中增加 <code>sys.path.insert(0, os.path.join(BASE_DIR, &#39;apps&#39;))</code></p>
<p>log 存放日志</p>
<p>media 存放上传文件 增加 <code>MEDIA_URL = &#39;/media/&#39;  MEDIA_ROOT = os.path.join(BASE_DIR, &#39;media&#39;)</code></p>
<p>static 全局静态文件 js css 静态图片  STATIC_URL 后增加<code>STATICFILES_DIRS = [os.path.join(BASE_DIR, &#39;static&#39;)]</code></p>
<p>templates 网页模板 在 TEMPLATES 下的DIRS中增加 <code>os.path.join(BASE_DIR, &#39;templates&#39;)</code></p>
<h5 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h5><p>先配置 MySQLdb<a class="link"   href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysql-python" >驱动<i class="fas fa-external-link-alt"></i></a> 下载对应版本后</p>
<p>虚拟环境下 pip install xx.whl  pip install mysqlclient</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;MOOC&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>: <span class="string">&#x27;1234&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>python manage.py makemigrations</p>
<p>python manage.py migrate</p>
<h5 id="创建超级用户"><a href="#创建超级用户" class="headerlink" title="创建超级用户"></a>创建超级用户</h5><p><code>python manage.py createsuperuser</code></p>
<p>wukong  1234</p>
<h4 id="应用开发"><a href="#应用开发" class="headerlink" title="应用开发"></a>应用开发</h4><h5 id="models"><a href="#models" class="headerlink" title="models"></a>models</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserMessage</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">u&#x27;用户名&#x27;</span>)  <span class="comment"># 对字段的注释</span></span><br><span class="line">    email = models.EmailField(verbose_name=<span class="string">u&#x27;邮箱&#x27;</span>)</span><br><span class="line">    address = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u&#x27;地址&#x27;</span>)</span><br><span class="line">    message = models.CharField(max_length=<span class="number">500</span>, verbose_name=<span class="string">u&#x27;留言信息&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u&#x27;用户留言信息&#x27;</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">        <span class="comment"># db_table=&#x27;user_message&#x27;  # 指定表名</span></span><br><span class="line">        <span class="comment"># ordering = &#x27;-id&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="根据现有数据库建立model"><a href="#根据现有数据库建立model" class="headerlink" title="根据现有数据库建立model"></a>根据现有数据库建立model</h5><p>创建一个项目，修改seting文件，在setting里面设置你要连接的数据库类型和连接名称，地址之类，和创建新项目的时候一致<br>运行下面代码可以自动生成models模型文件<br>python manage.py inspectdb<br>这样就可以在命令行看到数据库的模型文件了</p>
<p>把模型文件导入到app中<br>创建一个app<br>django-admin.py startapp app<br>python manage.py inspectdb &gt; app/models.py</p>
<h5 id="用户的登录和注册"><a href="#用户的登录和注册" class="headerlink" title="用户的登录和注册"></a>用户的登录和注册</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重定义验证方式</span></span><br><span class="line">AUTHENTICATION_BACKENDS = (</span><br><span class="line">    <span class="string">&#x27;users.views.CustomBacked&#x27;</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>安装 <code>django-simple-captcha</code> APPS 下增加 captcha</p>
<h4 id="附加包开发"><a href="#附加包开发" class="headerlink" title="附加包开发"></a>附加包开发</h4><h5 id="xadmin"><a href="#xadmin" class="headerlink" title="xadmin"></a>xadmin</h5><p>下载xadmin <a class="link"   href="https://github.com/sshwsfc/xadmin" >链接<i class="fas fa-external-link-alt"></i></a></p>
<p>新建extra_apps 文件夹 将xadmin 复制到其中 注册xadmin和crispy_forms  将extra_apps 加入系统路径</p>
<p>配置后需要更新数据库</p>
<p>个性化配置</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseSetting</span>(<span class="params"><span class="built_in">object</span></span>):</span>  <span class="comment"># 设置主题</span></span><br><span class="line">    enable_themes = <span class="literal">True</span></span><br><span class="line">    use_bootswatch = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GlobalSettings</span>(<span class="params"><span class="built_in">object</span></span>):</span>  <span class="comment"># 设置标题</span></span><br><span class="line">    site_title = <span class="string">&#x27;WMOOC&#x27;</span></span><br><span class="line">    site_footer = <span class="string">&#x27;Wukong&#x27;</span></span><br><span class="line">    menu_style = <span class="string">&#x27;accordion&#x27;</span>  <span class="comment"># 折叠目录</span></span><br><span class="line"></span><br><span class="line">xadmin.site.register(views.BaseAdminView, BaseSetting)</span><br><span class="line">xadmin.site.register(views.CommAdminView, GlobalSettings)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>增加djagno主题失败后 <a class="link"   href="https://www.jianshu.com/p/8d4d958b8e82" >教程<i class="fas fa-external-link-alt"></i></a></p>
<h4 id="template"><a href="#template" class="headerlink" title="template"></a>template</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data-url=<span class="string">&quot;&#123;&#123;MEDIA.URL&#125;&#125;&#123;&#123;course_org.image&#125;&#125;&quot;</span></span><br><span class="line"><span class="comment"># settings.py context_processors中增加</span></span><br><span class="line"><span class="comment"># 将 MEDIA.URL 注册到 html</span></span><br><span class="line">django.core.context_processors.media</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="页码"><a href="#页码" class="headerlink" title="页码"></a>页码</h5><p><code>pip install django-pure-pagination</code></p>
<p>INSTALLED_APPS=(<br>    …<br>    ‘pure_pagination’,<br>)</p>
<h3 id="peewee"><a href="#peewee" class="headerlink" title="peewee"></a>peewee</h3><h4 id="简介和配置"><a href="#简介和配置" class="headerlink" title="简介和配置"></a>简介和配置</h4><p>实际开发中，如无特殊需求，一般不会直接写 SQL，而是用更为方便的 ORM（对象关系映射，Object Relational Mapping）。顾名思义，就是将关系型数据库与 Python 中的对象关联起来，提供了一种操作数据的简便方式，相当于对数据库加了一层更友好的接口。</p>
<p>目前 Python 中比较流行的 ORM 解决方案有三种：</p>
<ol>
<li>Django ORM。使用方便，但很难脱离 Django 单独使用。</li>
<li>SQLAlchemy。功能强大，成熟可扩展，但学习门槛较高。</li>
<li>peewee。轻量，可扩展，易学习，但功能有限。</li>
</ol>
<p>安装peewee，然后shell下运行 导出数据库中的模型，参考链接: <a class="link"   href="http://docs.peewee-orm.com/en/latest/peewee/playhouse.html#pwiz-a-model-generator" >pwiz-a-model-generator<i class="fas fa-external-link-alt"></i></a></p>
<p><code>python -m pwiz -e mysql -H localhost -p 3306 -u root -P password unen &gt;db.py</code></p>
<p>在同目录下新建py文件</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> db <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ProductPction.select():</span><br><span class="line">    <span class="built_in">print</span>(i.<span class="built_in">type</span>)</span><br></pre></td></tr></table></figure>

<h4 id="Querying"><a href="#Querying" class="headerlink" title="Querying"></a>Querying</h4><p>教程<a class="link"   href="https://peewee.readthedocs.io/en/latest/peewee/querying.html" >链接<i class="fas fa-external-link-alt"></i></a></p>
<ul>
<li>Model.create(), for executing INSERT queries.</li>
<li>Model.save() and Model.update(), for executing UPDATE queries.</li>
<li>Model.delete_instance() and Model.delete(), for executing DELETE queries.</li>
<li>Model.select(), for executing SELECT queries.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># save</span></span><br><span class="line">User.create(username=<span class="string">&#x27;Charlie&#x27;</span>)</span><br><span class="line"></span><br><span class="line">user = User(username=<span class="string">&#x27;Charlie&#x27;</span>)</span><br><span class="line">user.save()</span><br><span class="line"></span><br><span class="line">huey = User()</span><br><span class="line">huey.username = <span class="string">&#x27;Huey&#x27;</span></span><br><span class="line">huey.save()</span><br><span class="line"></span><br><span class="line"><span class="comment"># foreign key</span></span><br><span class="line">tweet = Tweet.create(user=huey, message=<span class="string">&#x27;Hello!&#x27;</span>)</span><br><span class="line">tweet = Tweet.create(user=<span class="number">2</span>, message=<span class="string">&#x27;Hello again!&#x27;</span>)</span><br><span class="line"></span><br><span class="line">data_source = [</span><br><span class="line">    &#123;<span class="string">&#x27;field1&#x27;</span>: <span class="string">&#x27;val1-1&#x27;</span>, <span class="string">&#x27;field2&#x27;</span>: <span class="string">&#x27;val1-2&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;field1&#x27;</span>: <span class="string">&#x27;val2-1&#x27;</span>, <span class="string">&#x27;field2&#x27;</span>: <span class="string">&#x27;val2-2&#x27;</span>&#125;,</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> data_dict <span class="keyword">in</span> data_source:</span><br><span class="line">    MyModel.create(**data_dict)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># This is much faster.</span></span><br><span class="line"><span class="keyword">with</span> db.atomic():</span><br><span class="line">    <span class="keyword">for</span> data_dict <span class="keyword">in</span> data_source:</span><br><span class="line">        MyModel.create(**data_dict)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># We can INSERT tuples as well...</span></span><br><span class="line">data = [(<span class="string">&#x27;val1-1&#x27;</span>, <span class="string">&#x27;val1-2&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;val2-1&#x27;</span>, <span class="string">&#x27;val2-2&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;val3-1&#x27;</span>, <span class="string">&#x27;val3-2&#x27;</span>)]</span><br><span class="line">fields = [MyModel.field1, MyModel.field2]</span><br><span class="line"><span class="comment"># But we need to indicate which fields the values correspond to.</span></span><br><span class="line"><span class="keyword">with</span> db.atomic():</span><br><span class="line">    MyModel.insert_many(data, fields=fields).execute()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;user_list.txt&#x27;</span>) <span class="keyword">as</span> fh:</span><br><span class="line">    <span class="comment"># Create a list of unsaved User instances.</span></span><br><span class="line">    users = [User(username=line.strip()) <span class="keyword">for</span> line <span class="keyword">in</span> fh.readlines()]</span><br><span class="line"></span><br><span class="line"><span class="comment"># update</span></span><br><span class="line">query = Stat.update(counter=Stat.counter + <span class="number">1</span>).where(Stat.url == request.url)</span><br><span class="line">query.execute()</span><br><span class="line"></span><br><span class="line">subquery = Tweet.select(fn.COUNT(Tweet.<span class="built_in">id</span>)).where(Tweet.user == User.<span class="built_in">id</span>)</span><br><span class="line">update = User.update(num_tweets=subquery)</span><br><span class="line">update.execute()</span><br><span class="line"></span><br><span class="line"><span class="comment"># delete</span></span><br><span class="line">user = User.get(User.<span class="built_in">id</span> == <span class="number">1</span>)</span><br><span class="line">user.delete_instance()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Selecting a single record</span></span><br><span class="line">User.get(User.<span class="built_in">id</span> == <span class="number">1</span>)</span><br><span class="line">User.get_by_id(<span class="number">1</span>)  <span class="comment"># Same as above.</span></span><br><span class="line">User[<span class="number">1</span>]  <span class="comment"># Also same as above.</span></span><br><span class="line">User.get(User.<span class="built_in">id</span> == <span class="number">1</span>).username</span><br><span class="line">User.get(User.username == <span class="string">&#x27;Charlie&#x27;</span>)</span><br><span class="line">user, created = User.get_or_create(username=username)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Selecting multiple records</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>query = User.select()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[user.username <span class="keyword">for</span> user <span class="keyword">in</span> query]</span><br><span class="line">[<span class="string">&#x27;Charlie&#x27;</span>, <span class="string">&#x27;Huey&#x27;</span>, <span class="string">&#x27;Peewee&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>query[<span class="number">1</span>]</span><br><span class="line">&lt;__main__.User at <span class="number">0x7f83e80f5550</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>query[<span class="number">1</span>].username</span><br><span class="line"><span class="string">&#x27;Huey&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>query = User.select().dicts()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> row <span class="keyword">in</span> query:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(row)</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;Charlie&#x27;</span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;Huey&#x27;</span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;Peewee&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># orderding</span></span><br><span class="line">Tweet.select().order_by(-Tweet.created_date)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="客户端开发"><a href="#客户端开发" class="headerlink" title="客户端开发"></a>客户端开发</h2><h3 id="树莓派"><a href="#树莓派" class="headerlink" title="树莓派"></a>树莓派</h3><h4 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h4><ul>
<li>树莓派Raspberry3b+主板</li>
<li>外接显示屏，支持HDMI接口（系统默认只支持HDMI显示）</li>
<li>3.5寸触摸屏显示器-LCD屏幕（需要系统单独按照驱动）</li>
<li>16GB TF卡</li>
<li>读卡器</li>
<li>鼠标（usb有线）</li>
<li>键盘（usb有线）</li>
<li>HDMI连接线</li>
<li>5V2A的电源和micro usb线</li>
</ul>
<h4 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h4><ul>
<li>SD Formatter（格式化工具）</li>
<li>Win32DiskImager（烧录工具）</li>
<li>2018-11-13-raspbian-stretch.img（镜像文件）</li>
</ul>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>用”SD Formatter”格式化TF卡后，再将镜像烧录到其中 插入树莓派 接入显示器，鼠标，键盘后启动。</p>
<p><strong>重点</strong>：烧录完成后，不要点击格式化TF卡！！！</p>
<h4 id="无线连接"><a href="#无线连接" class="headerlink" title="无线连接"></a>无线连接</h4><p>开启VNC SSH GPIO</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3n2tdu2j30ff0q8qkf.jpg"
                      alt="image.png"
                ></p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3nrhl4rj30dv0c2n1e.jpg"
                      alt="image.png"
                ></p>
<h5 id="putty"><a href="#putty" class="headerlink" title="putty"></a>putty</h5><p>在TF-卡中新建文件 ssh （系统默认不开机ssh）</p>
<p>登录路由器管理界面查询树莓派的ip地址</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3o6ahv7j30lc03jdgx.jpg"
                      alt="image.png"
                ></p>
<p>服务器下载并安装putty 输入上图中的IP 开始连接默认用户名 pi  密码  respberry</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3oghtekj30ne0eq0z3.jpg"
                      alt="image.png"
                ></p>
<h5 id="VNC-Viewer"><a href="#VNC-Viewer" class="headerlink" title="VNC Viewer"></a>VNC Viewer</h5><p>putty登录后在终端输入 <code>sudo raspi-config</code></p>
<p>选择 5.INterfacing Options  </p>
<p>再选择 P3 VNC</p>
<p>服务器下载并安装VNC Viewer</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3pejrzoj30i00e7qew.jpg"
                      alt="image.png"
                ></p>
<h5 id="IP与MAC地址绑定"><a href="#IP与MAC地址绑定" class="headerlink" title="IP与MAC地址绑定"></a>IP与MAC地址绑定</h5><p>登录路由器管理界面后，在高级设置中</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3qe7w54j30y80psgw8.jpg"
                      alt="image.png"
                ></p>
<p>添加IP与MAC地址绑定</p>
<p>更改VNC分辨率<code>vncserver -geometry 1200x1366</code></p>
<p>更改后用IP+端口号登陆</p>
<h5 id="更换源"><a href="#更换源" class="headerlink" title="更换源"></a>更换源</h5><p>sudo nano /etc/apt/sources.list</p>
<p>注释第一行 增加 <code>deb https://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi</code></p>
<p>同步更新源 <code>sudo apt-get update</code></p>
<p>升级软件包 <code>sudo apt-get upgrade</code></p>
<h4 id="Linux教程"><a href="#Linux教程" class="headerlink" title="Linux教程"></a>Linux教程</h4><h5 id="关机重启"><a href="#关机重启" class="headerlink" title="关机重启"></a>关机重启</h5><p><code>ctrl + alt + t</code>打开终端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#关机</span><br><span class="line">sudo shutdown -h now</span><br><span class="line">sudo poweroff</span><br><span class="line">shutdown -r重启  -c 取消 now 现在  20:25 今天的20:25  +10 10分钟后关机</span><br><span class="line"></span><br><span class="line">#重启</span><br><span class="line">sudo reboot</span><br><span class="line">sudo shutdown -r now</span><br><span class="line"></span><br><span class="line">#注销</span><br><span class="line">logout :退出 注销</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="系统目录说明"><a href="#系统目录说明" class="headerlink" title="系统目录说明"></a>系统目录说明</h5><p>/ 根路径</p>
<p>这是Linux系统的“根”目录，也是所有目录结构的最底层。在UNIX以及和它兼容的系统中，”/“是一个单独的目录。</p>
<p>/boot</p>
<p>这个目录下包含系统启动文件（boot loader），例如Grub，Lilo或者Kernel，以及initrd，system.map等配置文件。</p>
<p>/sys</p>
<p>这个目录下包含内核、固件以及系统相关文件。</p>
<p>/sbin</p>
<p>包含系统操作和运作所必需的二进制文件以及管理工具，主要就是可执行文件。类似WINDOWS下的EXE文件。</p>
<p>/bin</p>
<p>包含单用户模式下的二进制文件以及工具程序，比如cat，ls，cp这些命令。</p>
<p>/lib</p>
<p>包含/sbin和/bin目录下二进制文件运行所需要的库文件。</p>
<p>/dev</p>
<p>内含必需的系统文件和驱动器。</p>
<p>/etc</p>
<p>内含系统配置文件，其下的目录，比如 /etc/hosts, /etc/resolv.conf, nsswitch.conf, 以及系统缺省设置，网络配置文件等等。以及一些系统和应用程序的配置文件。</p>
<p>/<strong>home</strong></p>
<p>每一个用户的在这个目录下，都会单独有一个以其<strong>用户名</strong>命令的目录，在这里保存着用户的个人设置文件，尤其是以 profile结尾的文件。但是也有例外，root用户的数据就不在这个目录中，而是单独在根路径下，保存在单独的/root文件夹下。</p>
<p>/<strong>media</strong></p>
<p>一个给所有可移动设备比如光驱、USB外接盘、软盘提供的常规挂载点。路径显示为<code>/media/用户名/U盘名</code></p>
<p>/mnt</p>
<p>临时文件系统挂载点。比如，你并不想长期挂载某个驱动器，而是只是临时挂载一会U盘烤个MP3之类的，那么应该挂载在这个位置下。</p>
<p>/opt</p>
<p>在Linux系统中，这个目录用到的并不多，opt是 可选系统程序包（Optional Software Packages）的简称。这个目录在UNIX系统，如Sun Solaris用途要广泛的多。</p>
<p>/usr</p>
<p>用户数据目录，包含了属于用户的实用程序和应用程序。这里有很多重要的，但并非关键的文件系统挂载这个路径下面。在这里，你会重新找到一个 bin、sbin 和 lib目录，其中包含非关键用户和系统二进制文件以及相关的库和共享目录，以及一些库文件。</p>
<p>/usr/sbin</p>
<p>包含系统中非必备和并不是特别重要的系统二进制文件以及网络应用工具。</p>
<p>/usr/bin</p>
<p>包含用户的非必备和并不是特别重要的二进制文件。</p>
<p>/usr/lib</p>
<p>保存着/usr/sbin以及/usr/bin中二进制文件所需要的库文件。</p>
<p>/usr/share</p>
<p>“平台无关”的共享数据目录。</p>
<p>/usr/local</p>
<p>是/usr下的二级目录，这里主要保存着包含系统二进制文件以及运行库在内的本地系统数据。</p>
<p>/var</p>
<p>这个路径下通常保存着包括系统日志、打印机后台文件（spool files）、定时任务（crontab）、邮件、运行进程、进程锁文件等。这个目录尤其需要注意进行日常的检查和维护，因为这个目录下文件的大小可能会增长很快，以致于很快占满硬盘，然后导致系统便会出现各种奇奇怪怪的问题。</p>
<p>/tmp</p>
<p>顾名思义，这是一个临时文件夹，专门用来保存临时文件，每次系统重启之后，这个目录下的”临时”文件便会被清空。同样，/var/tmp 也同样保存着临时文件。两者唯一的不同是，后者 /var/tmp目录保存的文件会受到系统保护，系统重启之后这个目录下的文件也不会被清空。</p>
<p>/proc</p>
<p>这个目录是驻留在系统内存中的虚拟（psuedo，伪）文件系统，其中保存的都是文本格式的系统内核和进程信息。</p>
<blockquote>
<p>LINUX系统目录结构图</p>
</blockquote>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3qttiqzj30c00i8adh.jpg"
                      alt="image.png"
                ></p>
<h5 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h5><table>
<thead>
<tr>
<th>命令</th>
<th align="left">全称</th>
<th align="left">解释</th>
</tr>
</thead>
<tbody><tr>
<td>man + 命令</td>
<td align="left">Manual</td>
<td align="left">手册 查询其他命令用法</td>
</tr>
<tr>
<td>pwd</td>
<td align="left">Print working directory</td>
<td align="left">打印当前工作目录</td>
</tr>
<tr>
<td>cd</td>
<td align="left">Change directory</td>
<td align="left">切换目录</td>
</tr>
<tr>
<td>ls + -l</td>
<td align="left">List files</td>
<td align="left">列出目录下的文件</td>
</tr>
<tr>
<td>mkdir</td>
<td align="left">Make directory</td>
<td align="left">建立文件夹</td>
</tr>
<tr>
<td>rmdir</td>
<td align="left">Remove directory</td>
<td align="left">删除文件夹</td>
</tr>
<tr>
<td>cat</td>
<td align="left">Concatenate</td>
<td align="left">串联？查看文件 合并文件</td>
</tr>
<tr>
<td>touch</td>
<td align="left">touch</td>
<td align="left">新建文件</td>
</tr>
<tr>
<td>rm</td>
<td align="left">remove</td>
<td align="left">删除指定文件</td>
</tr>
<tr>
<td>clear</td>
<td align="left">clear</td>
<td align="left">清屏</td>
</tr>
<tr>
<td>tree</td>
<td align="left">tree</td>
<td align="left">文件树</td>
</tr>
<tr>
<td>cp</td>
<td align="left">cope</td>
<td align="left">复制</td>
</tr>
<tr>
<td>mv</td>
<td align="left">move</td>
<td align="left">移动/重命名</td>
</tr>
<tr>
<td>grep+字符串+文件名</td>
<td align="left">grep</td>
<td align="left">搜索</td>
</tr>
<tr>
<td>echo + 字符串 &gt; 文件</td>
<td align="left">&gt; 新建 &gt;&gt;增加</td>
<td align="left">输出内容到文件</td>
</tr>
</tbody></table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">rm扩展: -r 删除目录文件   -f强制删除无提示</span><br><span class="line"></span><br><span class="line">tree扩展:  -d 只显示目录</span><br><span class="line"></span><br><span class="line">cp/mv扩展: -r 复制目录文件 -i 提示覆盖</span><br><span class="line"></span><br><span class="line">cat扩展:   -b空行不编号  -n全部编号</span><br><span class="line"></span><br><span class="line">cat + 文件[文件&gt;新文件] 合并文件</span><br><span class="line"></span><br><span class="line">grep扩展:  -n显示行号   -v反向选择   -i忽略大小写  ^a  ke$</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tar -cvf py.tar 01.py 02.py 03.py  文件打包(不压缩)</span><br><span class="line"></span><br><span class="line">tar -xvf py.tar [-C dictionary]  文件解包  -z压缩为.gz   -j压缩为.bz2</span><br><span class="line"></span><br><span class="line">sudo apt install|remove|upgrade  软件名  sl 小火车 htop 系统进程</span><br><span class="line"></span><br><span class="line">chown: Change owner 改变所有者</span><br><span class="line"></span><br><span class="line">chgrp: Change group 改变用户组</span><br><span class="line"></span><br><span class="line">chmod: Change mode 改变模式</span><br><span class="line">insmod：Install module 安装模块</span><br><span class="line">rmmod：Remove module 删除模块</span><br><span class="line">lsmod：List module 列表模块</span><br><span class="line"></span><br><span class="line">sudo是superuser do的简写</span><br><span class="line"></span><br><span class="line">查看linux版本号：uname -a</span><br><span class="line"></span><br><span class="line">比较两个文件：diff 1.c 2.c 或cmp 1.c 2.c</span><br><span class="line"></span><br><span class="line">设置文件的读写权限：chmod u+w 1.c(增加文件拥有者对1.c写的权限)</span><br><span class="line">chmod g-r 1.c( 删除工作组对1.c读的权限)</span><br><span class="line">chmod o+x 1.c(增加其他用户对1.c的执行权限)</span><br><span class="line">chmod a-w 1.c(删除所有用户对1.c写的权限)</span><br><span class="line">chmod 777 -R aaa  更改目录及子文件子目录全部权限</span><br><span class="line">chmod u=rwx,g=rw,o=r aa.py</span><br><span class="line"></span><br><span class="line">u 所有者 g 所属组 o 其他用户</span><br><span class="line">r=4 w=2 x=1</span><br><span class="line"></span><br><span class="line">查看运行的进程：ps process status</span><br><span class="line">杀掉某个线程：kill 1186（1186是线程号）</span><br><span class="line"></span><br><span class="line">date  查询当前系统时间</span><br><span class="line"></span><br><span class="line">df -h   disk free 显示磁盘剩余空间     -h 人性化的方式显示文件大小</span><br><span class="line"></span><br><span class="line">alias ll=&quot;ls -lh&quot;  自定义命令的别名</span><br><span class="line">unalias ll 取消别名</span><br><span class="line"></span><br><span class="line">which ls 查看命令位置</span><br></pre></td></tr></table></figure>

<h4 id="树莓派实验室"><a href="#树莓派实验室" class="headerlink" title="树莓派实验室"></a>树莓派实验室</h4><h5 id="RPi-GPIO-模块使用基础"><a href="#RPi-GPIO-模块使用基础" class="headerlink" title="RPi.GPIO 模块使用基础"></a>RPi.GPIO 模块使用基础</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#导入模块</span></span><br><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"><span class="comment">#针脚编号</span></span><br><span class="line">GPIO.setmode(GPIO.BCM)</span><br><span class="line"><span class="comment">#忽略警告s</span></span><br><span class="line">GPIO.setwarnings(<span class="literal">False</span>)</span><br><span class="line"><span class="comment">#配置通道</span></span><br><span class="line">GPIO.setup(channel,GPIO.IN,pull_up_down=GPIO.PUD_UP)</span><br><span class="line"><span class="comment">#输入 读取GPIO针脚的值</span></span><br><span class="line">GPIO.<span class="built_in">input</span>(channel)</span><br><span class="line"><span class="comment">#输出 设置GPIO针脚的输出状态 1/GPIO.HIGH/True</span></span><br><span class="line">GPIO.output(channel,state)</span><br><span class="line"><span class="comment">#边缘检测 RISING FALLING BOTH</span></span><br><span class="line">GPIO.wait_for_edge(channel, GPIO.RISING)</span><br><span class="line"></span><br><span class="line"><span class="comment">#清理</span></span><br><span class="line">GPIO.cleanup()</span><br><span class="line"><span class="comment">#检测Raspberry Pi主板的修订版本</span></span><br><span class="line">GPIO.RPI_REVISION</span><br><span class="line"><span class="comment">#检测RPI.GPIO的版本</span></span><br><span class="line">GPIO.VERSION</span><br><span class="line"></span><br><span class="line"><span class="comment">#线程回调 边缘检测</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_callback</span>(<span class="params">channel</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;这是一个边缘事件回调函数！&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;在通道 %s 上进行边缘检测&#x27;</span>%channel)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;该程序与您的主程序运行在不同的进程中&#x27;</span>)</span><br><span class="line"><span class="comment">#回调加入开关防抖</span></span><br><span class="line">GPIO.add_event_detect(channel, GPIO.RISING, callback=my_callback,bouncetime=<span class="number">200</span>)</span><br><span class="line"><span class="comment">#停止边缘检测事件</span></span><br><span class="line">GPIO.remove_event_detect(channel)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="使用-RPi-GPIO-模块的输入（Input）功能"><a href="#使用-RPi-GPIO-模块的输入（Input）功能" class="headerlink" title="使用 RPi.GPIO 模块的输入（Input）功能"></a>使用 RPi.GPIO 模块的输入（Input）功能</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">1.polling轮询 循环定时检查输入值</span></span><br><span class="line"><span class="string">2.interruots中断   边缘检测  检测临界值 falling edge rising edge</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<h5 id="18B20温度传感器"><a href="#18B20温度传感器" class="headerlink" title="18B20温度传感器"></a>18B20温度传感器</h5><p>坏了  2.68又买了一个 等快递<br><code>https://www.jianshu.com/p/1aeed4cfd431</code></p>
<h5 id="DHT11温湿度传感器"><a href="#DHT11温湿度传感器" class="headerlink" title="DHT11温湿度传感器"></a>DHT11温湿度传感器</h5><p>参考<a class="link"   href="https://github.com/yfgeek/rpi-TempRuntime" >项目<i class="fas fa-external-link-alt"></i></a></p>
<h6 id="1-DHT11温湿度传感器的安装"><a href="#1-DHT11温湿度传感器的安装" class="headerlink" title="1.DHT11温湿度传感器的安装"></a>1.DHT11温湿度传感器的安装</h6><p>电阻：4.7–10KΩ</p>
<p>接线原理图</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3rs9snsj30di0eo0tx.jpg"
                      alt="接线.jpg"
                ></p>
<p>接线实物图</p>
<h6 id="2-收集传感器的信息"><a href="#2-收集传感器的信息" class="headerlink" title="2.收集传感器的信息"></a>2.收集传感器的信息</h6><p>安装依赖的库</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/adafruit/Adafruit_Python_DHT.git</span><br><span class="line">cd Adafruit_Python_DHT</span><br><span class="line">sudo python setup.py install</span><br><span class="line">sudo pip install RPi.GPIO</span><br></pre></td></tr></table></figure>

<p>下载项目</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sudo mkdir /env</span><br><span class="line">cd env</span><br><span class="line">git clone https://github.com/yfgeek/rpi-TempRuntime.git</span><br></pre></td></tr></table></figure>

<p>修改项目</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /env/rpi-TempRuntime</span><br><span class="line">sudo nano DHT11-WITHOUT-LCD.py</span><br></pre></td></tr></table></figure>

<p>修改<code>humidity, temperature = Adafruit_DHT.read_retry(sensor, 26)</code>中的26改为自己的GPIO#序号，<code>humidity, temperature = Adafruit_DHT.read_retry(sensor, 4)</code>，保存退出。</p>
<p>历史数据以JSON格式存储在/env/rpi-TempRuntime/web/data/min（或者hour）</p>
<h6 id="3-caddy部署"><a href="#3-caddy部署" class="headerlink" title="3.caddy部署"></a>3.caddy部署</h6><p>基本配置<a class="link"   href="https://pimylifeup.com/raspberry-pi-caddy-web-server/" >教程<i class="fas fa-external-link-alt"></i></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl https://getcaddy.com | bash -s personal</span><br><span class="line">sudo mkdir /etc/caddy</span><br><span class="line">sudo nano /etc/caddy/Caddyfile</span><br></pre></td></tr></table></figure>

<p>输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:80 localhost:8080 &#123;</span><br><span class="line">    /env/rpi-TempRuntime/web</span><br><span class="line">    gzip</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2019-02-12 DHT11温湿度监视图</p>
<p><img  
                     lazyload
                     alt="image"
                     data-src="https://ws1.sinaimg.cn/large/0062r8cigy1g7p3sdjf4nj30sd0kcdhf.jpg"
                      alt="DHT11温湿度监视图.jpg"
                ></p>
<h5 id="第二个传感器"><a href="#第二个传感器" class="headerlink" title="第二个传感器"></a>第二个传感器</h5><h4 id="连接阿里云平台"><a href="#连接阿里云平台" class="headerlink" title="连接阿里云平台"></a>连接阿里云平台</h4><p>在阿里物联网平台 添加产品树莓派 增加设备 SCADA</p>
<p>在开发板上安装nodejs 和 npm</p>
<p>使用官方工具包</p>
<h4 id="配置python-SDK"><a href="#配置python-SDK" class="headerlink" title="配置python SDK"></a>配置python SDK</h4><p>更改 默认python为python3 <code>sudo rm -rf /usr/bin/python  sudo ln -s /usr/bin/python3  /usr/bin/python</code></p>
<p><a class="link"   href="https://help.aliyun.com/document_detail/98292.html?spm=a2c4g.11186623.6.619.418471bc5dZy7v" >教程<i class="fas fa-external-link-alt"></i></a></p>
<p>不能正常升级时 <a class="link"   href="http://blog.lxx1.com/3214" >教程<i class="fas fa-external-link-alt"></i></a></p>
<p>尝试三天后被迫放弃 官方SDK太烂 原以为我水平差看不懂 原来大家都看不懂…</p>
<p>还在公测阶段 选择方案3 socketio</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>learn</tag>
        <tag>unen</tag>
      </tags>
  </entry>
  <entry>
    <title>一席</title>
    <url>/2019/05/27/%E4%B8%80%E5%B8%AD/</url>
    <content><![CDATA[<h1 id="一席"><a href="#一席" class="headerlink" title="一席"></a>一席</h1><p>精致的利己主义者，高智商，世俗老道；善于表演，懂得配合；尤其善于利用体制来达到自己的目的。这种人一旦掌握去权力，比一般的贪官污吏的危害更大。</p>
<p>我唯一担心的一件事，我是否配得上我经受的苦难。</p>
<p>上帝让谁灭亡，必先让其膨胀<br>时间是筛子，最终淘去一切沉渣<br>蜜蜂盗花，结果使花开茂盛<br>暗透了，更能看得见星光</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>合集</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2019/06/21/Scrapy/</url>
    <content><![CDATA[<h1 id="Scrapy"><a href="#Scrapy" class="headerlink" title="Scrapy"></a>Scrapy</h1><h2 id="安装Scrapy"><a href="#安装Scrapy" class="headerlink" title="安装Scrapy"></a>安装Scrapy</h2><h3 id="可能的报错"><a href="#可能的报错" class="headerlink" title="可能的报错"></a>可能的报错</h3><p>安装失败,使用全局代理，点击<a class="link"   href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#Twisted" >链接<i class="fas fa-external-link-alt"></i></a>,下载对应版本的Twisted(cp后面是python版本，amd64代表python64位),下载后运行pip先安装驱动。再<code>pip install scrapy</code></p>
<p>No module named ‘win32con’,<code>pip install pypiwin32</code></p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>性能测试，输入<code>scrapy bench</code>，通过计算机性能测得</p>
<p>爬虫测试，输入<code>scrapy fetch &quot;http://baidu.com</code></p>
<p>shell环境测试，输入<code>scrapy shell &quot;http://baidu.com&quot;</code></p>
<h2 id="项目开始"><a href="#项目开始" class="headerlink" title="项目开始"></a>项目开始</h2><p>创建项目<code>scrapy startproject xxx</code></p>
<p>创建爬虫<code>scrapy genspider itcast &quot;itcast.cn &quot;</code></p>
<p>检查爬虫模块<code>scrapy check itcast</code></p>
<p>运行爬虫<code>scrapy crawl itcast</code></p>
]]></content>
  </entry>
  <entry>
    <title>Deepin</title>
    <url>/2019/08/08/Deepin/</url>
    <content><![CDATA[<h1 id="Deepin"><a href="#Deepin" class="headerlink" title="Deepin"></a>Deepin</h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="ssh连接"><a href="#ssh连接" class="headerlink" title="ssh连接"></a>ssh连接</h3><p>启动ssh-server</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ps -e | grep ssh  #查看sshd，没有代表没启动</span><br><span class="line">sudo apt-get install openssh-server #安装后再次查看</span><br><span class="line">ifconfig  # 查看网卡地址</span><br><span class="line"></span><br><span class="line">待选</span><br><span class="line">vi /etc/ssh/sshd_config #更改</span><br><span class="line">PermitRootLogin yes# #开启远程登录</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="宝塔linux配置"><a href="#宝塔linux配置" class="headerlink" title="宝塔linux配置"></a>宝塔linux配置</h2><p>官方<a class="link"   href="https://www.bt.cn/btcode.html" >基础教程<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
      <categories>
        <category>system</category>
      </categories>
      <tags>
        <tag>learn</tag>
        <tag>deepin</tag>
      </tags>
  </entry>
  <entry>
    <title>AidLearning</title>
    <url>/2019/08/28/AidLearning/</url>
    <content><![CDATA[<h1 id="AidLearning"><a href="#AidLearning" class="headerlink" title="AidLearning"></a>AidLearning</h1><p>参考链接</p>
<ul>
<li><a class="link"   href="https://winaero.com/blog/enable-openssh-server-windows-10" >How to Enable OpenSSH Server in Windows 10<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://github.com/aidlearning/AidLearning-FrameWork" >AidLearning-FrameWork<i class="fas fa-external-link-alt"></i></a></li>
</ul>
<h2 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h2><p>下载AidLearning并安装，安装后等待安装后重启动，登录账号(<a class="link"   href="mailto:&#x77;&#117;&#x6b;&#x6f;&#x6e;&#x67;&#49;&#57;&#57;&#x36;&#64;&#x31;&#54;&#x33;&#46;&#99;&#111;&#x6d;" >&#x77;&#117;&#x6b;&#x6f;&#x6e;&#x67;&#49;&#57;&#57;&#x36;&#64;&#x31;&#54;&#x33;&#46;&#99;&#111;&#x6d;<i class="fas fa-external-link-alt"></i></a>)</p>
<h2 id="电脑通过ssh链接"><a href="#电脑通过ssh链接" class="headerlink" title="电脑通过ssh链接"></a>电脑通过ssh链接</h2><p>Windows设置&gt;&gt;应用&gt;&gt;应用与功能&gt;&gt;管理可选功能&gt;&gt;添加OpenSSH客户端</p>
<p>进入 ‘C:\windows\system32\Openssh’，加入系统环境变量，执行ssh-keygen生成密钥文件，默认保存在’C:\Users\Wukong.ssh’目录下。</p>
<p>通过 ‘<a class="link"   href="http://192.168.1.112:8910/upload" >http://192.168.1.112:8910/upload<i class="fas fa-external-link-alt"></i></a>‘将生成的密钥文件 id_rsa 和 id_rsa.pub 上传到 AidLearning。</p>
<p>打开cmd通过’ssh u0_a311@手机IP -p8022’连接手机。</p>
<p>使用powershell连接：</p>
<ul>
<li>主机手机ip</li>
<li>端口 8022</li>
<li>方法 公钥</li>
<li>用户名 u0_a311</li>
<li>私钥 C:\Users\Wukong.ssh\id_rsa</li>
<li>私钥密码 无</li>
</ul>
<p>通过 ‘<a class="link"   href="http://192.168.1.112:8080/files/" >http://192.168.1.112:8080/files/<i class="fas fa-external-link-alt"></i></a>‘ 进行AidLearning的文件资源管理</p>
]]></content>
      <categories>
        <category>system</category>
      </categories>
      <tags>
        <tag>learn</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>旧手机Blog</title>
    <url>/2019/08/30/%E6%97%A7%E6%89%8B%E6%9C%BABlog/</url>
    <content><![CDATA[<h1 id="Blog"><a href="#Blog" class="headerlink" title="Blog"></a>Blog</h1><p>参考链接</p>
<ul>
<li><a class="link"   href="https://blog.verkey.org/384.html" >废旧Android+LNMP+Ngrok 打造”移动云主机”<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://blog.csdn.net/fighting_sxw/article/details/89845908" >小米5安装Centos7(Linux Deploy)<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://segmentfault.com/a/1190000015628625" >CentOS 7 下 安装 Python3.7<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://blog.csdn.net/warylee/article/details/84628345" >Linux下安装Perl 5<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://blog.csdn.net/lkgCSDN/article/details/84403329" >pip is configured with locations that require TLS/SSL问题<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://segmentfault.com/a/1190000012030061" >virtualenv和virtualenvwrapper介绍、安装和使用<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://linux.cn/article-8215-1.html" >screen<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://fengli.su/archives/android-ngrok.html" >安卓手机内网穿透ngrok<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://github.com/inconshreveable/ngrok/issues/315" >GET /wordpress/ 301 Moved Permanently<i class="fas fa-external-link-alt"></i></a></li>
</ul>
<h2 id="在安卓上安装Liunx"><a href="#在安卓上安装Liunx" class="headerlink" title="在安卓上安装Liunx"></a>在安卓上安装Liunx</h2><p>所需软件</p>
<ul>
<li><a class="link"   href="https://github.com/meefik/busybox/releases" >Busy Box<i class="fas fa-external-link-alt"></i></a>Linux deploy 支撑软件</li>
<li><a class="link"   href="https://github.com/meefik/linuxdeploy/releases" >Linux deploy<i class="fas fa-external-link-alt"></i></a> Linux系统支撑软件</li>
</ul>
<p>安装后两个软件都需要开启root权限 Busy Box无需其它设置 其中 architecture 为 处理器架构</p>
<h3 id="Linux-Deploy设置"><a href="#Linux-Deploy设置" class="headerlink" title="Linux Deploy设置"></a>Linux Deploy设置</h3><p>左侧菜单设置</p>
<ul>
<li>屏幕常亮 关</li>
<li>锁定WiFi 开</li>
<li>保持CPU唤醒 开</li>
<li>PATH变量 /system/xbin</li>
</ul>
<h3 id="安装Ubuntu"><a href="#安装Ubuntu" class="headerlink" title="安装Ubuntu"></a>安装Ubuntu</h3><p>右下角系统安装配置</p>
<ul>
<li>容器类型 chroot</li>
<li>发行版GNU/Linux Ubuntu</li>
<li>架构 armhf</li>
<li>发行版GNU/Linux版本 xenial</li>
<li>源地址 <a class="link"   href="http://202.141.160.110/ubuntu-ports" >http://202.141.160.110/ubuntu-ports<i class="fas fa-external-link-alt"></i></a></li>
<li>安装类型 镜像文件</li>
<li>本地化 zn_CN. UTF-8</li>
<li>启动SSH服务器 开</li>
</ul>
<h3 id="安装CentOS"><a href="#安装CentOS" class="headerlink" title="安装CentOS"></a>安装CentOS</h3><p>右下角系统安装配置</p>
<ul>
<li>容器类型 chroot</li>
<li>发行版GNU/Linux CentOS</li>
<li>架构 aarch64</li>
<li>发行版GNU/Linux版本 7</li>
<li>源地址 <a class="link"   href="https://mirrors.tuna.tsinghua.edu.cn/centos-altarch/" >https://mirrors.tuna.tsinghua.edu.cn/centos-altarch/<i class="fas fa-external-link-alt"></i></a></li>
<li>安装类型 镜像文件</li>
<li>本地化 zn_CN. UTF-8</li>
<li>启动SSH服务器 开</li>
</ul>
<p>设置完成后点击右上角的安装按钮开始安装，大概15分钟。</p>
<p>看到&lt;&lt;&lt;deploy则安装完成，如果中间没有报错说明安装成功！点击启动如果没有’ssh fail’ 等报错,<br>说明启动成功了，可以用终端软件链接。</p>
<h2 id="配置开发环境"><a href="#配置开发环境" class="headerlink" title="配置开发环境"></a>配置开发环境</h2><h3 id="screen"><a href="#screen" class="headerlink" title="screen"></a>screen</h3><p>安装screen</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install screen</span><br></pre></td></tr></table></figure>

<p>screen基本命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 创建新会话</span><br><span class="line">screen -S name</span><br><span class="line"># 从 screen 会话中分离</span><br><span class="line">Ctrl-a 和 d</span><br><span class="line"># 列出对话</span><br><span class="line">screen -ls</span><br><span class="line"># 还原对话</span><br><span class="line">screen -r name</span><br><span class="line">结束对话</span><br><span class="line">进入后输入 exit</span><br></pre></td></tr></table></figure>

<h3 id="python"><a href="#python" class="headerlink" title="python"></a>python</h3><p>安装python3.7 过程中需要安装’yum install gcc’和’yum install make’</p>
<p>pip使用错误见参考链接</p>
<h4 id="虚拟环境"><a href="#虚拟环境" class="headerlink" title="虚拟环境"></a>虚拟环境</h4><p>配置虚拟环境</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 安装virtualenv</span><br><span class="line">pip install virtualenv</span><br><span class="line"></span><br><span class="line"># 添加软链接</span><br><span class="line">find / -name virtualenv</span><br><span class="line">ln -s /usr/local/python3/bin/virtualenv /usr/bin/virtualenv</span><br><span class="line"></span><br><span class="line">pip install virtualenvwrapper</span><br><span class="line"></span><br><span class="line"># 配置profile</span><br><span class="line">find / -name virtualenvwrapper.sh</span><br><span class="line">vi /etc/profile</span><br><span class="line"># 增加</span><br><span class="line">export WORKON_HOME=/root/virtualenvs</span><br><span class="line">source /usr/local/python3/bin/virtualenvwrapper.sh</span><br><span class="line"># 执行</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>

<p>virtualenvwrapper基本命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 新建</span><br><span class="line">mkvirtualenv test --python=python3  </span><br><span class="line"># 查看列表</span><br><span class="line">workon</span><br><span class="line"># 激活</span><br><span class="line">workon test</span><br><span class="line"># 退出</span><br><span class="line">deactivate</span><br><span class="line"># 删除</span><br><span class="line">rmvirtualenv test</span><br></pre></td></tr></table></figure>

<h2 id="最终方案"><a href="#最终方案" class="headerlink" title="最终方案"></a>最终方案</h2><p><a class="link"   href="https://fengli.su/archives/android-ngrok.html" >安卓手机内网穿透ngrok<i class="fas fa-external-link-alt"></i></a></p>
<p>KSWEB+Termux+ngork</p>
<p>安装KSWEB到手机，开启Apache，安装工具phpMyAdmin，下载源码到安卓目录下的htdocs</p>
<p>使用ngrok开启内网渗透</p>
<p>Termux替代工具NeoTerm</p>
<p>目前常用在局域网文件传输，启动KSWEB后，浏览器输入手机固定ip+端口，可以自由上传和删除目录下的文件，使用MT文件夹可以将htdocs下的data/User/admin/home 设置为主目录 (同样在5.0网络下，平均速度在10M/s)</p>
]]></content>
      <categories>
        <category>system</category>
      </categories>
      <tags>
        <tag>learn</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>创新之路</title>
    <url>/2019/09/23/%E5%88%9B%E6%96%B0%E4%B9%8B%E8%B7%AF/</url>
    <content><![CDATA[<h1 id="创新之路"><a href="#创新之路" class="headerlink" title="创新之路"></a>创新之路</h1><p>你必须有两个能达到前 25%水平的领域，这两个领域的交集就是你的职业方向。</p>
<p>输出文化 而不是价值观。</p>
<p>你不应该进入那种行业，做了两年的人可以和那些已经做了二十年的人，具有一样的工作效率。</p>
<p>能够获得暴利的职业，都有一个共同特点：可扩展性（scaling），一次劳动可以服务成千上万的人。</p>
<p>好的程序员有三种美德：「懒惰」(Laziness) 、「不耐烦」(Impatience) 、以及「傲慢」(Hubris)</p>
<p>复杂的协调，战略资源的整合者，集合式创新，将现有技术做成产品，服务普通人。</p>
<p>完善他人的想法，优化他人的发明，集合成令人难以抗拒的新产品。</p>
<p>普及优质的教育，带来改变自身命运的机会。</p>
<p>创新是思考下一个，提升人们生活水平的工具是什么，并有做成这件事的信心和信念，无论承担多大的风险，为实现它，付出一切。</p>
<p>好奇心产生的愉悦感，分泌出积极的神经化学激素（多巴胺，内啡肽），一种内在的激励机制，去探索，去学习。</p>
<p>预知未来最好的办法是创造未来</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>罗素-我为什么而活着</title>
    <url>/2019/10/12/%E7%BD%97%E7%B4%A0-%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E8%80%8C%E6%B4%BB%E7%9D%80/</url>
    <content><![CDATA[<h1 id="罗素-我为什么而活着"><a href="#罗素-我为什么而活着" class="headerlink" title="罗素-我为什么而活着"></a>罗素-我为什么而活着</h1><p>我为什么而活着</p>
<p>对爱情的渴望，对知识的追求，对人类苦难不可遏制的同情心，这三种纯洁而无比强烈的激情支配着我的一生。这三种激情，就像飓风一样，在深深的苦海上，肆意地把我吹来吹去，吹到濒临绝望的边缘。</p>
<p>我寻求爱情，首先因为爱情给我带来狂喜，它如此强烈以致我经常愿意为了几小时的欢愉而牺牲生命中的其他一切。我寻求爱情，其次是因为爱情可以解除孤寂一—那是一颗震颤的心，在世界的边缘，俯瞰那冰冷死寂、深不可测的深渊。我寻求爱情，最后是因为在爱情的结合中，我看到圣徒和诗人们所想像的天堂景象的神秘缩影。这就是我所寻求的，虽然它对人生似乎过于美好，然而最终我还是得到了它。</p>
<p>我以同样的热情寻求知识，我渴望了解人的心灵。我渴望知道星星为什么闪闪发光，我试图理解毕达哥拉斯的思想威力，即数字支配着万物流转。这方面我获得一些成就，然而并不多。</p>
<p>爱情和知识，尽其可能地把我引上天堂，但是同情心总把我带回尘世。痛苦的呼唤经常在我心中回荡，饥饿的儿童，被压迫被折磨者，被儿女视为负担的无助的老人以及充满孤寂、贫穷和痛苦的整个世界，都是对人类应有生活的嘲讽。我渴望减轻这些不幸，但是我无能为力，而且我自己也深受其害。</p>
<p>这就是我的一生，我觉得值得为它活着。如果有机会的话，我还乐意再活一次。</p>
<p>英文原文：</p>
<p>What I Have Lived For</p>
<p>by Bertrand Russell</p>
<p>Three passions, simple but overwhelmingly strong, have governed my life: the longing for love, the search for knowledge, and unbearable pity for the suffering of mankind. These passions, like great winds, have blown me hither and thither, in a wayward course, over a great ocean of anguish, reaching to the very verge of despair.</p>
<p>I have sought love, first, because it brings ecstasy – ecstasy so great that I would often have sacrificed all the rest of life for a few hours of this joy. I have sought it, next, because it relieves loneliness–that terrible loneliness in which one shivering consciousness looks over the rim of the world into the cold unfathomable lifeless abyss. I have sought it finally, because in the union of love I have seen, in a mystic miniature, the prefiguring vision of the heaven that saints and poets have imagined. This is what I sought, and though it might seem too good for human life, this is what–at last–I have found.</p>
<p>With equal passion I have sought knowledge. I have wished to understand the hearts of men. I have wished to know why the stars shine. And I have tried to apprehend the Pythagorean power by which number holds sway above the flux. A little of this, but not much, I have achieved.</p>
<p>Love and knowledge, so far as they were possible, led upward toward the heavens. But always pity brought me back to earth. Echoes of cries of pain reverberate in my heart. Children in famine, victims tortured by oppressors, helpless old people a burden to their sons, and the whole world of loneliness, poverty, and pain make a mockery of what human life should be. I long to alleviate this evil, but I cannot, and I too suffer.</p>
<p>This has been my life. I have found it worth living, and would gladly live it again if the chance were offered me.</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>转载</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序_云开发</title>
    <url>/2019/12/28/%E5%B0%8F%E7%A8%8B%E5%BA%8F_%E4%BA%91%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h1 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h1><blockquote>
<p>应用将无处不在，随时可用，但又无需安装卸载</p>
</blockquote>
<p>[TOC]</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>优点</p>
<ul>
<li>速度快</li>
<li>无需适配</li>
<li>社交分享</li>
<li>出色体验</li>
<li>用完即走，随手可得</li>
<li>低门槛</li>
</ul>
<p>设计规范</p>
<ul>
<li>友好：重点突出，流程明确</li>
<li>清晰：导航明确，减少等待，异常反馈</li>
<li>便捷：减少输入，避免误操作，操作流畅</li>
</ul>
<h2 id="代码笔记"><a href="#代码笔记" class="headerlink" title="代码笔记"></a>代码笔记</h2><p>传递自定义数据属性</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 父html</span></span><br><span class="line">bindtap=<span class="string">&#x27;f1&#x27;</span> data-user-name=<span class="string">&#x27;balabala&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 父js</span></span><br><span class="line"><span class="keyword">var</span> userName = e.currentTarget.dataset.userName</span><br><span class="line">wx.navigateTo(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;url?username=&#x27;</span>+userName</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子js</span></span><br><span class="line"><span class="attr">onload</span>:<span class="function"><span class="keyword">function</span>(<span class="params">options</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> username=options.username</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>界面加载</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 默认加载第一个路径</span></span><br><span class="line"><span class="string">&quot;pages&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;pages/start/start&quot;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>rpx相对长度单位</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iPhone6 屏宽 750rpx  1px=2rpx</span><br></pre></td></tr></table></figure>

<p>弹性盒子</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">display</span>:flex;</span><br><span class="line"><span class="attribute">flex-direction</span>:column;</span><br><span class="line"><span class="attribute">justify-content</span>:space-around;</span><br><span class="line"><span class="attribute">align-items</span>:center;</span><br></pre></td></tr></table></figure>

<h2 id="云开发简介"><a href="#云开发简介" class="headerlink" title="云开发简介"></a>云开发简介</h2><p>Tencent Cloud Base(TCB) 一站式后端云服务</p>
<p>编程基础：HTML,CSS,Js,Node.js,MongoDB</p>
<h3 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h3><p>在miniprogram下打开终端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm init -y</span><br><span class="line">npm i vant-weapp -S --production</span><br><span class="line">npm i wx-server-sdk -S</span><br><span class="line"></span><br><span class="line">“详情”中勾选 npm 模块</span><br><span class="line">“工具”中选择 构建npm</span><br><span class="line"></span><br><span class="line">json中增加</span><br><span class="line">&#123;</span><br><span class="line">    &quot;usingComponents&quot;:&#123;</span><br><span class="line">        &quot;van-button&quot;: &quot;vant-weapp/button&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>learn</tag>
        <tag>code</tag>
      </tags>
  </entry>
  <entry>
    <title>Win10</title>
    <url>/2020/01/01/Win10/</url>
    <content><![CDATA[<h1 id="Win10"><a href="#Win10" class="headerlink" title="Win10"></a>Win10</h1><p>文件报毒，关闭Windows自带安全中心<a class="link"   href="https://www.bilibili.com/video/av91158542" >教程<i class="fas fa-external-link-alt"></i></a> </p>
<p>右键无法新建TXT文档的问题解决<a class="link"   href="https://www.xp.cn/b.php/5753.html" >教程<i class="fas fa-external-link-alt"></i></a></p>
<p>蓝屏 事件 17 （计算机管理&gt;事件查看器&gt;Windows日志&gt;系统&gt;）</p>
<p>事件17禁用8086DEV_A33C<br>下载炫龙芯片组驱动</p>
<p>事件10016 注册表权限</p>
<p>修复  <a class="link"   href="https://bbs.kafan.cn/thread-2188450-1-1.html" >教程<i class="fas fa-external-link-alt"></i></a></p>
<p><a class="link"   href="https://www.xinyucn.cc/2020/05/zhong_ji_jie_jue_win10_lan_pin.html" >教程<i class="fas fa-external-link-alt"></i></a></p>
<p>关闭PCI省电 控制面板》电源选项》当前电源计划》更改计划设置》更改高级电源设置》PCI Ex’p’ress》链路状态电源管理》全关闭</p>
<p>蓝屏   事件 10016 <a class="link"   href="https://blog.csdn.net/i_myxxx/article/details/87886217" >教程<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>learn</tag>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>简单思考</title>
    <url>/2020/02/24/%E7%AE%80%E5%8D%95%E6%80%9D%E8%80%83/</url>
    <content><![CDATA[<h1 id="简单思考"><a href="#简单思考" class="headerlink" title="简单思考"></a>简单思考</h1><p>一、经商不是打仗</p>
<ol>
<li>热情才是成功的条件，怀着使命感为用户尽心尽力</li>
<li>商业的简单本质是什么——由用户和商家构成的生态系统</li>
<li>经商不是打仗——不盯对手，只盯用户</li>
<li>经营不是管理——自由是技术创新之源</li>
<li>思考问题不以金钱为中心——专注于创造价值</li>
<li>人是公司的一切——厉害的角色引来厉害的角色</li>
</ol>
<p>二、依靠自己感性的生活</p>
<ol start="7">
<li>工作要自己争取——把想做的事情当成工作</li>
<li>不追求金钱和名誉——总是置身于能实际感受到成长的场所</li>
<li>工作辛劳是理所应当的——知道取得成果时的幸福，这才是职业人</li>
<li>依自己的感性生活——不迎合公司和上司</li>
<li>不察言观色——害怕客户而非职场上的批评</li>
<li>不当专家——不做偏离本质的努力</li>
<li>从一无所有中锻炼——正因为资源不足人才要思考</li>
<li>深思熟虑直至握有确信——深思熟虑后的失败是成功之母</li>
<li>享受不安——未来不确定，所以有无限的可能性</li>
</ol>
<p>三、不断舍弃成功</p>
<ol start="16">
<li>不让公司变成动物园——建设一个出成果者得回报的公司</li>
<li>不断舍弃成功——提高自身市场价值的唯一方法</li>
<li>坦率地说话——含蓄的表述会损害工作</li>
<li>越是优秀的人越不会吵架——拘泥于胜负者成不了事</li>
<li>人事评估简单是最好的——越复杂不满情绪越高涨</li>
<li>公司不是学校——培养员工的自主性绝无可能</li>
<li>不提升士气——缺乏干劲的人没资格做职场中人</li>
</ol>
<p>四、不需要大人物</p>
<ol start="23">
<li>不需要大人物——真正领导者用自己的梦想推动人</li>
<li>不需要统一管理——现场员工才是最高决策者</li>
<li>商业不需要人情——不营造骄纵的结构</li>
<li>不把经营理念书面化——徒增形式的理念将摧毁公司</li>
<li>不需要构想——预期判断未来 不如专注于眼前的事</li>
<li>不简单的不是战略——难以理解的信息会扰乱工作市场</li>
<li>守则不能改——做好心理准备，抛弃过去的成功</li>
</ol>
<p>五、 精简一切多余的工作</p>
<ol start="30">
<li>不需要计划——计划导致应变能力下降</li>
<li>不需要事务员——不分计划者和实行者</li>
<li>靠机制无法成功——操作手册会破坏创造性</li>
<li>不需要规划——丢弃一切阻碍速度的东西</li>
<li>不开会议——排除增加会议的人</li>
<li>不需要信息共享——多余的信息指挥带来多余的思考</li>
</ol>
<p>六、不追求创新</p>
<ol start="36">
<li>不以差异化为目标——用户不追求差别只追求价值</li>
<li>不追求创新——始终耿直地回应当下的需求</li>
<li>实现 质量*速度的最大化——抛弃制造方的自我满足</li>
<li>设计主导一切——最优考虑用户的使用便利性</li>
<li>用户不会告诉我们答案——深挖用户的声音，靠我们自己的头脑思考</li>
</ol>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue手册</title>
    <url>/2020/03/10/Vue%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<h1 id="Vue手册"><a href="#Vue手册" class="headerlink" title="Vue手册"></a>Vue手册</h1><p>[TOC]</p>
<h2 id="Vue实例"><a href="#Vue实例" class="headerlink" title="Vue实例"></a>Vue实例</h2><h3 id="关联数据和DOM"><a href="#关联数据和DOM" class="headerlink" title="关联数据和DOM"></a>关联数据和DOM</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; message &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;Hello Vue!&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="渲染绑定元素"><a href="#渲染绑定元素" class="headerlink" title="渲染绑定元素"></a>渲染绑定元素</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line">        鼠标悬停几秒钟查看此处动态绑定的提示信息！</span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> app2 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">            <span class="attr">el</span>: <span class="string">&#x27;#app-2&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line">                <span class="attr">message</span>: <span class="string">&#x27;页面加载于 &#x27;</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<h3 id="if条件"><a href="#if条件" class="headerlink" title="if条件"></a>if条件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;seen&quot;</span>&gt;</span>现在你看到我了<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> app3 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app-3&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">seen</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;todo in todos&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123; todo.text &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> app4 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app-4&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">todos</span>: [&#123;</span><br><span class="line">                <span class="attr">text</span>: <span class="string">&#x27;学习 JavaScript&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">text</span>: <span class="string">&#x27;学习 Vue&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">text</span>: <span class="string">&#x27;整个牛项目&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="v-on事件监听"><a href="#v-on事件监听" class="headerlink" title="v-on事件监听"></a>v-on事件监听</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-5&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;reverseMessage&quot;</span>&gt;</span>反转消息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> app5 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app-5&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;Hello Vue.js!&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="attr">reverseMessage</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.message = <span class="built_in">this</span>.message.split(<span class="string">&#x27;&#x27;</span>).reverse().join(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="v-model双向绑定"><a href="#v-model双向绑定" class="headerlink" title="v-model双向绑定"></a>v-model双向绑定</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-6&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> app6 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app-6&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;Hello Vue!&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="freeze冻结-阻止修改"><a href="#freeze冻结-阻止修改" class="headerlink" title="freeze冻结 阻止修改"></a>freeze冻结 阻止修改</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; foo &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这里的 `foo` 不会更新！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;foo = &#x27;baz&#x27;&quot;</span>&gt;</span>Change it<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">foo</span>: <span class="string">&#x27;bar&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.freeze(obj)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: obj</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="vue生命周期"><a href="#vue生命周期" class="headerlink" title="vue生命周期"></a>vue生命周期</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">a</span>: <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">created</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// `this` 指向 vm 实例</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;a is: &#x27;</span> + <span class="built_in">this</span>.a)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// =&gt; &quot;a is: 1&quot;</span></span><br></pre></td></tr></table></figure>

<p><img  
                     lazyload
                     alt="image"
                     data-src="https://cn.vuejs.org/images/lifecycle.png"
                      alt="vue生命周期"
                ></p>
<h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2><h3 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  v-once当数据改变时，插值处的内容不会更新 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-once</span>&gt;</span>这个将不会改变: &#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="原始-HTML"><a href="#原始-HTML" class="headerlink" title="原始 HTML"></a>原始 HTML</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 容易导致 XSS 攻击 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Using mustaches: &#123;&#123; rawHtml &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Using v-html directive: <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">&quot;rawHtml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Attribute"><a href="#Attribute" class="headerlink" title="Attribute"></a>Attribute</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">&quot;dynamicId&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  null、undefined 、false --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-bind:disabled</span>=<span class="string">&quot;isButtonDisabled&quot;</span>&gt;</span>Button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="使用-JavaScript-表达式"><a href="#使用-JavaScript-表达式" class="headerlink" title="使用 JavaScript 表达式"></a>使用 JavaScript 表达式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据作用域下作为 JavaScript 被解析，只能单个表达式 --&gt;</span></span><br><span class="line">&#123;&#123; number + 1 &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123; ok ? &#x27;YES&#x27; : &#x27;NO&#x27; &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123; message.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;) &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">&quot;&#x27;list-&#x27; + id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>只能访问全局变量白名单，不能访问用户自定义全局变量</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (process.env.NODE_ENV !== <span class="string">&#x27;production&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> allowedGlobals = makeMap(</span><br><span class="line">        <span class="string">&#x27;Infinity,undefined,NaN,isFinite,isNaN,&#x27;</span></span><br><span class="line">        <span class="string">&#x27;parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,&#x27;</span></span><br><span class="line">        <span class="string">&#x27;Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,&#x27;</span></span><br><span class="line">        <span class="string">&#x27;require&#x27;</span> <span class="comment">// for Webpack/Browserify</span></span><br><span class="line">    )</span><br></pre></td></tr></table></figure>

<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- v-bind 响应式更新HTML attribute --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- v-on 监听DOM事件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click</span>=<span class="string">&quot;doSomething&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="动态参数"><a href="#动态参数" class="headerlink" title="动态参数"></a>动态参数</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:</span>[<span class="attr">attributeName</span>]=<span class="string">&quot;url&quot;</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 避免使用大写字符来命名键名，因为浏览器会把 attribute 名全部强制转为小写 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- eventName 改为 eventname --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:</span>[<span class="attr">eventName</span>]=<span class="string">&quot;doSomething&quot;</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指明的特殊后缀 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit.prevent</span>=<span class="string">&quot;onSubmit&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="计算属性和侦听器"><a href="#计算属性和侦听器" class="headerlink" title="计算属性和侦听器"></a>计算属性和侦听器</h2><h3 id="computed-计算"><a href="#computed-计算" class="headerlink" title="computed 计算"></a>computed 计算</h3><p>计算属性具有缓存, 用于获取返回值</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;example&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Original message: &quot;&#123;&#123; message &#125;&#125;&quot;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Computed reversed message: &quot;&#123;&#123; reversedMessage &#125;&#125;&quot;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#example&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;Hello&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">computed</span>: &#123;</span><br><span class="line">        <span class="comment">// 计算属性的 getter</span></span><br><span class="line">        <span class="attr">reversedMessage</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// `this` 指向 vm 实例</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.message.split(<span class="string">&#x27;&#x27;</span>).reverse().join(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="watch-侦听"><a href="#watch-侦听" class="headerlink" title="watch 侦听"></a>watch 侦听</h3><p>监听特定值得前后变化, 用于执行</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="attr">watch</span>: &#123;</span><br><span class="line">    <span class="attr">status</span>: <span class="function"><span class="keyword">function</span>(<span class="params">value, oldValue</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.status = value</span><br><span class="line">        <span class="built_in">this</span>.page = <span class="number">1</span></span><br><span class="line">        <span class="built_in">this</span>.getData(<span class="number">1</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h2 id="Class-与-Style-绑定"><a href="#Class-与-Style-绑定" class="headerlink" title="Class 与 Style 绑定"></a>Class 与 Style 绑定</h2><h3 id="class对象语法"><a href="#class对象语法" class="headerlink" title="class对象语法"></a>class对象语法</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;static&quot;</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123; active: isActive, &#x27;text-danger&#x27;: hasError &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">isActive</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">hasError</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="style内联样式"><a href="#style内联样式" class="headerlink" title="style内联样式"></a>style内联样式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;styleObject&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;[baseStyles, overridingStyles]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">    <span class="attr">styleObject</span>: &#123;</span><br><span class="line">        <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span>,</span><br><span class="line">        <span class="attr">fontSize</span>: <span class="string">&#x27;13px&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h2><h3 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h3><p>v-else-if</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;A&#x27;&quot;</span>&gt;</span></span><br><span class="line">    A</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;B&#x27;&quot;</span>&gt;</span></span><br><span class="line">    B</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;C&#x27;&quot;</span>&gt;</span></span><br><span class="line">    C</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">    Not A/B/C</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>独立，不复用</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;loginType === &#x27;username&#x27;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter your username&quot;</span> <span class="attr">key</span>=<span class="string">&quot;username-input&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter your email address&quot;</span> <span class="attr">key</span>=<span class="string">&quot;email-input&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h3><p>数组</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;example-2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in items&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123; parentMessage &#125;&#125; - &#123;&#123; index &#125;&#125; - &#123;&#123; item.message &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> example2 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#example-2&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">parentMessage</span>: <span class="string">&#x27;Parent&#x27;</span>,</span><br><span class="line">        <span class="attr">items</span>: [&#123;</span><br><span class="line">                <span class="attr">message</span>: <span class="string">&#x27;Foo&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">message</span>: <span class="string">&#x27;Bar&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>对象</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;v-for-object&quot;</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value, name,index) in object&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;index&#125;&#125;.&#123;&#123; name &#125;&#125;: &#123;&#123; value &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#v-for-object&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">object</span>: &#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;How to do lists in Vue&#x27;</span>,</span><br><span class="line">            <span class="attr">author</span>: <span class="string">&#x27;Jane Doe&#x27;</span>,</span><br><span class="line">            <span class="attr">publishedAt</span>: <span class="string">&#x27;2016-04-10&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h4 id="数组更新检测"><a href="#数组更新检测" class="headerlink" title="数组更新检测"></a>数组更新检测</h4><p>变异方法</p>
<ul>
<li>push()向数组的末尾添加一个或多个元素，并返回新的长度</li>
<li>pop()删除并返回数组的最后一个元素。</li>
<li>shift()把数组的第一个元素从其中删除，并返回第一个元素的值</li>
<li>unshift()向数组的开头添加一个或更多元素，并返回新的长度。</li>
<li>splice()向/从数组中添加/删除项目，然后返回被删除的项目</li>
<li>sort()对数组的元素进行排序。</li>
<li>reverse()颠倒数组中元素的顺序。</li>
</ul>
<p>替换数组</p>
<ul>
<li>filter() 创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。</li>
<li>concat() 用于连接两个或多个数组。</li>
<li>slice() 可从已有的数组中返回选定的元素。</li>
</ul>
<h2 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h2><h3 id="监听事件"><a href="#监听事件" class="headerlink" title="监听事件"></a>监听事件</h3><p>v-on 监听DOM事件，运行js代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;example-1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;counter += 1&quot;</span>&gt;</span>Add 1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>The button above has been clicked &#123;&#123; counter &#125;&#125; times.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">var</span> example1 = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#example-1&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">counter</span>: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="事件处理方法"><a href="#事件处理方法" class="headerlink" title="事件处理方法"></a>事件处理方法</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;example-3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;say(&#x27;hi&#x27;)&quot;</span>&gt;</span>Say hi<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;say(&#x27;what&#x27;)&quot;</span>&gt;</span>Say what<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#example-3&#x27;</span>,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="attr">say</span>: <span class="function"><span class="keyword">function</span>(<span class="params">message</span>) </span>&#123;</span><br><span class="line">            alert(message)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 阻止单击事件继续传播 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click.stop</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 提交事件不再重载页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit.prevent</span>=<span class="string">&quot;onSubmit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 修饰符可以串联 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click.stop.prevent</span>=<span class="string">&quot;doThat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 只有修饰符 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit.prevent</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 添加事件监听器时使用事件捕获模式 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 即内部元素触发的事件先在此处理，然后才交由内部元素进行处理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-on:click.capture</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 只当在 event.target 是当前元素自身时触发处理函数 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 即事件不是从内部元素触发的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-on:click.self</span>=<span class="string">&quot;doThat&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 点击事件将只会触发一次 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click.once</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 滚动事件的默认行为 (即滚动行为) 将会立即触发 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 而不会等待 `onScroll` 完成  --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这其中包含 `event.preventDefault()` 的情况 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-on:scroll.passive</span>=<span class="string">&quot;onScroll&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="按键修饰符"><a href="#按键修饰符" class="headerlink" title="按键修饰符"></a>按键修饰符</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 只有在 `key` 是 `Enter` 时调用 `vm.submit()` --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-on:keyup.enter</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="表单输入绑定"><a href="#表单输入绑定" class="headerlink" title="表单输入绑定"></a>表单输入绑定</h2><h3 id="文本-1"><a href="#文本-1" class="headerlink" title="文本"></a>文本</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Multiline message is:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;white-space: pre-line;&quot;</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;add multiple lines&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;example-3&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Jack&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;jack&quot;</span>&gt;</span>Jack<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;John&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;john&quot;</span>&gt;</span>John<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Mike&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;mike&quot;</span>&gt;</span>Mike<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>Checked names: &#123;&#123; checkedNames &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#example-3&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">checkedNames</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="单选按钮"><a href="#单选按钮" class="headerlink" title="单选按钮"></a>单选按钮</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;example-4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;One&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;picked&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;one&quot;</span>&gt;</span>One<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Two&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;picked&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;two&quot;</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>Picked: &#123;&#123; picked &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#example-4&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">picked</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="选择框"><a href="#选择框" class="headerlink" title="选择框"></a>选择框</h3><p>单选</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 多选时select中增加 `multiple` ,data中的selected改为数组 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;selected&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">v-for</span>=<span class="string">&quot;option in options&quot;</span> <span class="attr">v-bind:value</span>=<span class="string">&quot;option.value&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123; option.text &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Selected: &#123;&#123; selected &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;...&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">selected</span>: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        <span class="attr">options</span>: [&#123;</span><br><span class="line">                <span class="attr">text</span>: <span class="string">&#x27;One&#x27;</span>,</span><br><span class="line">                <span class="attr">value</span>: <span class="string">&#x27;A&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">text</span>: <span class="string">&#x27;Two&#x27;</span>,</span><br><span class="line">                <span class="attr">value</span>: <span class="string">&#x27;B&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">text</span>: <span class="string">&#x27;Three&#x27;</span>,</span><br><span class="line">                <span class="attr">value</span>: <span class="string">&#x27;C&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="修饰符-1"><a href="#修饰符-1" class="headerlink" title="修饰符"></a>修饰符</h3><h4 id="lazy"><a href="#lazy" class="headerlink" title=".lazy"></a>.lazy</h4><p>在默认情况下，v-model 在每次 input 事件触发后将输入框的值与数据进行同步 (除了上述输入法组合文字时)。你可以添加 lazy 修饰符，从而转变为使用 change 事件进行同步：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在“change”时而非“input”时更新 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model.lazy</span>=<span class="string">&quot;msg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="number"><a href="#number" class="headerlink" title=".number"></a>.number</h4><p>如果想自动将用户的输入值转为数值类型，可以给 v-model 添加 number 修饰符：<br>这通常很有用，因为即使在 type=”number” 时，HTML 输入元素的值也总会返回字符串。如果这个值无法被 parseFloat() 解析，则会返回原始的值。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model.number</span>=<span class="string">&quot;age&quot;</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="trim"><a href="#trim" class="headerlink" title=".trim"></a>.trim</h4><p>如果要自动过滤用户输入的首尾空白字符，可以给 v-model 添加 trim 修饰符：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model.trim</span>=<span class="string">&quot;msg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="组件注册"><a href="#组件注册" class="headerlink" title="组件注册"></a>组件注册</h2><p>通过 Vue.component 全局注册，名称使用 kebab-case样式<br><strong>一个组件的 data 选项必须是一个函数</strong>，因此每个实例可以维护一份被返回对象的独立的拷贝</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;components-demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button-counter</span>&gt;</span><span class="tag">&lt;/<span class="name">button-counter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button-counter</span>&gt;</span><span class="tag">&lt;/<span class="name">button-counter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button-counter</span>&gt;</span><span class="tag">&lt;/<span class="name">button-counter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="comment">// 定义一个名为 button-counter 的新组件</span></span><br><span class="line">Vue.component(<span class="string">&#x27;button-counter&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">data</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">count</span>: <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">template</span>: <span class="string">&#x27;&lt;button v-on:click=&quot;count++&quot;&gt;You clicked me &#123;&#123; count &#125;&#125; times.&lt;/button&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="传递数据到子组件"><a href="#传递数据到子组件" class="headerlink" title="传递数据到子组件"></a>传递数据到子组件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blog-post</span> <span class="attr">post-title</span>=<span class="string">&quot;My journey with Vue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">blog-post</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blog-post</span> <span class="attr">post-title</span>=<span class="string">&quot;Blogging with Vue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">blog-post</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blog-post</span> <span class="attr">post-title</span>=<span class="string">&quot;Why Vue is so fun&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">blog-post</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">blog-post</span> <span class="attr">v-for</span>=<span class="string">&quot;post in posts&quot;</span> <span class="attr">v-bind:key</span>=<span class="string">&quot;post.id&quot;</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;post.title&quot;</span> <span class="attr">v-bind:content</span>=<span class="string">&quot;post.content&quot;</span> <span class="attr">v-bind:publishedAt</span>=<span class="string">&quot;post.publishedAt&quot;</span> <span class="attr">v-bind:comments</span>=<span class="string">&quot;post.comments&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">blog-post</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// props 选项将其包含在该组件可接受的 prop 列表中</span></span><br><span class="line">Vue.component(<span class="string">&#x27;blog-post&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">props</span>: [<span class="string">&#x27;post-title&#x27;</span>],</span><br><span class="line">    <span class="attr">template</span>: <span class="string">&#x27;&lt;h3&gt;&#123;&#123; title &#125;&#125;&lt;/h3&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="动态组件"><a href="#动态组件" class="headerlink" title="动态组件"></a>动态组件</h3><p>在不同组件之间进行动态切换</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 组件会在 `currentTabComponent` 改变时改变 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">component</span> <span class="attr">v-bind:is</span>=<span class="string">&quot;currentTabComponent&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>特殊渲染</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;ul&gt;、&lt;ol&gt;、&lt;table&gt; 和 &lt;select&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">is</span>=<span class="string">&quot;blog-post-row&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="局部注册"><a href="#局部注册" class="headerlink" title="局部注册"></a>局部注册</h3><p>外部构建后  导入</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="keyword">import</span> BaseButton <span class="keyword">from</span> <span class="string">&#x27;./BaseButton.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> BaseIcon <span class="keyword">from</span> <span class="string">&#x27;./BaseIcon.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> BaseInput <span class="keyword">from</span> <span class="string">&#x27;./BaseInput.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">components</span>: &#123;</span><br><span class="line">        <span class="string">&quot;base-button&quot;</span>: BaseButton,</span><br><span class="line">        <span class="string">&quot;base-icon&quot;</span>: BaseIcon,</span><br><span class="line">        <span class="string">&quot;base-input&quot;</span>: BaseInput</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Prop"><a href="#Prop" class="headerlink" title="Prop"></a>Prop</h2><h3 id="传递静态或动态-Prop"><a href="#传递静态或动态-Prop" class="headerlink" title="传递静态或动态 Prop"></a>传递静态或动态 Prop</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;blog-post title=&quot;My journey with Vue&quot;&gt;&lt;/blog-post&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 尽可能使用v-bind --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 动态赋予一个变量的值 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blog-post</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;post.title&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">blog-post</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 动态赋予一个复杂表达式的值 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blog-post</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;post.title + &#x27; by &#x27; + post.author.name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">blog-post</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Prop-验证"><a href="#Prop-验证" class="headerlink" title="Prop 验证"></a>Prop 验证</h3><p>控制台的警告, 方便他人调用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line">Vue.component(<span class="string">&#x27;my-component&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">props</span>: &#123;</span><br><span class="line">        <span class="comment">// 基础的类型检查 ( `null` 和 `undefined` 会通过任何类型验证)</span></span><br><span class="line">        <span class="attr">propA</span>: <span class="built_in">Number</span>,</span><br><span class="line">        <span class="comment">// 多个可能的类型</span></span><br><span class="line">        <span class="attr">propB</span>: [<span class="built_in">String</span>, <span class="built_in">Number</span>],</span><br><span class="line">        <span class="comment">// 必填的字符串</span></span><br><span class="line">        <span class="attr">propC</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="built_in">String</span>,</span><br><span class="line">            <span class="attr">required</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 带有默认值的数字</span></span><br><span class="line">        <span class="attr">propD</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="built_in">Number</span>,</span><br><span class="line">            <span class="attr">default</span>: <span class="number">100</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 带有默认值的对象</span></span><br><span class="line">        <span class="attr">propE</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="built_in">Object</span>,</span><br><span class="line">            <span class="comment">// 对象或数组默认值必须从一个工厂函数获取</span></span><br><span class="line">            <span class="attr">default</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    <span class="attr">message</span>: <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 自定义验证函数</span></span><br><span class="line">        <span class="attr">propF</span>: &#123;</span><br><span class="line">            <span class="attr">validator</span>: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 这个值必须匹配下列字符串中的一个</span></span><br><span class="line">                <span class="keyword">return</span> [<span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;warning&#x27;</span>, <span class="string">&#x27;danger&#x27;</span>].indexOf(value) !== -<span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>type 类型</p>
<ul>
<li>String</li>
<li>Number</li>
<li>Boolean</li>
<li>Array</li>
<li>Object</li>
<li>Date</li>
<li>Function</li>
<li>Symbol</li>
</ul>
<h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><p>常用于文本预处理</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在双花括号中 --&gt;</span></span><br><span class="line">&#123;&#123; message | capitalize &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 在 `v-bind` 中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">&quot;rawId | formatId&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 串联 --&gt;</span></span><br><span class="line">&#123;&#123; message | filterA | filterB &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 传参 --&gt;</span></span><br><span class="line">&#123;&#123; message | filterA(&#x27;arg1&#x27;, arg2) &#125;&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// JavaScript</span></span><br><span class="line"><span class="attr">filters</span>: &#123;</span><br><span class="line">    <span class="attr">capitalize</span>: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!value) <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        value = value.toString()</span><br><span class="line">        <span class="keyword">return</span> value.charAt(<span class="number">0</span>).toUpperCase() + value.slice(<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局过滤器</span></span><br><span class="line">Vue.filter(<span class="string">&#x27;capitalize&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!value) <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    value = value.toString()</span><br><span class="line">    <span class="keyword">return</span> value.charAt(<span class="number">0</span>).toUpperCase() + value.slice(<span class="number">1</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>learn</tag>
        <tag>code</tag>
      </tags>
  </entry>
  <entry>
    <title>游戏改变世界</title>
    <url>/2020/05/21/%E6%B8%B8%E6%88%8F%E6%94%B9%E5%8F%98%E4%B8%96%E7%95%8C/</url>
    <content><![CDATA[<h1 id="游戏改变世界"><a href="#游戏改变世界" class="headerlink" title="游戏改变世界"></a>游戏改变世界</h1><p>启示<br>及时反馈<br>不可预测<br>强社交性<br>一个成功的游戏就应该是有着文化内涵的，让人在游戏之外还能去讨论它。</p>
<p>现实已经破碎，我们需要用创造游戏来修复它。</p>
<p>协作的机制从强制变成自由<br>劳动的动机从自制变成游戏</p>
<p>我们真正害怕的不是游戏，而是在游戏结束、现实开始时迷失了方向。</p>
<p>抛开类型的差异和复杂的技术，所有的游戏都有 4 个决定性特征：目标、规则、反馈系统和自愿参与。<br>目标（goal），指的是玩家努力达成的具体结果。它吸引了玩家的注意力，不断调整他们的参与度。目标为玩家提供了“目的性”（sense of purpose）。<br>规则（rules），为玩家如何实现目标做出限制。它消除或限制了达成目标最明显的方式，推动玩家去探索此前未知的可能空间。规则可以释放玩家的创造力，培养玩家的策略性思维。<br>反馈系统（feedback system），告诉玩家距离实现目标还有多远。它通过点数、级别、得分、进度条等形式来反映。反馈系统最基本也最简单的形式，就是让玩家认识到一个客观结果：“等……的时候，游戏就结束了。”对玩家而言，实时反馈是一种承诺：目标绝对是可以达到的，它给了人们继续玩下去的动力。<br>自愿参与（voluntary participation），要求所有玩游戏的人都了解并愿意接受目标、规则和反馈。了解是建立多人游戏的共同基础。任意参与和离去的自由，则是为了保证玩家把游戏中蓄意设计的高压挑战工作视为安全且愉快的活动。</p>
<p>目标指的是玩家努力达成的具体结果；规则为玩家如何实现目标做出限制；反馈系统告诉玩家距离实现目标还有多远；自愿参与则要求所有玩家都了解并愿意接受目标、规则和反馈。</p>
<p>俄罗斯方块堆叠起来，就能得到三种反馈：</p>
<ul>
<li>一是视觉上的，你看到一排又一排的方块“噗噗”地消失；</li>
<li>二是数量上的，屏幕上的分数不断上涨；</li>
<li>三是性质上的，你感受到了持续上升的挑战性。</li>
</ul>
<p>心流(flow)：一旦进入心流状态，人们就像长久地停在那里，不管是放弃还是获胜，两种结果都同样无法让你心满意足。</p>
<p>有尽头的游戏：为了获胜而玩<br>无尽头的游戏：为了尽量长时间玩而玩</p>
<p>所有优秀的游戏都是艰苦的工作，是我们主动选择并乐在其中的工作。<br>创造性的成就和能力的提高带来的满足感和愉快感</p>
<p>游戏的七大艰苦之乐<br>高风险工作<br>重复工作<br>脑力工作<br>体力工作<br>探索性工作<br>团队工作<br>创造性工作</p>
<p>诱发心流  ：有明确目标行为方式或有既定规则，随着时间的推移难度和技能水平也提高的挑战性活动</p>
<p>创造幸福的力量<br>追求外在的奖励（金钱、物质、地位、赞许），注定会妨碍我们达成自身的幸福。<br>沉浸在自我奖励的艰苦工作中：自我激励&gt;&gt;艰苦的工作&gt;&gt;内在奖励&gt;&gt;持久幸福</p>
<p>让现实更美好<br>每一天都在渴望满意的工作<br>渴望体验成功，至少也是希望成功<br>渴望与社会建立联系<br>渴望过得有意义，渴望超越自身宏伟事业的一部分</p>
<p>我们真正需要的，是游戏能够超越让人短暂幸福的心流和自豪，提供一种更为持久的情感奖励；我们真正需要的，是哪怕不玩的时候仍能让我们幸福的游戏。只有这样，才能在游戏和现实生活中实现恰当的平衡。</p>
<p>成功的希望比成功本身更刺激</p>
<p>胜利往往终结乐趣，但失败能维持乐趣</p>
<p>向死而生，创伤后的幸福感</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows Terminal</title>
    <url>/2020/06/06/Windows%20Terminal/</url>
    <content><![CDATA[<h1 id="Windows-Terminal"><a href="#Windows-Terminal" class="headerlink" title="Windows Terminal"></a>Windows Terminal</h1><h2 id="启动路径配置"><a href="#启动路径配置" class="headerlink" title="启动路径配置"></a>启动路径配置</h2><p>在 Microsoft Store 安装 Windows Terminal、ubantu<br>打开配置文件，将用不到的环境设置 “hidden: true”, 增加新的环境。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;7882cb27-2b3b-4512-86ce-40b8bc6aff9c&#125;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;hidden&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;unen.xyz&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;commandline&quot;</span>: <span class="string">&quot;ssh root@47.112.162.128&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;icon&quot;</span>: <span class="string">&quot;C:\\icon\\ali.png&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="powershell-配置文件"><a href="#powershell-配置文件" class="headerlink" title="powershell 配置文件"></a>powershell 配置文件</h2><p>powershell 配置文件 <a class="link"   href="https://forsenergy.com/zh-cn/windowspowershellhelp/html/9c82251c-6f0d-416a-9c3c-77838218531b.htm" >参考<i class="fas fa-external-link-alt"></i></a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 显示路径</span></span><br><span class="line"><span class="meta">$</span><span class="bash">profile</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 判断是否存在配置文件 若不存在手动创建</span></span><br><span class="line">test-path $profile</span><br></pre></td></tr></table></figure>

<h3 id="python-wokon"><a href="#python-wokon" class="headerlink" title="python wokon"></a>python wokon</h3><p>启动 python 虚拟环境 <a class="link"   href="http://hk.uwenku.com/question/p-dnkemkwb-ew.html" >参考<i class="fas fa-external-link-alt"></i></a></p>
<p>workon 是批處理腳本。如果你從 PowerShell 運行它，它會在一個新的 CMD 子進程中啓動，在那裏做它的事情，然後退出並返回到 PowerShell 提示符。由於子進程無法修改其父進程，所以當您返回到 PowerShell 時，將丟失 workon.bat 所做的所有修改。</p>
<p>写入 Microsoft. PowerShell_profile.ps1</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">workon</span><span class="params">(<span class="variable">$environment</span>)</span></span> &#123;</span><br><span class="line">    &amp; cmd /k workon.bat <span class="variable">$environment</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="免密登录-ssh"><a href="#免密登录-ssh" class="headerlink" title="免密登录 ssh"></a>免密登录 ssh</h2><p>服务器、主机分别生成公钥、私钥对 <code>ssh-keygen</code><br>将主机的公钥 <code>id_rsa.pub</code> 发送到服务器，<br>在服务器 <code>.ssh/</code> 文件夹下执行</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">touch authorized_keys</span><br><span class="line">chmod <span class="number">600</span> authorized_keys</span><br><span class="line"><span class="built_in">cat</span> id_rsa.pub &gt;&gt; authorized_keys</span><br></pre></td></tr></table></figure>

<p>测试是否实现免密登录 <code>ssh root@xx.xxx.xxx.xxx</code></p>
<h2 id="树莓派"><a href="#树莓派" class="headerlink" title="树莓派"></a>树莓派</h2><p>开启 frp 参考<a class="link"   href="https://www.jianshu.com/p/00c79df1aaf0" >教程<i class="fas fa-external-link-alt"></i></a><br>启动命令 <code>./frpc -c ./frpc.ini</code><br>宝塔<a class="link"   href="https://www.bilibili.com/video/BV1kE411C7hz" >教程<i class="fas fa-external-link-alt"></i></a><br>开启宝塔 <code>sudo ./bt_run</code> 关闭宝塔 <code>./bt_prog kill</code> 端口:28888<br>开启 samba<a class="link"   href="https://tlanyan.me/setup-samba-in-raspberry-pi/" >教程<i class="fas fa-external-link-alt"></i></a><br>挂载 U 盘<a class="link"   href="https://zhuanlan.zhihu.com/p/35061575" >教程<i class="fas fa-external-link-alt"></i></a><br>有线替换 Wifi <code>取消路由器中PI ip和MAC的绑定、路由器禁用PI wifi、重启路由器有线连接PI、手动绑定ip和MAC</code><br>关闭灯、wifi<a class="link"   href="https://zhuanlan.zhihu.com/p/138038622" >link<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="默认管理员模式启动"><a href="#默认管理员模式启动" class="headerlink" title="默认管理员模式启动"></a>默认管理员模式启动</h3><p>新建快捷方式：目标改为 C:\Windows\System32\cmd.exe /c start /b wt<br>修改备注和图标后 加入 path 设为 t</p>
]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>learn</tag>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>当然我在胡扯</title>
    <url>/2020/12/30/%E5%BD%93%E7%84%B6%E6%88%91%E5%9C%A8%E8%83%A1%E6%89%AF/</url>
    <content><![CDATA[<h1 id="当然我在胡扯"><a href="#当然我在胡扯" class="headerlink" title="当然我在胡扯"></a>当然我在胡扯</h1><blockquote>
<p>对爱情的渴望，对知识的追求，对人类苦难不可遏制的同情心，这三种纯洁而无比强烈的激情支配着我的一生。这三种激情，就像飓风一样，在深深的苦海上，肆意地把我吹来吹去，吹到濒临绝望的边缘。—-罗素《我为什么活着》</p>
</blockquote>
<h2 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h2><p>当我们提到时间的时，前提是尊重，尊重自己的时间，尊重别人的时间。光阴似箭、白驹过隙的话不必重复，更想谈的是如何做正确的时间，做正确的事。</p>
<p>聊一下”抖音“，著名的时间”杀手”，由无数个简短的视频组成，无聊，无趣。但同时不可否认它的价值，为小镇青年和父辈们，提供了一个看见这光怪陆离的世界的窗口、一个消磨时间的途径，某种意义上也算是为”国泰民安“中的”民安“做了贡献。只是和一百年前的英法商人行为类似，某种一意义上一样在麻痹世人。</p>
<p>聊一下”开会“，之前看了关于谷歌的一本书《重新定义公司》，与时间相关的是”守时“和”出席必要的会议“，”守时“不必要谈，谈一下”出席必要的会议“。每一个参会者都应该积极主动参与、会议前查阅关于此次会议的相关资料，会议中主动参与发出自己的声音，会议后明确自己下一步要做的事。出席必要的会议，节省你的时间，节省他人的时间。</p>
<p>正确时间，做正确的事。我们经常会主动或被动参与一些活动。会议，上课，团建，聚餐等无趣的活动。</p>
<ul>
<li>关于会议和上课，很多时候我们对部分会议和课程不感兴趣，对新事物新知识新思想有抵触心理，你可以选择尝试去了解，集百家之长，成一家之言，不断完善自我对这个世界的认知，通过别人的眼睛去看这个世界。或者直接离开会议或课堂，去做自己该做的事。</li>
<li>关于团建和聚餐，说实话，真心不喜欢，太浪费时间了。但为了团队氛围和凝聚力，不得已戴着“面具”去组织或参加，去刻意引导大家参与，刻意引出话题让大家讨论，“面具”戴久了，似乎也就麻木了，挺讨厌这样的。相对而言，我更愿意用这些时间去学习新的事物，做一些好玩的事，享受做饭的过程，享受一个吃饭时看美剧和纪录片的时间。</li>
</ul>
<h2 id="团队·个人·工作"><a href="#团队·个人·工作" class="headerlink" title="团队·个人·工作"></a>团队·个人·工作</h2><p>团队。前两天向盛和塾的一位老师关于“是否放弃部分人”、“团队与个人的成长“和”输入与输出“三个问题进行了咨询，学到了很多，本质还是自身能力和修为不足，还有部分自私心在作祟。但现在的我不想成为工具人、不想成为”佛“去普渡众生。我自身有很多工作要做，很多东西要学，想通过自己努力去不断提升，永远把昨天的自己当做 SB。可以团队不一样，即使再努力也无法让一些人去突破，去成长为团队真正的一部分，而不是可有可无，可随时被替代的一员。自身的努力对团队的意义并不大，反而容易成为团队的工具人。哀莫大于心死，望诸君共勉。</p>
<p>个人。马斯洛的需求层次理论，也就是那个经典的金字塔，从底到高，分别是生理、安全、社交、尊重、自我实现。后期又增加了一个超自我实现，大意是个人充分满足自我实现后短暂的”高峰体验“。刚开始看马斯洛心理学相关的书籍时还不理解，后来在读《游戏改变世界》时才真正理解，不过换了个名字”心流(flow)“，心流是一种在实现自我价值时的一种状态，一旦进入心流状态，无论时成功或失败，都无法让你满意，保持高度的专注去实现自我突破。如何诱发心流 ：有明确目标行为方式或有既定规则，随着时间的推移难度和技能水平也提高的挑战性活动。举例：俄罗斯方块：</p>
<ul>
<li>视觉上的，你看到一排又一排的方块“噗噗”地消失；</li>
<li>数量上的，屏幕上的分数不断上涨；</li>
<li>性质上的，你感受到了持续上升的挑战性。</li>
</ul>
<p>工作。陪伴你一生最长的是工作，工作时不开心，那活着多累呀。我们是幸运的，至少中国多数 90 后是幸运的，接受了九年义务教育，之后又有幸读高中、大学。成为了中国 10%的大学生，5%的本科生，所以我们有了选择的权力，选择自己喜欢的工作，选择热爱的事业。工作的本质是创造价值，去回报老师的教育、亲人的养育、社会的宽容、国家的保护，工作的意义是通过你实现个人成就，创造价值时，同时恰好让这个世界变得好一点。我们上学时有明确的目标，及时的分数反馈，和家人老师的奖励，有这么多条件去帮助自我成长。工作时，多数人只是为了每月的工资在做无聊的坚持，在否定自我和浪费时间中艰难地煎熬度过。我们需要找到创造幸福的方法、动力的源泉，实现持久的激励和幸福。吾心即宇宙，所有的力量源于内心，每天叫醒自己的事自己的梦想，疲累时让自己坚持的是对成功的渴望，迷茫时唤醒自己的是人生的终极目标。当然你们可以觉得这是在洗脑，如标题所写，当然我在胡扯。</p>
<p>沉浸在自我奖励的艰苦工作中：自我激励&gt;&gt;艰苦的工作&gt;&gt;内在奖励&gt;&gt;持久幸福</p>
<p>让现实更美好</p>
<ul>
<li><p>每一天都在渴望满意的工作</p>
</li>
<li><p>渴望体验成功，至少也是希望成功</p>
</li>
<li><p>渴望与社会建立联系</p>
</li>
<li><p>渴望过得有意义，渴望超越自身宏伟事业的一部分</p>
</li>
</ul>
<h2 id="改变世界"><a href="#改变世界" class="headerlink" title="改变世界"></a>改变世界</h2><p>那些疯狂到以为自己能够改变世界的人，才能真正改变世界。</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>KK_68</title>
    <url>/2021/01/01/KK_68/</url>
    <content><![CDATA[<ul>
<li><p>Learn how to learn from those you disagree with, or even offend you. See if you can find the truth in what they believe.</p>
</li>
<li><p>Being enthusiastic is worth 25 IQ points.</p>
</li>
<li><p>Always demand a deadline. A deadline weeds out the extraneous and the ordinary. It prevents you from trying to make it perfect, so you have to make it different. Different is better.</p>
</li>
<li><p>Don’t be afraid to ask a question that may sound stupid because 99% of the time everyone else is thinking of the same question and is too embarrassed to ask it.</p>
</li>
<li><p>Being able to listen well is a superpower. While listening to someone you love keep asking them “Is there more?”, until there is no more.</p>
</li>
<li><p>A worthy goal for a year is to learn enough about a subject so that you can’t believe how ignorant you were a year earlier.</p>
</li>
<li><p>Gratitude will unlock all other virtues and is something you can get better at.</p>
</li>
<li><p>Treating a person to a meal never fails, and is so easy to do. It’s powerful with old friends and a great way to make new friends.</p>
</li>
<li><p>Don’t trust all-purpose glue.</p>
</li>
<li><p>Reading to your children regularly will bond you together and kickstart their imaginations.</p>
</li>
<li><p>Never use a credit card for credit. The only kind of credit, or debt, that is acceptable is debt to acquire something whose exchange value is extremely likely to increase, like in a home. The exchange value of most things diminishes or vanishes the moment you purchase them. Don’t be in debt to losers.</p>
</li>
<li><p>Pros are just amateurs who know how to gracefully recover from their mistakes.</p>
</li>
<li><p>Extraordinary claims should require extraordinary evidence to be believed.</p>
</li>
<li><p>Don’t be the smartest person in the room. Hangout with, and learn from, people smarter than yourself. Even better, find smart people who will disagree with you.</p>
</li>
<li><p>Rule of 3 in conversation. To get to the real reason, ask a person to go deeper than what they just said. Then again, and once more. The third time’s answer is close to the truth.</p>
</li>
<li><p>Don’t be the best. Be the only.</p>
</li>
<li><p>Everyone is shy. Other people are waiting for you to introduce yourself to them, they are waiting for you to send them an email, they are waiting for you to ask them on a date. Go ahead.</p>
</li>
<li><p>Don’t take it personally when someone turns you down. Assume they are like you: busy, occupied, distracted. Try again later. It’s amazing how often a second try works.</p>
</li>
<li><p>The purpose of a habit is to remove that action from self-negotiation. You no longer expend energy deciding whether to do it. You just do it. Good habits can range from telling the truth, to flossing.</p>
</li>
<li><p>Promptness is a sign of respect.</p>
</li>
<li><p>When you are young spend at least 6 months to one year living as poor as you can, owning as little as you possibly can, eating beans and rice in a tiny room or tent, to experience what your “worst” lifestyle might be. That way any time you have to risk something in the future you won’t be afraid of the worst case scenario.</p>
</li>
<li><p>Trust me: There is no “them”.</p>
</li>
<li><p>The more you are interested in others, the more interesting they find you. To be interesting, be interested.</p>
</li>
<li><p>Optimize your generosity. No one on their deathbed has ever regretted giving too much away.</p>
</li>
<li><p>To make something good, just do it. To make something great, just re-do it, re-do it, re-do it. The secret to making fine things is in remaking them.</p>
</li>
<li><p>The Golden Rule will never fail you. It is the foundation of all other virtues.</p>
</li>
<li><p>If you are looking for something in your house, and you finally find it, when you’re done with it, don’t put it back where you found it. Put it back where you first looked for it.</p>
</li>
<li><p>Saving money and investing money are both good habits. Small amounts of money invested regularly for many decades without deliberation is one path to wealth.</p>
</li>
<li><p>To make mistakes is human. To own your mistakes is divine. Nothing elevates a person higher than quickly admitting and taking personal responsibility for the mistakes you make and then fixing them fairly. If you mess up, fess up. It’s astounding how powerful this ownership is.</p>
</li>
<li><p>Never get involved in a land war in Asia.</p>
</li>
<li><p>You can obsess about serving your customers/audience/clients, or you can obsess about beating the competition. Both work, but of the two, obsessing about your customers will take you further.</p>
</li>
<li><p>Show up. Keep showing up. Somebody successful said: 99% of success is just showing up.</p>
</li>
<li><p>Separate the processes of creation from improving. You can’t write and edit, or sculpt and polish, or make and analyze at the same time. If you do, the editor stops the creator. While you invent, don’t select. While you sketch, don’t inspect. While you write the first draft, don’t reflect. At the start, the creator mind must be unleashed from judgement.</p>
</li>
<li><p>If you are not falling down occasionally, you are just coasting.</p>
</li>
<li><p>Perhaps the most counter-intuitive truth of the universe is that the more you give to others, the more you’ll get. Understanding this is the beginning of wisdom.</p>
</li>
<li><p>Friends are better than money. Almost anything money can do, friends can do better. In so many ways a friend with a boat is better than owning a boat.</p>
</li>
<li><p>This is true: It’s hard to cheat an honest man.</p>
</li>
<li><p>When an object is lost, 95% of the time it is hiding within arm’s reach of where it was last seen. Search in all possible locations in that radius and you’ll find it.</p>
</li>
<li><p>You are what you do. Not what you say, not what you believe, not how you vote, but what you spend your time on.</p>
</li>
<li><p>If you lose or forget to bring a cable, adapter or charger, check with your hotel. Most hotels now have a drawer full of cables, adapters and chargers others have left behind, and probably have the one you are missing. You can often claim it after borrowing it.</p>
</li>
<li><p>Hatred is a curse that does not affect the hated. It only poisons the hater. Release a grudge as if it was a poison.</p>
</li>
<li><p>There is no limit on better. Talent is distributed unfairly, but there is no limit on how much we can improve what we start with.</p>
</li>
<li><p>Be prepared: When you are 90% done any large project (a house, a film, an event, an app) the rest of the myriad details will take a second 90% to complete.</p>
</li>
<li><p>When you die you take absolutely nothing with you except your reputation.</p>
</li>
<li><p>Before you are old, attend as many funerals as you can bear, and listen. Nobody talks about the departed’s achievements. The only thing people will remember is what kind of person you were while you were achieving.</p>
</li>
<li><p>For every dollar you spend purchasing something substantial, expect to pay a dollar in repairs, maintenance, or disposal by the end of its life.</p>
</li>
</ul>
<p>+Anything real begins with the fiction of what could be. Imagination is therefore the most potent force in the universe, and a skill you can get better at. It’s the one skill in life that benefits from ignoring what everyone else knows.</p>
<ul>
<li><p>When crisis and disaster strike, don’t waste them. No problems, no progress.</p>
</li>
<li><p>On vacation go to the most remote place on your itinerary first, bypassing the cities. You’ll maximize the shock of otherness in the remote, and then later you’ll welcome the familiar comforts of a city on the way back.</p>
</li>
<li><p>When you get an invitation to do something in the future, ask yourself: would you accept this if it was scheduled for tomorrow? Not too many promises will pass that immediacy filter.</p>
</li>
<li><p>Don’t say anything about someone in email you would not be comfortable saying to them directly, because eventually they will read it.</p>
</li>
<li><p>If you desperately need a job, you are just another problem for a boss; if you can solve many of the problems the boss has right now, you are hired. To be hired, think like your boss.</p>
</li>
<li><p>Art is in what you leave out.</p>
</li>
<li><p>Acquiring things will rarely bring you deep satisfaction. But acquiring experiences will.</p>
</li>
<li><p>Rule of 7 in research. You can find out anything if you are willing to go seven levels. If the first source you ask doesn’t know, ask them who you should ask next, and so on down the line. If you are willing to go to the 7th source, you’ll almost always get your answer.</p>
</li>
<li><p>How to apologize: Quickly, specifically, sincerely.</p>
</li>
<li><p>Don’t ever respond to a solicitation or a proposal on the phone. The urgency is a disguise.</p>
</li>
<li><p>When someone is nasty, rude, hateful, or mean with you, pretend they have a disease. That makes it easier to have empathy toward them which can soften the conflict.</p>
</li>
<li><p>Eliminating clutter makes room for your true treasures.</p>
</li>
<li><p>You really don’t want to be famous. Read the biography of any famous person.</p>
</li>
<li><p>Experience is overrated. When hiring, hire for aptitude, train for skills. Most really amazing or great things are done by people doing them for the first time.</p>
</li>
<li><p>A vacation + a disaster = an adventure.</p>
</li>
<li><p>Buying tools: Start by buying the absolute cheapest tools you can find. Upgrade the ones you use a lot. If you wind up using some tool for a job, buy the very best you can afford.</p>
</li>
<li><p>Learn how to take a 20-minute power nap without embarrassment.</p>
</li>
<li><p>Following your bliss is a recipe for paralysis if you don’t know what you are passionate about. A better motto for most youth is “master something, anything”. Through mastery of one thing, you can drift towards extensions of that mastery that bring you more joy, and eventually discover where your bliss is.</p>
</li>
<li><p>I’m positive that in 100 years much of what I take to be true today will be proved to be wrong, maybe even embarrassingly wrong, and I try really hard to identify what it is that I am wrong about today.</p>
</li>
<li><p>Over the long term, the future is decided by optimists. To be an optimist you don’t have to ignore all the many problems we create; you just have to imagine improving our capacity to solve problems.</p>
</li>
<li><p>The universe is conspiring behind your back to make you a success. This will be much easier to do if you embrace this pronoia.</p>
</li>
</ul>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>KK</tag>
      </tags>
  </entry>
  <entry>
    <title>也谈人生-季承</title>
    <url>/2021/02/02/%E4%B9%9F%E8%B0%88%E4%BA%BA%E7%94%9F-%E5%AD%A3%E6%89%BF/</url>
    <content><![CDATA[<h1 id="也谈人生-季承"><a href="#也谈人生-季承" class="headerlink" title="也谈人生-季承"></a>也谈人生-季承</h1><p>谈论人生者多矣。</p>
<p>然而究竟什么是人生？答案必定众说纷纭。以我之见，人生是人的生命的一个过程。有始有终，有头有尾，明确无误。对每个个人说来，人生只有一次，而且为时甚短。而对于人的集<br>合体的人类说来则不同，它也有生命，也是有始有终。不过，它的周期要长得多。至于人类的生命是否只有一次，现在还不好说。</p>
<p>人生有没有意义？人类又有什么意义？我说，人生是有意义的，而人类则是没有意义的。询问人类的存在有没有意义，就等于询问地球或宇宙的存在有没有意义一样，是得不到答案的。</p>
<p>人生的意义是什么呢？它的意义就在于为没有意义的人类工作、服务等等，其目的不外乎是使人类生活得更好并得以延续。我这样说，恐怕会遭到反对，可是你细想一下，或许就会同意我的这种说法。</p>
<p>人生既有这样的意义，我们就要把它过好。如何过好一生，道理多了去了。几千年的人类文明史中探讨出来的人生之道也多了去了。我觉得，不管道理有千条万条，人生的最大意义是在于劳作，也就是劳动、工作。因为，只有每个人都劳作，个人才能生存，血脉才能延续，社会也才能生存、延续。所以，一个人既然获得了生命，活在世上，就要劳作，就要辛勤劳作，使自己得以生存，使家庭得以繁衍，使社会得以昌盛，使国家得以富强，使世界得以发展，也就是使人类得以存在并很好地延续。</p>
<p>所以说，劳作的人生意义大矣！</p>
<p>至于说人类的存在是没有意义的，或许会有许多人不赞成这种说法。我们不必为此展开辩论，更不必给对方扣什么大帽子。因为有意义也好，没有意义也好，反正人类是现实的存在，你又是其中一员，你有义务使它发展延续。你只要这样做了，你的人生就具有了意义，或者说价值，并不一定要去理会人类存在的意义。如此而已。阿门</p>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>KK_69</title>
    <url>/2021/04/19/KK_69/</url>
    <content><![CDATA[<ul>
<li><p>That thing that made you weird as a kid could make you great as an adult — if you don’t lose it.</p>
</li>
<li><p>If you have any doubt at all about being able to carry a load in one trip, do yourself a huge favor and make two trips.</p>
</li>
<li><p>What you get by achieving your goals is not as important as what you become by achieving your goals. At your funeral people will not recall what you did; they will only remember how you made them feel.</p>
</li>
<li><p>Recipe for success: under-promise and over-deliver.</p>
</li>
<li><p>It’s not an apology if it comes with an excuse. It is not a compliment if it comes with a request.</p>
</li>
<li><p>Jesus, Superman, and Mother Teresa never made art. Only imperfect beings can make art because art begins in what is broken.</p>
</li>
<li><p>If someone is trying to convince you it’s not a pyramid scheme, it’s a pyramid scheme.</p>
</li>
<li><p>Learn how to tie a bowline knot. Practice in the dark. With one hand. For the rest of your life you’ll use this knot more times than you would ever believe.</p>
</li>
<li><p>If something fails where you thought it would fail, that is not a failure.</p>
</li>
<li><p>Be governed not by the tyranny of the urgent but by the elevation of the important.</p>
</li>
<li><p>Leave a gate behind you the way you first found it.</p>
</li>
<li><p>The greatest rewards come from working on something that nobody has a name for. If you possibly can, work where there are no words for what you do.</p>
</li>
<li><p>A balcony or porch needs to be at least 6 feet (2m) deep or it won’t be used.</p>
</li>
<li><p>Don’t create things to make money; make money so you can create things. The reward for good work is more work.</p>
</li>
<li><p>In all things — except love — start with the exit strategy. Prepare for the ending. Almost anything is easier to get into than out of.</p>
</li>
<li><p>Train employees well enough they could get another job, but treat them well enough so they never want to.</p>
</li>
<li><p>Don’t aim to have others like you; aim to have them respect you.</p>
</li>
<li><p>The foundation of maturity: Just because it’s not your fault doesn’t mean it’s not your responsibility.</p>
</li>
<li><p>A multitude of bad ideas is necessary for one good idea.</p>
</li>
<li><p>Being wise means having more questions than answers.</p>
</li>
<li><p>Compliment people behind their back. It’ll come back to you.</p>
</li>
<li><p>Most overnight successes — in fact any significant successes — take at least 5 years. Budget your life accordingly.</p>
</li>
<li><p>You are only as young as the last time you changed your mind.</p>
</li>
<li><p>Assume anyone asking for your account information for any reason is guilty of scamming you, unless proven innocent. The way to prove innocence is to call them back, or login to your account using numbers or a website that you provide, not them. Don’t release any identifying information while they are contacting you via phone, message or email. You must control the channel.</p>
</li>
<li><p>Sustained outrage makes you stupid.</p>
</li>
<li><p>Be strict with yourself and forgiving of others. The reverse is hell for everyone.</p>
</li>
<li><p>Your best response to an insult is “You’re probably right.” Often they are.</p>
</li>
<li><p>The worst evils in history have always been committed by those who truly believed they were combating evil. Beware of combating evil.</p>
</li>
<li><p>If you can avoid seeking approval of others, your power is limitless.</p>
</li>
<li><p>When a child asks an endless string of “why?” questions, the smartest reply is, “I don’t know, what do you think?”</p>
</li>
<li><p>To be wealthy, accumulate all those things that money can’t buy.</p>
</li>
<li><p>Be the change you wish to see.</p>
</li>
<li><p>When brainstorming, improvising, jamming with others, you’ll go much further and deeper if you build upon each contribution with a playful “yes — and” example instead of a deflating “no — but” reply.</p>
</li>
<li><p>Work to become, not to acquire.</p>
</li>
<li><p>Don’t loan money to a friend unless you are ready to make it a gift.</p>
</li>
<li><p>On the way to a grand goal, celebrate the smallest victories as if each one were the final goal. No matter where it ends you are victorious.</p>
</li>
<li><p>Calm is contagious.</p>
</li>
<li><p>Even a foolish person can still be right about most things. Most conventional wisdom is true.</p>
</li>
<li><p>Always cut away from yourself.</p>
</li>
<li><p>Show me your calendar and I will tell you your priorities. Tell me who your friends are, and I’ll tell you where you’re going.</p>
</li>
<li><p>When hitchhiking, look like the person you want to pick you up.</p>
</li>
<li><p>Contemplating the weaknesses of others is easy; contemplating the weaknesses in yourself is hard, but it pays a much higher reward.</p>
</li>
<li><p>Worth repeating: measure twice, cut once.</p>
</li>
<li><p>Your passion in life should fit you exactly; but your purpose in life should exceed you. Work for something much larger than yourself.</p>
</li>
<li><p>If you can’t tell what you desperately need, it’s probably sleep.</p>
</li>
<li><p>When playing Monopoly, spend all you have to buy, barter, or trade for the Orange properties. Don’t bother with Utilities.</p>
</li>
<li><p>If you borrow something, try to return it in better shape than you received it. Clean it, sharpen it, fill it up.</p>
</li>
<li><p>Even in the tropics it gets colder at night than you think. Pack warmly.</p>
</li>
<li><p>To quiet a crowd or a drunk, just whisper.</p>
</li>
<li><p>Writing down one thing you are grateful for each day is the cheapest possible therapy ever.</p>
</li>
<li><p>When someone tells you something is wrong, they’re usually right. When someone tells you how to fix it, they’re usually wrong.</p>
</li>
<li><p>If you think you saw a mouse, you did. And, if there is one, there are more.</p>
</li>
<li><p>Money is overrated. Truly new things rarely need an abundance of money. If that was so, billionaires would have a monopoly on inventing new things, and they don’t. Instead almost all breakthroughs are made by those who lack money, because they are forced to rely on their passion, persistence and ingenuity to figure out new ways. Being poor is an advantage in innovation.</p>
</li>
<li><p>Ignore what others may be thinking of you, because they aren’t.</p>
</li>
<li><p>Avoid hitting the snooze button. That’s just training you to oversleep.</p>
</li>
<li><p>Always say less than necessary.</p>
</li>
<li><p>You are given the gift of life in order to discover what your gift <em>in</em> life is. You will complete your mission when you figure out what your mission is. This is not a paradox. This is the way.</p>
</li>
<li><p>Don’t treat people as bad as they are. Treat them as good as you are.</p>
</li>
<li><p>It is much easier to change how you think by changing your behavior, than it is to change your behavior by changing how you think. Act out the change you seek.</p>
</li>
<li><p>You can eat any dessert you want if you take only 3 bites.</p>
</li>
<li><p>Each time you reach out to people, bring them a blessing; then they’ll be happy to see you when you bring them a problem.</p>
</li>
<li><p>Bad things can happen fast, but almost all good things happen slowly.</p>
</li>
<li><p>Don’t worry how or where you begin. As long as you keep moving, your success will be far from where you start.</p>
</li>
<li><p>When you confront a stuck bolt or screw: righty tighty, lefty loosey.</p>
</li>
<li><p>If you meet a jerk, overlook them. If you meet jerks everywhere everyday, look deeper into yourself.</p>
</li>
<li><p>Dance with your hips.</p>
</li>
<li><p>We are not bodies that temporarily have souls. We are souls that temporarily have bodies.</p>
</li>
<li><p>You can reduce the annoyance of someone’s stupid belief by increasing your understanding of why they believe it.</p>
</li>
<li><p>If your goal does not have a schedule, it is a dream.</p>
</li>
<li><p>All the greatest gains in life — in wealth, relationships, or knowledge —come from the magic of compounding interest — amplifying small steady gains. All you need for abundance is to keep adding 1% more than you subtract on a regular basis.</p>
</li>
<li><p>The greatest breakthroughs are missed because they look like hard work.</p>
</li>
<li><p>People can’t remember more than 3 points from a speech.</p>
</li>
<li><p>I have never met a person I admired who did not read more books than I did.</p>
</li>
<li><p>The greatest teacher is called “doing”.</p>
</li>
<li><p>Finite games are played to win or lose. Infinite games are played to keep the game going. Seek out infinite games because they yield infinite rewards.</p>
</li>
<li><p>Everything is hard before it is easy. The day before something is a breakthrough, it’s a stupid idea.</p>
</li>
<li><p>A problem that can be solved with money is not really a problem.</p>
</li>
<li><p>When you are stuck, sleep on it. Let your subconscious work for you.</p>
</li>
<li><p>Your work will be endless, but your time is finite. You cannot limit the work so you must limit your time. Hours are the only thing you can manage.</p>
</li>
<li><p>To succeed, get other people to pay you; to become wealthy, help other people to succeed.</p>
</li>
<li><p>Children totally accept — and crave — family rules. “In our family we have a rule for X” is the only excuse a parent needs for setting a family policy. In fact, “I have a rule for X” is the only excuse you need for your own personal policies.</p>
</li>
<li><p>All guns are loaded.</p>
</li>
<li><p>Many backward steps are made by standing still.</p>
</li>
<li><p>This is the best time ever to make something. None of the greatest, coolest creations 20 years from now have been invented yet. You are not late.</p>
</li>
<li><p>No rain, no rainbow.</p>
</li>
<li><p>Every person you meet knows an amazing lot about something you know virtually nothing about. Your job is to discover what it is, and it won’t be obvious.</p>
</li>
<li><p>You don’t marry a person, you marry a family.</p>
</li>
<li><p>Always give credit, take blame.</p>
</li>
<li><p>Be frugal in all things, except in your passions splurge.</p>
</li>
<li><p>When making something, always get a few extras — extra material, extra parts, extra space, extra finishes. The extras serve as backups for mistakes, reduce stress, and fill your inventory for the future. They are the cheapest insurance.</p>
</li>
<li><p>Something does not need to be perfect to be wonderful. Especially weddings.</p>
</li>
<li><p>Don’t let your email inbox become your to-do list.</p>
</li>
<li><p>The best way to untangle a knotty tangle is not to “untie” the knots, but to keep pulling the loops apart wider and wider. Just make the mess as big, loose and open as possible. As you open up the knots they will unravel themselves. Works on cords, strings, hoses, yarns, or electronic cables.</p>
</li>
<li><p>Be a good ancestor. Do something a future generation will thank you for. A simple thing is to plant a tree.</p>
</li>
<li><p>To combat an adversary, become their friend.</p>
</li>
<li><p>Take one simple thing — almost anything — but take it extremely seriously, as if it was the only thing in the world, or maybe the entire world is in it — and by taking it seriously you’ll light up the sky.</p>
</li>
<li><p>History teaches us that in 100 years from now some of the assumptions you believed will turn out to be wrong. A good question to ask yourself today is “What might I be wrong about?”</p>
</li>
<li><p>Be nice to your children because they are going to choose your nursing home.</p>
</li>
<li><p>Advice like these are not laws. They are like hats. If one doesn’t fit, try another.</p>
</li>
</ul>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>KK</tag>
      </tags>
  </entry>
  <entry>
    <title>前端</title>
    <url>/2021/05/01/%E5%89%8D%E7%AB%AF/</url>
    <content><![CDATA[<h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><h3 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h3><p>IntersectionObserver API 监听元素是否到当前窗口的事件 <a class="link"   href="https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry/isIntersecting" >isIntersecting<i class="fas fa-external-link-alt"></i></a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> observer = <span class="keyword">new</span> IntersectionObserver(<span class="function">(<span class="params">changes</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// changes: 目标元素集合</span></span><br><span class="line">  changes.forEach(<span class="function">(<span class="params">change</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// intersectionRatio</span></span><br><span class="line">    <span class="keyword">if</span> (change.isIntersecting) &#123;</span><br><span class="line">      <span class="keyword">const</span> img = change.target;</span><br><span class="line">      img.src = img.dataset.src;</span><br><span class="line">      observer.unobserve(img);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">observer.observe(img);</span><br></pre></td></tr></table></figure>

<p>或者直接用LazyLoading 属性，<code>&lt;img src=&quot;abc.jpg&quot; loading=&quot;lazy&quot; /&gt;</code>，目前兼容性较差。</p>
<h3 id="防抖与节流"><a href="#防抖与节流" class="headerlink" title="防抖与节流"></a>防抖与节流</h3><blockquote>
<p>clearTimeout(timer) 清除定时器，timer = null 修改timer的指向，不影响定时器</p>
</blockquote>
<h4 id="防抖-debounce"><a href="#防抖-debounce" class="headerlink" title="防抖(debounce)"></a>防抖(debounce)</h4><p>触发高频事件后n秒内函数只会执行一次（触发最后一次事件），如果n秒内高频事件再次被触发，则重新计算时间。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 防抖函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span> (<span class="params">fn, wait</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> timer;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (timer) &#123; <span class="built_in">clearTimeout</span>(timer) &#125;</span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            fn.apply(<span class="built_in">this</span>, <span class="built_in">arguments</span>)</span><br><span class="line">        &#125;, wait);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 高频事件停止触发后500ms 开始执行</span></span><br><span class="line"><span class="keyword">const</span> cld = debounce(<span class="built_in">console</span>.log, <span class="number">500</span>)</span><br><span class="line">cld(<span class="number">123</span>)</span><br><span class="line">cld(<span class="number">456</span>)</span><br></pre></td></tr></table></figure>

<h4 id="节流-throttle"><a href="#节流-throttle" class="headerlink" title="节流(throttle)"></a>节流(throttle)</h4><p>高频事件触发，但在n秒内只会执行一次，所以节流会稀释函数的执行频率</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle</span> (<span class="params">fn, wait</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> timer;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (timer) <span class="keyword">return</span>;</span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            timer = <span class="literal">null</span></span><br><span class="line">            fn.apply(<span class="built_in">this</span>, <span class="built_in">arguments</span>)</span><br><span class="line">        &#125;, wait);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 稀释，高频事件500ms执行一次</span></span><br><span class="line"><span class="keyword">const</span> clt = throttle(<span class="built_in">console</span>.log, <span class="number">1000</span>)</span><br><span class="line"><span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    clt(<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">&#125;, <span class="number">10</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="数组转树结构"><a href="#数组转树结构" class="headerlink" title="数组转树结构"></a>数组转树结构</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> flatArr = [</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;0111&#x27;</span>, <span class="attr">parentId</span>: <span class="string">&#x27;011&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;节点1-1-1&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;011&#x27;</span>, <span class="attr">parentId</span>: <span class="string">&#x27;01&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;节点1-1&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;01&#x27;</span>, <span class="attr">parentId</span>: <span class="number">0</span>, <span class="attr">name</span>: <span class="string">&#x27;节点1&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;02&#x27;</span>, <span class="attr">parentId</span>: <span class="number">0</span>, <span class="attr">name</span>: <span class="string">&#x27;节点2&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;022&#x27;</span>, <span class="attr">parentId</span>: <span class="string">&#x27;02&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;节点2-2&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;023&#x27;</span>, <span class="attr">parentId</span>: <span class="string">&#x27;02&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;节点2-3&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;0222&#x27;</span>, <span class="attr">parentId</span>: <span class="string">&#x27;022&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;节点2-2-2&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;03&#x27;</span>, <span class="attr">parentId</span>: <span class="number">0</span>, <span class="attr">name</span>: <span class="string">&#x27;节点3&#x27;</span> &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getData</span> (<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 利用两层filter实现</span></span><br><span class="line">  <span class="keyword">let</span> data = arr.filter(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    item.children = arr.filter(<span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> item.id === e.parentId</span><br><span class="line">    &#125;) || []</span><br><span class="line">    <span class="comment">// 第一层 筛选 parentId 为 0 </span></span><br><span class="line">    <span class="keyword">return</span> !item.parentId</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> data</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> res = getData(flatArr)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;res&#x27;</span>, res)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h3><p>cookie 不同端口号共享，根据同源策略cookie是区分端口，对于浏览器cookie区分域名不区分端口，可以共享。</p>
]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>code</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS</title>
    <url>/2021/06/06/CSS/</url>
    <content><![CDATA[<h3 id="grid-布局"><a href="#grid-布局" class="headerlink" title="grid 布局"></a>grid 布局</h3><p><a class="link"   href="https://ishadeed.com/article/css-grid-area/#header-layout" >https://ishadeed.com/article/css-grid-area/#header-layout<i class="fas fa-external-link-alt"></i></a></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span></span></span><br><span class="line"><span class="tag">        <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.page</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">display</span>: grid;</span></span><br><span class="line"><span class="css">        grid-template-<span class="attribute">columns</span>: <span class="number">200px</span> <span class="number">1</span>fr;</span></span><br><span class="line"><span class="css">        grid-template-areas:</span></span><br><span class="line"><span class="css">            <span class="string">&quot;header header&quot;</span></span></span><br><span class="line"><span class="css">            <span class="string">&quot;sidebar  main&quot;</span></span></span><br><span class="line"><span class="css">            <span class="string">&quot;footer footer&quot;</span>;</span></span><br><span class="line"><span class="css">        gap: <span class="number">1rem</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="css">        grid-area: header;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.sidebar</span> &#123;</span></span><br><span class="line"><span class="css">        grid-area: sidebar;</span></span><br><span class="line"><span class="css">        <span class="attribute">min-height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: blueviolet;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.main</span> &#123;</span></span><br><span class="line"><span class="css">        grid-area: main;</span></span><br><span class="line"><span class="css">        <span class="attribute">min-height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: brown;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.footer</span> &#123;</span></span><br><span class="line"><span class="css">        grid-area: footer;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: chartreuse;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;page&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sidebar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>frontend</category>
      </categories>
      <tags>
        <tag>frontend</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>Python</title>
    <url>/2021/10/01/Python/</url>
    <content><![CDATA[<h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><h2 id="环境管理"><a href="#环境管理" class="headerlink" title="环境管理"></a>环境管理</h2><p>uv</p>
<h2 id="Lib"><a href="#Lib" class="headerlink" title="Lib"></a>Lib</h2><h3 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h3><h3 id="django-ninja"><a href="#django-ninja" class="headerlink" title="django-ninja"></a>django-ninja</h3><p><a class="link"   href="https://github.com/vitalik/django-ninja" >https://github.com/vitalik/django-ninja<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="django-ninja-crud"><a href="#django-ninja-crud" class="headerlink" title="django-ninja-crud"></a>django-ninja-crud</h3><p><a class="link"   href="https://github.com/hbakri/django-ninja-crud" >https://github.com/hbakri/django-ninja-crud<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h3><p>helium</p>
<h3 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h3><h4 id="pyvis"><a href="#pyvis" class="headerlink" title="pyvis"></a>pyvis</h4><p>生成图数据库界面</p>
<p><a class="link"   href="https://github.com/WestHealth/pyvis" >https://github.com/WestHealth/pyvis<i class="fas fa-external-link-alt"></i></a></p>
<p><a class="link"   href="https://github.com/visjs/vis-network" >https://github.com/visjs/vis-network<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>code</tag>
      </tags>
  </entry>
  <entry>
    <title>Software</title>
    <url>/2022/01/07/Software/</url>
    <content><![CDATA[<h3 id="unlock-windows-pc-fingerprint-scanner-android"><a href="#unlock-windows-pc-fingerprint-scanner-android" class="headerlink" title="unlock-windows-pc-fingerprint-scanner-android"></a>unlock-windows-pc-fingerprint-scanner-android</h3><p><a class="link"   href="https://www.xda-developers.com/unlock-windows-pc-fingerprint-scanner-android/" >unlock-windows-pc-fingerprint-scanner-android<i class="fas fa-external-link-alt"></i></a></p>
<p> Windows Fingerprint Credential module &amp; Remote Fingerprint Unlocker</p>
]]></content>
      <categories>
        <category>software</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>software</tag>
      </tags>
  </entry>
  <entry>
    <title>KK_70</title>
    <url>/2022/04/28/KK_70/</url>
    <content><![CDATA[<ul>
<li><p>About 99% of the time, the right time is right now.</p>
</li>
<li><p>No one is as impressed with your possessions as you are.</p>
</li>
<li><p>Dont ever work for someone you dont want to become.</p>
</li>
<li><p>Cultivate 12 people who love you, because they are worth more than 12 million people who like you.</p>
</li>
<li><p>Dont keep making the same mistakes; try to make new mistakes.</p>
</li>
<li><p>If you stop to listen to a musician or street performer for more than a minute, you owe them a dollar.</p>
</li>
<li><p>Anything you say before the word “but” does not count.</p>
</li>
<li><p>When you forgive others, they may not notice, but you will heal. Forgiveness is not something we do for others; it is a gift to ourselves.</p>
</li>
<li><p>Courtesy costs nothing. Lower the toilet seat after use. Let the people in the elevator exit before you enter. Return shopping carts to their designated areas. When you borrow something, return it better shape (filled up, cleaned) than when you got it.</p>
</li>
<li><p>Whenever there is an argument between two sides, find the third side.</p>
</li>
<li><p>Efficiency is highly overrated; Goofing off is highly underrated. Regularly scheduled sabbaths, sabbaticals, vacations, breaks, aimless walks and time off are essential for top performance of any kind. The best work ethic requires a good rest ethic.</p>
</li>
<li><p>When you lead, your real job is to create more leaders, not more followers.</p>
</li>
<li><p>Criticize in private, praise in public.</p>
</li>
<li><p>Life lessons will be presented to you in the order they are needed. Everything you need to master the lesson is within you. Once you have truly learned a lesson, you will be presented with the next one. If you are alive, that means you still have lessons to learn.</p>
</li>
<li><p>It is the duty of a student to get everything out of a teacher, and the duty of a teacher to get everything out of a student.</p>
</li>
<li><p>If winning becomes too important in a game, change the rules to make it more fun. Changing rules can become the new game.</p>
</li>
<li><p>Ask funders for money, and they’ll give you advice; but ask for advice and they’ll give you money.</p>
</li>
<li><p>Productivity is often a distraction. Don’t aim for better ways to get through your tasks as quickly as possible, rather aim for better tasks that you never want to stop doing.</p>
</li>
<li><p>Immediately pay what you owe to vendors, workers, contractors. They will go out of their way to work with you first next time.</p>
</li>
<li><p>The biggest lie we tell ourselves is “I dont need to write this down because I will remember it.”</p>
</li>
<li><p>Your growth as a conscious being is measured by the number of uncomfortable conversations you are willing to have.</p>
</li>
<li><p>Speak confidently as if you are right, but listen carefully as if you are wrong.</p>
</li>
<li><p>Handy measure: the distance between your fingertips of your outstretched arms at shoulder level is your height.</p>
</li>
<li><p>The consistency of your endeavors (exercise, companionship, work) is more important than the quantity. Nothing beats small things done every day, which is way more important than what you do occasionally.</p>
</li>
<li><p>Making art is not selfish; it’s for the rest of us. If you don’t do your thing, you are cheating us.</p>
</li>
<li><p>Never ask a woman if she is pregnant. Let her tell you if she is.</p>
</li>
<li><p>Three things you need: The ability to not give up something till it works, the ability to give up something that does not work, and the trust in other people to help you distinguish between the two.</p>
</li>
<li><p>When public speaking, pause frequently. Pause before you say something in a new way, pause after you have said something you believe is important, and pause as a relief to let listeners absorb details.</p>
</li>
<li><p>There is no such thing as being “on time.” You are either late or you are early. Your choice.</p>
</li>
<li><p>Ask anyone you admire: Their lucky breaks happened on a detour from their main goal. So embrace detours. Life is not a straight line for anyone.</p>
</li>
<li><p>The best way to get a correct answer on the internet is to post an obviously wrong answer and wait for someone to correct you.</p>
</li>
<li><p>You’ll get 10x better results by elevating good behavior rather than punishing bad behavior, especially in children and animals.</p>
</li>
<li><p>Spend as much time crafting the subject line of an email as the message itself because the subject line is often the only thing people read.</p>
</li>
<li><p>Don’t wait for the storm to pass; dance in the rain.</p>
</li>
<li><p>When checking references for a job applicant, employers may be reluctant or prohibited from saying anything negative, so leave or send a message that says, “Get back to me if you highly recommend this applicant as super great.” If they don’t reply take that as a negative.</p>
</li>
<li><p>Use a password manager: Safer, easier, better.</p>
</li>
<li><p>Half the skill of being educated is learning what you can ignore.</p>
</li>
<li><p>The advantage of a ridiculously ambitious goal is that it sets the bar very high so even in failure it may be a success measured by the ordinary.</p>
</li>
<li><p>A great way to understand yourself is to seriously reflect on everything you find irritating in others.</p>
</li>
<li><p>Keep all your things visible in a hotel room, not in drawers, and all gathered into one spot. That way you’ll never leave anything behind. If you need to have something like a charger off to the side, place a couple of other large items next to it, because you are less likely to leave 3 items behind than just one.</p>
</li>
<li><p>Denying or deflecting a compliment is rude. Accept it with thanks, even if you believe it is not deserved.</p>
</li>
<li><p>Always read the plaque next to the monument.</p>
</li>
<li><p>When you have some success, the feeling of being an imposter can be real. Who am I fooling? But when you create things that only you — with your unique talents and experience — can do, then you are absolutely not an imposter. You are the ordained. It is your duty to work on things that only you can do.</p>
</li>
<li><p>What you do on your bad days matters more than what you do on your good days.</p>
</li>
<li><p>Make stuff that is good for people to have.</p>
</li>
<li><p>When you open paint, even a tiny bit, it will always find its way to your clothes no matter how careful you are. Dress accordingly.</p>
</li>
<li><p>To keep young kids behaving on a car road trip, have a bag of their favorite candy and throw a piece out the window each time they misbehave.</p>
</li>
<li><p>You cannot get smart people to work extremely hard just for money.</p>
</li>
<li><p>When you don’t know how much to pay someone for a particular task, ask them “what would be fair” and their answer usually is.</p>
</li>
<li><p>90% of everything is crap. If you think you don’t like opera, romance novels, TikTok, country music, vegan food, NFTs, keep trying to see if you can find the 10% that is not crap.</p>
</li>
<li><p>You will be judged on how well you treat those who can do nothing for you.</p>
</li>
<li><p>We tend to overestimate what we can do in a day, and underestimate what we can achieve in a decade. Miraculous things can be accomplished if you give it ten years. A long game will compound small gains to overcome even big mistakes.</p>
</li>
<li><p>Thank a teacher who changed your life.</p>
</li>
<li><p>You cant reason someone out of a notion that they didn’t reason themselves into.</p>
</li>
<li><p>Your best job will be one that you were unqualified for because it stretches you. In fact only apply to jobs you are unqualified for.</p>
</li>
<li><p>Buy used books. They have the same words as the new ones. Also libraries.</p>
</li>
<li><p>You can be whatever you want, so be the person who ends meetings early.</p>
</li>
<li><p>A wise man said, “Before you speak, let your words pass through three gates. At the first gate, ask yourself, “Is it true?” At the second gate ask, “Is it necessary?” At the third gate ask, “Is it kind?”</p>
</li>
<li><p>Take the stairs.</p>
</li>
<li><p>What you actually pay for something is at least twice the listed price because of the energy, time, money needed to set it up, learn, maintain, repair, and dispose of at the end. Not all prices appear on labels. Actual costs are 2x listed prices.</p>
</li>
<li><p>When you arrive at your room in a hotel, locate the emergency exits. It only takes a minute.</p>
</li>
<li><p>The only productive way to answer “what should I do now?” is to first tackle the question of “who should I become?”</p>
</li>
<li><p>Average returns sustained over an above-average period of time yield extraordinary results. Buy and hold.</p>
</li>
<li><p>It’s thrilling to be extremely polite to rude strangers.</p>
</li>
<li><p>It’s possible that a not-so smart person, who can communicate well, can do much better than a super smart person who can’t communicate well. That is good news because it is much easier to improve your communication skills than your intelligence.</p>
</li>
<li><p>Getting cheated occasionally is the small price for trusting the best of everyone, because when you trust the best in others, they generally treat you best.</p>
</li>
<li><p>Art is whatever you can get away with.</p>
</li>
<li><p>For the best results with your children, spend only half the money you think you should, but double the time with them.</p>
</li>
<li><p>Purchase the most recent tourist guidebook to your home town or region. You’ll learn a lot by playing the tourist once a year.</p>
</li>
<li><p>Dont wait in line to eat something famous. It is rarely worth the wait.</p>
</li>
<li><p>To rapidly reveal the true character of a person you just met, move them onto an abysmally slow internet connection. Observe.</p>
</li>
<li><p>Prescription for popular success: do something strange. Make a habit of your weird.</p>
</li>
<li><p>Be a pro. Back up your back up. Have at least one physical backup and one backup in the cloud. Have more than one of each. How much would you pay to retrieve all your data, photos, notes, if you lost them? Backups are cheap compared to regrets.</p>
</li>
<li><p>Dont believe everything you think you believe.</p>
</li>
<li><p>To signal an emergency, use the rule of three; 3 shouts, 3 horn blasts, or 3 whistles.</p>
</li>
<li><p>At a restaurant do you order what you know is great, or do you try something new? Do you make what you know will sell or try something new? Do you keep dating new folks or try to commit to someone you already met? The optimal balance for exploring new things vs exploiting them once found is: 1/3. Spend 1/3 of your time on exploring and 2/3 time on deepening. It is harder to devote time to exploring as you age because it seems unproductive, but aim for 1/3.</p>
</li>
<li><p>Actual great opportunities do not have “Great Opportunities” in the subject line.</p>
</li>
<li><p>When introduced to someone make eye contact and count to 4. You’ll both remember each other.</p>
</li>
<li><p>Take note if you find yourself wondering “Where is my good knife? Or, where is my good pen?” That means you have bad ones. Get rid of those.</p>
</li>
<li><p>When you are stuck, explain your problem to others. Often simply laying out a problem will present a solution. Make “explaining the problem” part of your troubleshooting process.</p>
</li>
<li><p>When buying a garden hose, an extension cord, or a ladder, get one substantially longer than you think you need. It’ll be the right size.</p>
</li>
<li><p>Dont bother fighting the old; just build the new.</p>
</li>
<li><p>Your group can achieve great things way beyond your means simply by showing people that they are appreciated.</p>
</li>
<li><p>When someone tells you about the peak year of human history, the period of time when things were good before things went downhill, it will always be the years of when they were 10 years old — which is the peak of any human’s existence.</p>
</li>
<li><p>You are as big as the things that make you angry.</p>
</li>
<li><p>When speaking to an audience it’s better to fix your gaze on a few people than to “spray” your gaze across the room. Your eyes telegraph to others whether you really believe what you are saying.</p>
</li>
<li><p>Habit is far more dependable than inspiration. Make progress by making habits. Dont focus on getting into shape. Focus on becoming the kind of person who never misses a workout.</p>
</li>
<li><p>When negotiating, dont aim for a bigger piece of the pie; aim to create a bigger pie.</p>
</li>
<li><p>If you repeated what you did today 365 more times will you be where you want to be next year?</p>
</li>
<li><p>You see only 2% of another person, and they see only 2% of you. Attune yourselves to the hidden 98%.</p>
</li>
<li><p>Your time and space are limited. Remove, give away, throw out things in your life that dont spark joy any longer in order to make room for those that do.</p>
</li>
<li><p>Our descendants will achieve things that will amaze us, yet a portion of what they will create could have been made with today’s materials and tools if we had had the imagination. Think bigger.</p>
</li>
<li><p>For a great payoff be especially curious about the things you are not interested in.</p>
</li>
<li><p>Focus on directions rather than destinations. Who knows their destiny? But maintain the right direction and you’ll arrive at where you want to go.</p>
</li>
<li><p>Every breakthrough is at first laughable and ridiculous. In fact if it did not start out laughable and ridiculous, it is not a breakthrough.</p>
</li>
<li><p>If you loan someone $20 and you never see them again because they are avoiding paying you back, that makes it worth $20.</p>
</li>
<li><p>Copying others is a good way to start. Copying yourself is a disappointing way to end.</p>
</li>
<li><p>The best time to negotiate your salary for a new job is the moment AFTER they say they want you, and not before. Then it becomes a game of chicken for each side to name an amount first, but it is to your advantage to get them to give a number before you do.</p>
</li>
<li><p>Rather than steering your life to avoid surprises, aim directly for them.</p>
</li>
<li><p>Dont purchase extra insurance if you are renting a car with a credit card.</p>
</li>
<li><p>If your opinions on one subject can be predicted from your opinions on another, you may be in the grip of an ideology. When you truly think for yourself your conclusions will not be predictable.</p>
</li>
<li><p>Aim to die broke. Give to your beneficiaries before you die; it’s more fun and useful. Spend it all. Your last check should go to the funeral home and it should bounce.</p>
</li>
<li><p>The chief prevention against getting old is to remain astonished.</p>
</li>
</ul>
]]></content>
      <categories>
        <category>read</category>
      </categories>
      <tags>
        <tag>read</tag>
        <tag>KK</tag>
      </tags>
  </entry>
  <entry>
    <title>终端</title>
    <url>/2022/06/06/%E7%BB%88%E7%AB%AF/</url>
    <content><![CDATA[<h1 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h1><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h3 id="git-bash"><a href="#git-bash" class="headerlink" title="git bash"></a>git bash</h3><p>安装git，添加到path。</p>
<p>Windows Terminal(简称WT)中新增 名称 <code>Git Bash</code>(自定义)，命令行<code>C:\wk\Code\Git\bin\bash.exe --login -i</code>，配置图标和路径。</p>
<p>在WT<code>启动</code>选项卡，设置为默认配置文件。</p>
<h4 id="git-prompt-sh"><a href="#git-prompt-sh" class="headerlink" title="git-prompt.sh"></a>git-prompt.sh</h4><p>自定义终端显示，修改安装目录中的<code>git-prompt.sh</code>文件，参考<a class="link"   href="https://zhuanlan.zhihu.com/p/340003720sss" >PS1配置<i class="fas fa-external-link-alt"></i></a>：<a class="link"   href="https://zhuanlan.zhihu.com/p/340003720sss%E3%80%82" >https://zhuanlan.zhihu.com/p/340003720sss。<i class="fas fa-external-link-alt"></i></a></p>
<p><a name="###micro"></a></p>
<h3 id="micro-editor"><a href="#micro-editor" class="headerlink" title="micro-editor"></a>micro-editor</h3><p>下载<a class="link"   href="https://github.com/zyedidia/micro/releases/tag/v2.0.11" >micro-editor<i class="fas fa-external-link-alt"></i></a>：<a class="link"   href="https://github.com/zyedidia/micro/releases/tag/v2.0.11%EF%BC%8C%E6%B7%BB%E5%8A%A0%E5%88%B0path,%E5%8F%AF%E4%BB%A5%E5%A4%8D%E5%88%B6%E4%B8%80%E4%BB%BD%E5%B9%B6%E9%87%8D%E5%91%BD%E5%90%8D%60edit%60" >https://github.com/zyedidia/micro/releases/tag/v2.0.11，添加到path,可以复制一份并重命名`edit`<i class="fas fa-external-link-alt"></i></a></p>
<blockquote>
<p>If you open micro and it doesn’t seem like syntax highlighting is working, this is probably because you are using a terminal which does not support 256 color mode. Try changing the color scheme to simple by pressing <code>Ctrl-e</code> in micro and typing <code>set colorscheme simple</code>.</p>
</blockquote>
<h3 id="bat"><a href="#bat" class="headerlink" title="bat"></a>bat</h3><p><a class="link"   href="https://github.com/sharkdp/bat" >bat<i class="fas fa-external-link-alt"></i></a>：<a class="link"   href="https://github.com/sharkdp/bat%EF%BC%8C%E7%B1%BB%E4%BC%BC" >https://github.com/sharkdp/bat，类似<i class="fas fa-external-link-alt"></i></a> cat(1)，但带有 git 集成和语法高亮。</p>
<p>下载，添加到path，覆盖cat 修改/usr/bin/cat.exe为cat_copy.exe 。</p>
<h3 id="fd"><a href="#fd" class="headerlink" title="fd"></a>fd</h3><p><a class="link"   href="https://github.com/sharkdp/fd" >fd<i class="fas fa-external-link-alt"></i></a>：<a class="link"   href="https://github.com/sharkdp/fd%EF%BC%8C%E6%9B%BF%E4%BB%A3%60find%60" >https://github.com/sharkdp/fd，替代`find`<i class="fas fa-external-link-alt"></i></a></p>
<p>下载，添加到path</p>
<h3 id="chsrc"><a href="#chsrc" class="headerlink" title="chsrc"></a>chsrc</h3><p>全平台替换源</p>
<p><a class="link"   href="https://github.com/RubyMetric/chsrc" >chsrc<i class="fas fa-external-link-alt"></i></a>： <a class="link"   href="https://github.com/RubyMetric/chsrc" >https://github.com/RubyMetric/chsrc<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="yazi"><a href="#yazi" class="headerlink" title="yazi"></a>yazi</h3><p>搭配 zoxide，fd</p>
<h3 id="Starship"><a href="#Starship" class="headerlink" title="Starship"></a>Starship</h3><p>轻量、迅速、可无限定制的高颜值终端，<a class="link"   href="https://github.com/starship/starship/blob/master/docs/zh-CN/guide/README.md" >Starship<i class="fas fa-external-link-alt"></i></a>。</p>
<p>到<code>releases</code>中下载并添加到path，修改<code>PowerShell</code>样式。</p>
<p>新建 <code>~/.config/starship.toml</code>,设置<a class="link"   href="https://starship.rs/presets/" >configuration prese<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="zoxide"><a href="#zoxide" class="headerlink" title="zoxide"></a>zoxide</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(starship init bash)</span>&quot;</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(zoxide init bash)</span>&quot;</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(fzf --bash)</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><h3 id="Bash-it"><a href="#Bash-it" class="headerlink" title="Bash-it"></a>Bash-it</h3><p><a class="link"   href="https://github.com/Bash-it/bash-it" >Bash-it<i class="fas fa-external-link-alt"></i></a>,修改<code>~/.bash_profile or ~/.bashrc</code>,</p>
<p><a class="link"   href="https://bash-it.readthedocs.io/en/latest/" >doc<i class="fas fa-external-link-alt"></i></a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ -f ~/.bash_aliases ]; <span class="keyword">then</span></span><br><span class="line">    . ~/.bash_aliases</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> BASH_IT_THEME=<span class="string">&#x27;candy2&#x27;</span> <span class="comment"># ~/.bash_it/themes</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="tldr"><a href="#tldr" class="headerlink" title="tldr"></a>tldr</h3><p><a class="link"   href="https://github.com/tldr-pages/tldr" >tldr<i class="fas fa-external-link-alt"></i></a>: Too Long; Didn’t Read，替代man</p>
<h3 id="micro-amp-bat-amp-fd"><a href="#micro-amp-bat-amp-fd" class="headerlink" title="micro &amp; bat &amp; fd"></a>micro &amp; bat &amp; fd</h3><p>安装参考 <a href="###micro">##Window/###micro-editor</a></p>
<p>安装参考 <a href="###bat">##Window/###bat</a></p>
<p>安装参考 <a href="###fd">##Window/###fd</a></p>
<p>添加到 <code>.bash_aliases</code></p>
<ul>
<li><a class="link"   href="https://itsfoss.com/homebrew-linux/" >安装brew<i class="fas fa-external-link-alt"></i></a></li>
<li>[micro](curl <a class="link"   href="https://getmic.ro/" >https://getmic.ro<i class="fas fa-external-link-alt"></i></a> | bash)</li>
</ul>
<p><em>brew</em></p>
<ul>
<li>nushell</li>
<li>tealdeer</li>
<li>starship</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 忽略大小写</span></span><br><span class="line"><span class="built_in">shopt</span> -s nocaseglob</span><br><span class="line"><span class="built_in">bind</span> <span class="string">&quot;set completion-ignore-case on&quot;</span></span><br></pre></td></tr></table></figure>










]]></content>
      <categories>
        <category>software</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>software</tag>
      </tags>
  </entry>
  <entry>
    <title>2024年细讲前端工程化</title>
    <url>/2024/12/19/2024-%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/</url>
    <content><![CDATA[<h1 id="何为前端工程化"><a href="#何为前端工程化" class="headerlink" title="何为前端工程化"></a>何为前端工程化</h1><p>前端工程化是指将软件工程的原理和方法应用到前端开发中，以提高开发效率、代码质量和可维护性。随着 Web 应用的复杂度不断增加，传统的前端开发方式已经难以满足需求，因此引入了工程化的概念来更好地管理和优化前端开发流程。前端工程化主要包括以下几个方面：</p>
<h3 id="1-项目构建工具"><a href="#1-项目构建工具" class="headerlink" title="1. 项目构建工具"></a>1. <strong>项目构建工具</strong></h3><p>使用自动化构建工具（如 Webpack, Vite, Parcel 等）来处理和打包前端资源（JavaScript, CSS, 图片等），从而简化开发流程，提升开发体验。这些工具通常支持模块化开发、代码压缩、混淆、热更新等功能。</p>
<h3 id="2-模块化开发"><a href="#2-模块化开发" class="headerlink" title="2. 模块化开发"></a>2. <strong>模块化开发</strong></h3><p>采用模块化的开发模式（如 ES6 模块、CommonJS、AMD 等），可以将代码拆分为更小、更易于管理的部分，有助于团队协作和代码复用。每个模块负责单一功能，并且通过明确的接口与其他模块交互。</p>
<h3 id="3-组件化开发"><a href="#3-组件化开发" class="headerlink" title="3. 组件化开发"></a>3. <strong>组件化开发</strong></h3><p>基于组件的思想构建用户界面，比如 React、Vue 和 Angular 中的组件。组件是独立且可复用的 UI 构建块，它们封装了自身的逻辑和样式，可以在不同的页面或应用之间共享。</p>
<h3 id="4-版本控制"><a href="#4-版本控制" class="headerlink" title="4. 版本控制"></a>4. <strong>版本控制</strong></h3><p>利用 Git 或其他版本控制系统来跟踪代码的变化历史，方便团队成员之间的协作开发，确保项目的稳定性和可回溯性。</p>
<h3 id="5-持续集成-持续部署-CI-CD"><a href="#5-持续集成-持续部署-CI-CD" class="headerlink" title="5. 持续集成/持续部署 (CI/CD)"></a>5. <strong>持续集成/持续部署 (CI/CD)</strong></h3><p>设置 CI/CD 流程自动化测试、构建和部署过程，保证每次代码变更都能经过严格的测试并顺利上线，减少人工操作带来的风险。</p>
<h3 id="6-静态代码分析"><a href="#6-静态代码分析" class="headerlink" title="6. 静态代码分析"></a>6. <strong>静态代码分析</strong></h3><p>通过 ESLint、Prettier 等工具进行静态代码分析，帮助开发者遵循编码规范，提前发现潜在的问题，如语法错误、风格不一致等。</p>
<h3 id="7-性能优化"><a href="#7-性能优化" class="headerlink" title="7. 性能优化"></a>7. <strong>性能优化</strong></h3><p>采取各种措施优化 Web 应用的加载速度和运行性能，例如图片懒加载、服务端渲染（SSR）、客户端缓存策略、减少 HTTP 请求次数、使用 CDN 分发静态资源等。</p>
<h3 id="8-文档生成与维护"><a href="#8-文档生成与维护" class="headerlink" title="8. 文档生成与维护"></a>8. <strong>文档生成与维护</strong></h3><p>保持良好的文档习惯，包括但不限于 API 文档、架构设计文档、开发指南等，这不仅有助于新人快速上手项目，也能为后续的维护提供便利。</p>
<h3 id="9-依赖管理"><a href="#9-依赖管理" class="headerlink" title="9. 依赖管理"></a>9. <strong>依赖管理</strong></h3><p>合理地管理和更新第三方库依赖，确保项目所使用的库是最新的同时避免引入不必要的安全漏洞。常用工具如 pnpm、npm、yarn 可以有效地管理 JavaScript 包依赖。</p>
<h3 id="10-单元测试与集成测试"><a href="#10-单元测试与集成测试" class="headerlink" title="10. 单元测试与集成测试"></a>10. <strong>单元测试与集成测试</strong></h3><p>编写测试用例对组件的功能进行验证，保证在修改代码后不会破坏现有功能；集成测试则用于检查不同模块之间的协同工作是否正常。</p>
<p>通过上述措施，前端工程化旨在打造一个高效、可靠、易扩展的前端开发环境，使得大型复杂的 Web 应用程序能够更加稳健地开发和迭代。</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul>
<li>  前端开发管理工具集</li>
<li>  降低开发成本，提升开发效率</li>
</ul>
<h2 id="何为模块化（代码的分解和聚合）"><a href="#何为模块化（代码的分解和聚合）" class="headerlink" title="何为模块化（代码的分解和聚合）"></a>何为模块化（代码的分解和聚合）</h2><p>模块化是一种软件设计原则，它提倡将一个复杂的系统分解为多个独立的、可复用的部分（即模块），每个模块负责实现特定的功能或解决特定的问题。通过这种方式，可以简化系统的复杂性，提高代码的组织性和可维护性。在前端开发中，模块化具体表现为以下几个方面：</p>
<h3 id="1-定义清晰的接口"><a href="#1-定义清晰的接口" class="headerlink" title="1. 定义清晰的接口"></a>1. <strong>定义清晰的接口</strong></h3><p>每个模块都应该有明确的输入和输出，这样其他部分的代码就可以方便地调用该模块而不需要了解其内部工作原理。这种做法提高了代码的解耦程度，使得各个模块之间的依赖关系更加松散。</p>
<h3 id="2-功能单一性"><a href="#2-功能单一性" class="headerlink" title="2. 功能单一性"></a>2. <strong>功能单一性</strong></h3><p>遵循“单一职责原则”，确保每个模块只做一件事并且做好。如果一个模块需要处理多种任务，则应该考虑将其拆分成更小的模块。这样做有助于减少错误的发生，并且便于测试和调试。</p>
<h3 id="3-易于测试"><a href="#3-易于测试" class="headerlink" title="3. 易于测试"></a>3. <strong>易于测试</strong></h3><p>由于模块是独立存在的，因此可以单独对其进行单元测试。这不仅加快了测试速度，也更容易定位问题所在。此外，良好的模块化设计还可以促进集成测试，以验证不同模块之间的交互是否正确。</p>
<h3 id="4-高内聚低耦合"><a href="#4-高内聚低耦合" class="headerlink" title="4. 高内聚低耦合"></a>4. <strong>高内聚低耦合</strong></h3><p>高内聚意味着模块内部的组件紧密相关，专注于完成某一特定功能；低耦合则表示模块之间相互依赖较少，改变一个模块不会对其他模块造成太大影响。这样的结构有利于系统的扩展和维护。</p>
<h3 id="5-复用性"><a href="#5-复用性" class="headerlink" title="5. 复用性"></a>5. <strong>复用性</strong></h3><p>一旦某个模块被创建并经过充分测试后，可以在不同的项目或者同一项目的不同地方重复使用这个模块，从而避免重复劳动，提升开发效率。</p>
<h3 id="6-代码分割与懒加载"><a href="#6-代码分割与懒加载" class="headerlink" title="6. 代码分割与懒加载"></a>6. <strong>代码分割与懒加载</strong></h3><p>在现代前端框架（如 Vue, React）中，可以通过路由级别的代码分割和懒加载技术来实现按需加载模块，减少初始加载时间，优化用户体验。</p>
<h3 id="7-模块化的实现方式"><a href="#7-模块化的实现方式" class="headerlink" title="7. 模块化的实现方式"></a>7. <strong>模块化的实现方式</strong></h3><h4 id="JavaScript-模块系统"><a href="#JavaScript-模块系统" class="headerlink" title="JavaScript 模块系统"></a>JavaScript 模块系统</h4><ul>
<li>  <strong>CommonJS</strong>：Node.js 默认采用的模块化方案，基于文件的方式定义模块，使用 <code>require()</code> 加载模块。</li>
<li>  **AMD (Asynchronous Module Definition)**：异步加载模块的标准，主要用于浏览器端，<code>define()</code> 和 <code>require()</code> 是它的核心方法。</li>
<li>  <strong>ES6 Modules</strong>：ECMAScript 标准引入的原生模块化解决方案，使用 <code>import</code> 和 <code>export</code> 关键字进行模块导入导出。这是目前最广泛接受和支持的模块化标准之一。</li>
</ul>
<h4 id="模块打包工具"><a href="#模块打包工具" class="headerlink" title="模块打包工具"></a>模块打包工具</h4><p>为了更好地管理和打包这些模块，前端开发者通常会使用构建工具（如 Webpack, Vite, Parcel 等）。它们能够解析项目中的各种资源文件（JavaScript, CSS, 图片等），根据依赖关系生成最终的输出文件。</p>
<h2 id="模块化标准以及解决什么问题"><a href="#模块化标准以及解决什么问题" class="headerlink" title="模块化标准以及解决什么问题"></a>模块化标准以及解决什么问题</h2><ul>
<li>  函数</li>
<li>  解决文件分解（全局污染）和聚合（依赖混乱）的问题</li>
</ul>
<h3 id="民间-社区标准"><a href="#民间-社区标准" class="headerlink" title="民间/社区标准"></a>民间/社区标准</h3><p>模块化标准是指在软件开发中，为了确保不同模块之间可以正确交互、共享资源，并且能够被有效地管理和维护而设立的一套规则和协议。特别是在前端开发领域，JavaScript 的模块化标准经历了多个阶段的发展。以下是几种主流的 JavaScript 模块化标准：</p>
<h3 id="1-CommonJS"><a href="#1-CommonJS" class="headerlink" title="1. CommonJS"></a>1. <strong>CommonJS</strong></h3><ul>
<li>  <strong>简介</strong>：这是 Node.js 中默认使用的模块系统。它基于文件的方式定义模块，每个文件被视为一个独立的模块。</li>
<li><strong>导入导出</strong>：<ul>
<li>  导入模块使用 <code>require()</code> 函数。</li>
<li>  导出模块成员通过 <code>module.exports</code> 或直接修改 <code>exports</code> 对象。</li>
</ul>
</li>
<li>  <strong>特点</strong>：同步加载模块，适用于服务器端环境。</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 导出模块</span><br><span class="line">module.exports = function() &#123;</span><br><span class="line">  console.log(&#x27;Hello from CommonJS&#x27;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 导入模块</span><br><span class="line">const myModule = require(&#x27;./myModule&#x27;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-AMD-Asynchronous-Module-Definition"><a href="#2-AMD-Asynchronous-Module-Definition" class="headerlink" title="2. AMD (Asynchronous Module Definition)"></a>2. <strong>AMD (Asynchronous Module Definition)</strong></h3><ul>
<li>  <strong>简介</strong>：专门为浏览器端设计的一种异步加载模块的标准，常与 RequireJS 一起使用。</li>
<li><strong>导入导出</strong>：<ul>
<li>  使用 <code>define()</code> 定义模块，接受依赖作为参数。</li>
<li>  <code>require()</code> 用来加载模块。</li>
</ul>
</li>
<li>  <strong>特点</strong>：支持异步加载，适合浏览器环境下动态加载模块。</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 定义模块</span><br><span class="line">define([&#x27;dependency&#x27;], function(dependency) &#123;</span><br><span class="line">  return function() &#123;</span><br><span class="line">    console.log(&#x27;Hello from AMD&#x27;);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 加载模块</span><br><span class="line">require([&#x27;module&#x27;], function(module) &#123;</span><br><span class="line">  module();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-UMD-Universal-Module-Definition"><a href="#3-UMD-Universal-Module-Definition" class="headerlink" title="3. UMD (Universal Module Definition)"></a>3. <strong>UMD (Universal Module Definition)</strong></h3><ul>
<li>  <strong>简介</strong>：UMD 是一种兼容多种模块系统的格式，旨在同时支持 CommonJS、AMD 和全局变量（即浏览器中的 <code>&lt;script&gt;</code> 标签）。</li>
<li>  <strong>特点</strong>：提供了跨平台的支持，使得同一个模块可以在不同的环境中无缝工作。</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(function (root, factory) &#123;</span><br><span class="line">  if (typeof define === &#x27;function&#x27; &amp;&amp; define.amd) &#123;</span><br><span class="line">    // AMD</span><br><span class="line">    define([&#x27;b&#x27;], factory);</span><br><span class="line">  &#125; else if (typeof exports === &#x27;object&#x27;) &#123;</span><br><span class="line">    // Node, CommonJS-like</span><br><span class="line">    module.exports = factory(require(&#x27;b&#x27;));</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    // Browser globals (root is window)</span><br><span class="line">    root.returnExports = factory(root.b);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;(this, function (b) &#123;</span><br><span class="line">  // module implementation</span><br><span class="line">&#125;));</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="4-CMD-Common-Module-Definition-更常指-Sea-js-的模块定义方式"><a href="#4-CMD-Common-Module-Definition-更常指-Sea-js-的模块定义方式" class="headerlink" title="4. CMD (Common Module Definition, 更常指 Sea.js 的模块定义方式)"></a>4. <strong>CMD (Common Module Definition, 更常指 Sea.js 的模块定义方式)</strong></h3><ul>
<li><p>  <strong>设计目的</strong>：CMD 是由国内开发者提出的模块定义规范，主要用于 Sea.js 这样的模块加载器。它的设计理念与 CommonJS 类似，但在某些方面进行了优化，更适合浏览器环境。</p>
</li>
<li><p>  <strong>主要用途</strong>：CMD 主要用于浏览器端开发，并且 Sea.js 提供了对 CMD 的原生支持。</p>
</li>
<li><p>  <strong>实现工具</strong>：Sea.js 是最著名的 CMD 实现之一。</p>
</li>
<li><p><strong>语法特点</strong>：</p>
<ul>
<li>  使用 <code>define()</code> 来定义模块，支持按需加载和延迟执行。</li>
<li>  <code>require</code> 和 <code>exports</code> 用于同步加载依赖项，而 <code>require.async</code> 则用于异步加载。</li>
</ul>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 定义模块</span><br><span class="line">define(function(require, exports, module) &#123;</span><br><span class="line">  var dependency = require(&#x27;./dependency&#x27;);</span><br><span class="line"></span><br><span class="line">  exports.greet = function() &#123;</span><br><span class="line">    console.log(&#x27;Hello from CMD&#x27;);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 同步加载模块</span><br><span class="line">var myModule = require(&#x27;./myModule&#x27;);</span><br><span class="line"></span><br><span class="line">// 异步加载模块</span><br><span class="line">require.async(&#x27;./asyncModule&#x27;, function(asyncModule) &#123;</span><br><span class="line">  asyncModule();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="官方标准"><a href="#官方标准" class="headerlink" title="官方标准"></a><strong>官方标准</strong></h3><h3 id="1-ES6-Modules-ECMAScript-2015-Modules-编译时方案"><a href="#1-ES6-Modules-ECMAScript-2015-Modules-编译时方案" class="headerlink" title="1. ES6 Modules (ECMAScript 2015 Modules) 编译时方案"></a>1. <strong>ES6 Modules (ECMAScript 2015 Modules)</strong> 编译时方案</h3><ul>
<li>  <strong>简介</strong>：这是 ECMAScript 规范中正式引入的原生模块化方案，已经被所有现代浏览器广泛支持。</li>
<li><strong>导入导出</strong>：<ul>
<li>  使用 <code>import</code> 关键字导入模块。</li>
<li>  使用 <code>export</code> 关键字导出模块成员。</li>
</ul>
</li>
<li>  <strong>特点</strong>：静态分析友好，允许工具链进行优化；支持按需加载（Tree Shaking），有助于减少打包体积。</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 导出模块</span><br><span class="line">export function greet() &#123;</span><br><span class="line">  console.log(&#x27;Hello from ES6 Modules&#x27;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 默认导出</span><br><span class="line">export default class Greeter &#123;&#125;</span><br><span class="line"></span><br><span class="line">// 导入模块</span><br><span class="line">import &#123; greet &#125; from &#x27;./greet.js&#x27;;</span><br><span class="line">import Greeter from &#x27;./Greeter.js&#x27;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="２-Harmony-Modules-ES-Harmony"><a href="#２-Harmony-Modules-ES-Harmony" class="headerlink" title="２. Harmony Modules (ES Harmony)"></a>２. <strong>Harmony Modules (ES Harmony)</strong></h3><ul>
<li>  <strong>简介</strong>：这是 ES6 Modules 的早期名称，在 ES6 正式发布之前，一些浏览器已经开始实验性地实现了这些特性。</li>
<li>  <strong>现状</strong>：随着 ES6 Modules 成为官方标准，”Harmony Modules” 这个术语已经不再常用。</li>
</ul>
<h3 id="当前趋势"><a href="#当前趋势" class="headerlink" title="当前趋势"></a>当前趋势</h3><p>目前，<strong>ES6 Modules（编译时）</strong> 已经成为最主流的 JavaScript 模块化标准，因为它是由 ECMAScript 标准委员会制定的官方规范，得到了广泛的社区支持和技术栈集成。大多数现代前端框架（如 Vue, React, Angular 等）以及构建工具（如 Webpack, Vite, Parcel 等）都内置了对 ES6 Modules 的支持。因此，如果你正在启动一个新的项目，推荐优先考虑使用 ES6 Modules。<strong>CommonJS（运行时）</strong>　也很庞大随着ｎｏｄｅｊｓ的发展而发展，其他几种目前不是很推荐使用了；</p>
<h2 id="ES6-Modules-和-CommonJS-之间的一些主要区别"><a href="#ES6-Modules-和-CommonJS-之间的一些主要区别" class="headerlink" title="ES6 Modules 和 CommonJS 之间的一些主要区别"></a><strong>ES6 Modules 和 CommonJS 之间的一些主要区别</strong></h2><h3 id="1-加载机制"><a href="#1-加载机制" class="headerlink" title="1. 加载机制"></a>1. <strong>加载机制</strong></h3><ul>
<li><p><strong>CommonJS</strong>：</p>
<ul>
<li>  <strong>同步加载</strong>：CommonJS 模块是同步加载的，这意味着当 <code>require()</code> 被调用时，程序会阻塞并等待模块加载完成。</li>
<li>  <strong>运行时解析</strong>：依赖关系是在代码执行期间动态解析的，即当你调用 <code>require()</code> 函数时才加载模块。</li>
</ul>
</li>
<li><p><strong>ES6 Modules</strong>：</p>
<ul>
<li>  <strong>异步加载</strong>：ES6 Modules 支持静态分析和按需加载（例如通过 <code>&lt;script type=&quot;module&quot;&gt;</code> 标签），因此它们可以异步加载，不会阻塞主线程。</li>
<li>  <strong>编译时解析</strong>：依赖关系是在编译阶段就确定下来了，这允许工具链进行更深入的优化，如 Tree Shaking（去除未使用的代码）。</li>
</ul>
</li>
</ul>
<h3 id="2-导入导出语法"><a href="#2-导入导出语法" class="headerlink" title="2. 导入导出语法"></a>2. <strong>导入导出语法</strong></h3><ul>
<li><strong>CommonJS</strong>：<ul>
<li>  <strong>导出</strong>：使用 <code>module.exports</code> 或 <code>exports</code> 对象来导出成员。</li>
<li>  <strong>导入</strong>：使用 <code>require()</code> 函数来导入模块。</li>
</ul>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 导出模块 (CommonJS)</span><br><span class="line">module.exports = function greet() &#123;</span><br><span class="line">  console.log(&#x27;Hello from CommonJS&#x27;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 导入模块 (CommonJS)</span><br><span class="line">const greet = require(&#x27;./greet&#x27;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>ES6 Modules</strong>：<ul>
<li>  <strong>导出</strong>：使用 <code>export</code> 关键字来导出函数、类或变量；也可以使用 <code>export default</code> 来定义默认导出。</li>
<li>  <strong>导入</strong>：使用 <code>import</code> 关键字来导入模块，支持命名导入、默认导入等。</li>
</ul>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 导出模块 (ES6 Modules)</span><br><span class="line">export function greet() &#123;</span><br><span class="line">  console.log(&#x27;Hello from ES6 Modules&#x27;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default class Greeter &#123;&#125;</span><br><span class="line"></span><br><span class="line">// 导入模块 (ES6 Modules)</span><br><span class="line">import &#123; greet &#125; from &#x27;./greet.js&#x27;;</span><br><span class="line">import Greeter from &#x27;./Greeter.js&#x27;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-单例-vs-多例"><a href="#3-单例-vs-多例" class="headerlink" title="3. 单例 vs 多例"></a>3. <strong>单例 vs 多例</strong></h3><ul>
<li><p>  <strong>CommonJS</strong>：每次 <code>require()</code> 同一个模块都会返回同一个实例，即模块是单例模式。</p>
</li>
<li><p>  <strong>ES6 Modules</strong>：每个模块都是一个新的实例，除非显式地共享状态。这使得模块的行为更加可预测，减少了意外的副作用。</p>
</li>
</ul>
<h3 id="4-互操作性"><a href="#4-互操作性" class="headerlink" title="4. 互操作性"></a>4. <strong>互操作性</strong></h3><ul>
<li><p>  <strong>CommonJS</strong>：Node.js 原生支持 CommonJS，但可以通过 Babel 或其他转译器将 ES6 Modules 转换为 CommonJS 以在 Node.js 中使用。</p>
</li>
<li><p>  <strong>ES6 Modules</strong>：现代浏览器原生支持 ES6 Modules，但在 Node.js 中需要特定的配置（如 <code>.mjs</code> 文件扩展名或启用实验性的 <code>--experimental-modules</code> 标志）。不过，从 Node.js v12 开始，对 ES6 Modules 的支持逐渐增强，到了 Node.js v14 及以上版本，这种支持变得更加稳定和成熟。</p>
</li>
</ul>
<h3 id="5-性能与优化"><a href="#5-性能与优化" class="headerlink" title="5. 性能与优化"></a>5. <strong>性能与优化</strong></h3><ul>
<li><p>  <strong>ES6 Modules</strong>：由于其静态解析特性，构建工具可以更好地理解模块之间的依赖关系，从而实现更高效的打包和优化策略，如 Tree Shaking。</p>
</li>
<li><p>  <strong>CommonJS</strong>：因为依赖关系是在运行时确定的，所以很难在编译阶段进行类似的优化。</p>
</li>
</ul>
<h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3><p>尽管 CommonJS 在 Node.js 环境中依然非常重要，并且对于服务器端开发来说仍然是一个非常强大的选择，但 ES6 Modules 因其更好的性能、更灵活的语法以及广泛的社区支持，已经成为现代前端开发的首选。如果你正在启动一个新的项目，尤其是在客户端应用中，推荐优先考虑使用 ES6 Modules。然而，在某些情况下，比如处理遗留系统或特定的 Node.js 模块时，你可能仍然需要使用 CommonJS。</p>
<h2 id="包管理器-Package-Manager-（一系列模块集合）"><a href="#包管理器-Package-Manager-（一系列模块集合）" class="headerlink" title="包管理器 (Package Manager)　（一系列模块集合）"></a><strong>包管理器 (Package Manager)</strong>　（一系列模块集合）</h2><p>包管理器是用于自动化处理软件包（库、框架等）的安装、更新、配置和删除的工具。在 JavaScript 和 Node.js 生态系统中，最常用的包管理器包括 npm、Yarn 和 pnpm。它们简化了依赖管理和项目构建过程，使得开发者可以更专注于编写业务逻辑。</p>
<h3 id="1-npm-Node-Package-Manager"><a href="#1-npm-Node-Package-Manager" class="headerlink" title="1. npm (Node Package Manager)"></a>1. <strong>npm (Node Package Manager)</strong></h3><ul>
<li>  <strong>简介</strong>：npm 是 Node.js 的默认包管理器，也是世界上最大的软件注册表之一。它提供了丰富的命令行接口来管理依赖项，并且拥有庞大的社区支持。</li>
<li><strong>特点</strong>：<ul>
<li>  安装全局或本地的 npm 包。</li>
<li>  自动生成 <code>package.json</code> 文件以记录项目的依赖关系。</li>
<li>  支持脚本命令，允许你定义和运行自定义任务。</li>
<li>  内置安全审计功能，帮助识别潜在的安全问题。</li>
</ul>
</li>
<li>  <strong>使用示例</strong>：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化一个新的 npm 项目</span></span><br><span class="line">npm init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装一个依赖包到项目中</span></span><br><span class="line">npm install &lt;package-name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新所有依赖包到最新版本</span></span><br><span class="line">npm update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行自定义脚本</span></span><br><span class="line">npm run &lt;script-name&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="2-Yarn"><a href="#2-Yarn" class="headerlink" title="2. Yarn"></a>2. <strong>Yarn</strong></h3><ul>
<li>  <strong>简介</strong>：由 Facebook 开发并维护，旨在解决 npm 在速度和安全性方面的一些局限性。Yarn 通过锁文件 (<code>yarn.lock</code>) 来确保不同环境中依赖的一致性。</li>
<li><strong>特点</strong>：<ul>
<li>  更快的安装速度，得益于并行化下载和缓存机制。</li>
<li>  确定性的安装，保证每次安装的结果相同。</li>
<li>  提供了更好的离线模式支持。</li>
</ul>
</li>
<li>  <strong>使用示例</strong>：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化一个新的 Yarn 项目</span></span><br><span class="line">yarn init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装一个依赖包到项目中</span></span><br><span class="line">yarn add &lt;package-name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新所有依赖包到最新版本</span></span><br><span class="line">yarn upgrade</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行自定义脚本</span></span><br><span class="line">yarn run &lt;script-name&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="3-pnpm"><a href="#3-pnpm" class="headerlink" title="3. pnpm"></a>3. <strong>pnpm</strong></h3><ul>
<li>  <strong>简介</strong>：pnpm 是一种新型的包管理器，它解决了传统 npm 和 Yarn 在磁盘空间利用率上的不足，采用了一种称为“内容可寻址存储”的方法来存储依赖包。</li>
<li><strong>特点</strong>：<ul>
<li>  极大地节省磁盘空间，因为相同的依赖只保存一份副本。</li>
<li>  快速安装速度，同样利用了并行化下载。</li>
<li>  与 npm 和 Yarn 兼容，可以直接替换现有工作流。</li>
</ul>
</li>
<li>  <strong>使用示例</strong>：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化一个新的 pnpm 项目</span></span><br><span class="line">pnpm init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装一个依赖包到项目中</span></span><br><span class="line">pnpm add &lt;package-name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新所有依赖包到最新版本</span></span><br><span class="line">pnpm update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行自定义脚本</span></span><br><span class="line">pnpm run &lt;script-name&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h3 id="4-其他包管理器"><a href="#4-其他包管理器" class="headerlink" title="4. 其他包管理器"></a>4. <strong>其他包管理器</strong></h3><p>虽然 npm、Yarn 和 pnpm 是目前最流行的 JavaScript/Node.js 包管理器，但也存在一些其他的选项：</p>
<ul>
<li>  <strong>Bower</strong>（已废弃）：曾经是一个流行的前端包管理器，但由于其设计限制（如缺乏对嵌套依赖的支持），已经被社区广泛弃用。</li>
<li>  <strong>Volta</strong>：专门为 Node.js 应用提供一致的开发环境，能够自动切换 Node.js 版本。</li>
</ul>
<h3 id="选择合适的包管理器"><a href="#选择合适的包管理器" class="headerlink" title="选择合适的包管理器"></a>选择合适的包管理器</h3><p>选择哪种包管理器取决于你的具体需求和技术栈偏好。对于大多数新项目来说，npm 和 pnpm 是非常好的选择，因为它们都提供了出色的性能和广泛的社区支持。如果你需要特别关注依赖一致性或更快的安装速度，那么 Yarn 或 pnpm 可能更适合你。此外，随着 pnpm 的快速发展及其独特的内容可寻址存储特性，在大型项目或多团队协作环境中，pnpm 正变得越来越受欢迎。</p>
<p>无论选择哪一个包管理器，确保遵循最佳实践，例如使用锁文件来固定依赖版本、定期检查和更新依赖以保持安全性和兼容性。</p>
<p>确实，选择哪种包管理器应该基于项目的具体需求和技术栈偏好。以下是更详细的分析，帮助你更好地理解如何根据这些因素做出选择：</p>
<h3 id="1-npm-和-pnpm-的出色性能与广泛支持"><a href="#1-npm-和-pnpm-的出色性能与广泛支持" class="headerlink" title="1. npm 和 pnpm 的出色性能与广泛支持"></a>1. <strong>npm 和 pnpm 的出色性能与广泛支持</strong></h3><ul>
<li><p>  <strong>npm</strong>：作为 Node.js 的默认包管理器，npm 拥有一个庞大的生态系统和活跃的社区。它不仅提供了丰富的命令行接口来管理依赖项，还拥有内置的安全审计功能，帮助识别潜在的安全问题。npm 的 <code>package-lock.json</code> 文件确保了不同环境中依赖的一致性。</p>
</li>
<li><p>  <strong>pnpm</strong>：pnpm 是一个快速且节省磁盘空间的包管理工具，它通过内容可寻址存储（CAS）机制来避免重复下载相同的依赖包，从而提高了安装速度并减少了磁盘使用量。对于大型项目或多团队协作环境，pnpm 的优势尤为明显，因为它能够有效减少多项目间的依赖冗余，并且对 monorepos 提供了良好的支持。</p>
</li>
</ul>
<h3 id="2-Yarn-和-pnpm-的依赖一致性及安装速度"><a href="#2-Yarn-和-pnpm-的依赖一致性及安装速度" class="headerlink" title="2. Yarn 和 pnpm 的依赖一致性及安装速度"></a>2. <strong>Yarn 和 pnpm 的依赖一致性及安装速度</strong></h3><ul>
<li><p>  <strong>Yarn</strong>：Yarn 引入了 <code>yarn.lock</code> 文件，确保了不同环境中依赖的一致性。它的并行化下载机制显著提升了安装速度，尤其是在网络条件较好的情况下。此外，Yarn 支持离线模式，即使没有互联网连接也能安装之前缓存过的依赖包。</p>
</li>
<li><p>  <strong>pnpm</strong>：除了上述提到的优点外，pnpm 还以其高效的磁盘空间管理和安装性能著称。它采用了硬链接和符号链接的方式将依赖包安装到每个项目的 <code>node_modules</code> 目录下，这不仅加快了安装过程，也保证了依赖关系的清晰度，避免了嵌套过深的问题。</p>
</li>
</ul>
<h3 id="3-pnpm-在大型项目中的应用"><a href="#3-pnpm-在大型项目中的应用" class="headerlink" title="3. pnpm 在大型项目中的应用"></a>3. <strong>pnpm 在大型项目中的应用</strong></h3><p>随着 pnpm 的快速发展，越来越多的企业级项目开始采用它作为首选的包管理工具。pnpm 的独特之处在于它可以有效地处理复杂的依赖关系，并且在多项目环境下表现出色。例如，在 monorepo 架构中，pnpm 能够很好地管理多个包之间的依赖，同时保持高效的工作流。</p>
<h3 id="4-最佳实践建议"><a href="#4-最佳实践建议" class="headerlink" title="4. 最佳实践建议"></a>4. <strong>最佳实践建议</strong></h3><p>无论选择了哪一种包管理器，遵循以下最佳实践都是非常重要的：</p>
<ul>
<li><p>  <strong>使用锁文件固定依赖版本</strong>：无论是 npm 的 <code>package-lock.json</code> 还是 Yarn 的 <code>yarn.lock</code>，锁文件都能确保每次安装的结果一致，这对于维护项目的稳定性和可重复构建至关重要。</p>
</li>
<li><p>  <strong>定期检查和更新依赖</strong>：随着时间推移，新的安全补丁和功能改进会被添加到各个库中。因此，定期运行如 <code>npm audit</code> 或者 <code>yarn upgrade</code> 来查找并修复可能存在的漏洞或兼容性问题是必要的。</p>
</li>
<li><p>  <strong>关注安全性</strong>：所有现代包管理器都提供了一定程度的安全保障措施，比如加密哈希验证、安全警告等。确保你的开发流程中包含了这些特性，以保护应用程序免受恶意软件的影响。</p>
</li>
</ul>
<p>综上所述，虽然 npm 和 pnpm 都是非常优秀的选项，但在特定场景下，Yarn 或 pnpm 可能会更适合某些开发者的需求。特别是当涉及到依赖一致性和安装速度时，Yarn 和 pnpm 各有千秋；而对于大型项目或多团队协作环境，则应优先考虑 pnpm 的优势。最终的选择应当结合自身的技术栈以及项目的实际需求来决定。</p>
<h2 id="使用-pnpm-搭建-monorepo"><a href="#使用-pnpm-搭建-monorepo" class="headerlink" title="使用 pnpm 搭建 monorepo"></a>使用 pnpm 搭建 monorepo</h2><p>使用 pnpm 搭建 monorepo 项目可以极大地简化多项目管理和依赖处理。pnpm 提供了对 monorepos 的原生支持，使得开发者能够在一个单一的代码仓库中管理多个包或应用。以下是详细的步骤指南，帮助你构建一个基于 pnpm 的 monorepo 结构。</p>
<h3 id="1-安装-pnpm"><a href="#1-安装-pnpm" class="headerlink" title="1. 安装 pnpm"></a>1. 安装 pnpm</h3><p>首先确保你的环境中已经安装了 Node.js 和 npm。然后全局安装 pnpm：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g pnpm</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>验证安装是否成功：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pnpm -v</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-创建并初始化项目目录"><a href="#2-创建并初始化项目目录" class="headerlink" title="2. 创建并初始化项目目录"></a>2. 创建并初始化项目目录</h3><p>创建一个新的文件夹作为 monorepo 的根目录，并进入该文件夹：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir my-monorepo</span><br><span class="line">cd my-monorepo</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>初始化项目，生成 <code>package.json</code> 文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pnpm init</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-配置工作空间（Workspace）"><a href="#3-配置工作空间（Workspace）" class="headerlink" title="3. 配置工作空间（Workspace）"></a>3. 配置工作空间（Workspace）</h3><p>在项目的根目录下创建 <code>pnpm-workspace.yaml</code> 文件，用于定义哪些目录下的包属于这个 monorepo：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># pnpm-workspace.yaml</span><br><span class="line">packages:</span><br><span class="line">  - &#x27;packages/*&#x27;</span><br><span class="line">  - &#x27;apps/*&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这里我们假设所有的子包都将存放在 <code>packages/</code> 目录下，而应用程序则放置于 <code>apps/</code> 目录。</p>
<h3 id="4-添加子项目"><a href="#4-添加子项目" class="headerlink" title="4. 添加子项目"></a>4. 添加子项目</h3><p>根据需要，在 <code>packages/</code> 或 <code>apps/</code> 目录下创建子项目，并为每个子项目初始化 <code>package.json</code> 文件。例如，添加一个名为 <code>utils</code> 的工具库：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p packages/utils</span><br><span class="line">cd packages/utils</span><br><span class="line">pnpm init -y</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>编辑 <code>packages/utils/package.json</code> 来指定其名称、版本和其他相关信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;utils&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;0.0.0&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;./index.ts&quot;,</span><br><span class="line">  &quot;module&quot;: &quot;./index.ts&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>同样地，你可以按照这种方式添加更多的子项目或应用程序。</p>
<h3 id="5-安装依赖"><a href="#5-安装依赖" class="headerlink" title="5. 安装依赖"></a>5. 安装依赖</h3><p>对于公共依赖项，可以直接在根目录的 <code>package.json</code> 中添加，并使用 <code>-w</code> 参数将它们安装到整个工作区范围内：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pnpm add &lt;dependency-name&gt; -w</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>对于特定于某个子项目的依赖，则可以在相应的子项目目录内执行安装命令，或者通过 <code>--filter</code> 参数指定要影响的包：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pnpm --filter &lt;package-name&gt; add &lt;dependency-name&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="6-跨项目依赖"><a href="#6-跨项目依赖" class="headerlink" title="6. 跨项目依赖"></a>6. 跨项目依赖</h3><p>为了让一个子项目依赖另一个子项目，可以在子项目的 <code>package.json</code> 中添加依赖声明，并使用 <code>workspace:*</code> 来引用其他工作区内的包：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;dependencies&quot;: &#123;</span><br><span class="line">    &quot;utils&quot;: &quot;workspace:*&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这告诉 pnpm 从当前的工作区中查找最新的 <code>utils</code> 版本。</p>
<h3 id="7-构建与运行脚本"><a href="#7-构建与运行脚本" class="headerlink" title="7. 构建与运行脚本"></a>7. 构建与运行脚本</h3><p>为了方便管理所有子项目的构建和测试任务，可以在根目录的 <code>package.json</code> 中定义一些脚本命令，利用 <code>pnpm recursive</code> 来批量执行这些命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;build&quot;: &quot;pnpm -r run build&quot;,</span><br><span class="line">    &quot;test&quot;: &quot;pnpm -r run test&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这样就可以一次性对所有相关联的子项目进行构建或测试。</p>
<h3 id="8-ESLint-Prettier-等工具配置"><a href="#8-ESLint-Prettier-等工具配置" class="headerlink" title="8. ESLint, Prettier 等工具配置"></a>8. ESLint, Prettier 等工具配置</h3><p>为了保证代码风格的一致性，可以在 monorepo 的根目录设置统一的 ESLint 和 Prettier 规则，并将其安装为开发依赖：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pnpm add eslint prettier @typescript-eslint/eslint-plugin @typescript-eslint/parser -D -w</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>接着初始化 ESLint 并配置 <code>.eslintrc.json</code> 文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npx eslint --init</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>同时也可以为 Prettier 创建配置文件 <code>.prettierrc.json</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;printWidth&quot;: 80,</span><br><span class="line">  &quot;tabWidth&quot;: 2,</span><br><span class="line">  &quot;useTabs&quot;: false,</span><br><span class="line">  &quot;singleQuote&quot;: true,</span><br><span class="line">  &quot;semi&quot;: true,</span><br><span class="line">  &quot;trailingComma&quot;: &quot;all&quot;,</span><br><span class="line">  &quot;bracketSpacing&quot;: true</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="9-Git-Hooks"><a href="#9-Git-Hooks" class="headerlink" title="9. Git Hooks"></a>9. Git Hooks</h3><p>为了确保提交前的质量检查，可以集成 Git Hooks 工具如 Husky 和 Lint-Staged。先安装必要的依赖：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pnpm add husky lint-staged -D -w</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>初始化 Husky：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npx husky install</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>添加预提交钩子以运行 ESLint：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npx husky add .husky/pre-commit &quot;pnpm lint&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>以上步骤完成后，你就拥有了一套完整的基于 pnpm 的 monorepo 开发环境。这种结构不仅有助于组织复杂的前端工程，还能提高团队协作效率，减少重复劳动。</p>
<h2 id="JS工具链"><a href="#JS工具链" class="headerlink" title="JS工具链"></a>JS工具链</h2><h3 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h3><ul>
<li>  API 兼容 polyfill 代表 <a class="link"   href="https://link.juejin.cn/?target=https://gitee.com/independenter_admin/core-js/%23usage"  title="https://gitee.com/independenter_admin/core-js/#usage">core-js<i class="fas fa-external-link-alt"></i></a></li>
<li>  语法增强 代表 syntax transformer （runtime 运行时）语法转换器</li>
</ul>
<p>下面来着重介绍一下这个 core-js</p>
<h3 id="core-js功能特点"><a href="#core-js功能特点" class="headerlink" title="core-js功能特点"></a>core-js功能特点</h3><h3 id="core-js支持最新的-ECMAScript-标准"><a href="#core-js支持最新的-ECMAScript-标准" class="headerlink" title="core-js支持最新的 ECMAScript 标准"></a>core-js支持最新的 ECMAScript 标准</h3><p><code>core-js</code> 不仅支持已发布的 ECMAScript 标准，还涵盖了处于不同阶段的提案。这使得开发者可以在他们的项目中试验即将成为标准的新特性，同时保持良好的浏览器兼容性</p>
<h3 id="core-js模块化设计"><a href="#core-js模块化设计" class="headerlink" title="core-js模块化设计"></a>core-js模块化设计</h3><p><code>core-js</code> 的一大亮点在于其高度模块化的设计，允许开发者只引入他们需要的部分。这种按需加载的方式有助于减少最终打包文件的大小，从而提高应用性能。此外，<code>core-js</code> 可以在不污染全局命名空间的情况下工作，这意味着它可以与其他库或框架很好地共存，而不会引起命名冲突</p>
<h3 id="core-js与工具链集成"><a href="#core-js与工具链集成" class="headerlink" title="core-js与工具链集成"></a>core-js与工具链集成</h3><p><code>core-js</code> 设计时考虑到了与现代构建工具的良好集成。例如，它与 Babel 高度兼容，可以通过 <code>@babel/preset-env</code> 和 <code>@babel/transform-runtime</code> 插件轻松配置，以便根据目标浏览器列表自动选择合适的 polyfills。对于 Webpack 用户来说，还可以利用 <code>core-js-compat</code> 包来优化 polyfill 的选择，确保只包含必要的代码</p>
<h3 id="安装与使用"><a href="#安装与使用" class="headerlink" title="安装与使用"></a>安装与使用</h3><p>安装 <code>core-js</code> 非常简单，可以通过 npm 或 yarn 进行安装：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">深色版本</span><br><span class="line">npm install --save core-js</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yarn add core-js</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>接下来，你可以选择全局导入所有 polyfills，也可以根据需要单独导入特定的功能。为了更好地控制哪些 polyfills 被包含进来，推荐的做法是在入口文件之前添加如下语句：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import &#x27;core-js/stable&#x27;; // 引入稳定版的 ES polyfills</span><br><span class="line">// 或者更具体地</span><br><span class="line">import &#x27;core-js/features/array/from&#x27;; // 只引入 Array.from 的 polyfill</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>如果你正在使用 Babel，则可能不需要手动导入 <code>core-js</code>，因为 <code>@babel/preset-env</code> （预设 一堆内置插件）会自动处理这一过程。只需确保你的 <code>.browserslistrc</code> 文件中定义了正确的目标浏览器范围，Babel 就会据此决定需要哪些 polyfills（<code>.browserslistrc</code> 文件的作用是定义前端项目所支持的目标浏览器范围，这对于确保代码在不同浏览器中的兼容性至关重要。它被多个前端工具使用，如 Babel、Autoprefixer 等，以决定如何处理代码转换和样式前缀添加等问题</p>
<h3 id="为什么需要-browserslistrc？"><a href="#为什么需要-browserslistrc？" class="headerlink" title="为什么需要 .browserslistrc？"></a>为什么需要 .browserslistrc？</h3><p>当开发者编写现代 JavaScript 或 CSS 时，他们可能会用到一些较新的语法特性或 CSS 属性，这些可能并不是所有浏览器都能理解的。例如，某些浏览器可能不支持最新的 JavaScript 语法糖或是特定的 CSS 属性。通过配置 <code>.browserslistrc</code> 文件，开发者可以指定他们的应用程序应该支持哪些浏览器版本，这样像 Babel 这样的工具就能根据这个列表智能地添加必要的 polyfills 或者转译代码，确保最终生成的代码能够在目标浏览器中正确运行</p>
<p>此外，对于 CSS 来说，不同的浏览器对新特性的支持程度也各不相同。Autoprefixer 可以读取 <code>.browserslistrc</code> 中的信息，并据此自动为 CSS 规则添加所需的浏览器前缀，从而避免了手动管理这些复杂性和潜在错误的可能性</p>
<h3 id="browserslistrc-基础语法"><a href="#browserslistrc-基础语法" class="headerlink" title="browserslistrc 基础语法"></a>browserslistrc 基础语法</h3><p><code>.browserslistrc</code> 文件中的每一行代表一个查询条件，用来描述你希望支持的浏览器版本。以下是一些常见的例子：</p>
<ul>
<li><p>  <code>last 1 version</code>: 包含每个浏览器的最新版本。</p>
</li>
<li><p>  <code>&gt; 1%</code>: 全球范围内使用率超过 1% 的浏览器版本。</p>
</li>
<li><p>  <code>maintained node versions</code>: 所有由 Node.js 基金会维护的 Node.js 版本。</p>
</li>
<li><p>  <code>not dead</code>: 排除那些已经不再更新且全球使用率低于 0.5% 的浏览器版本</p>
</li>
</ul>
<p>值得注意的是，在 2022 年 6 月 21 日之后，Browserslist 已经将 Internet Explorer 标记为已死，因此通常情况下不需要特别为 IE 添加额外的支持规则，除非项目确实有这方面的需求</p>
<h3 id="browserslistrc-配置方式"><a href="#browserslistrc-配置方式" class="headerlink" title="browserslistrc 配置方式"></a>browserslistrc 配置方式</h3><p>除了创建单独的 <code>.browserslistrc</code> 文件外，还可以直接在 <code>package.json</code> 文件内设置 <code>browserslist</code> 字段来实现同样的效果。两种方法都可以有效地传达给相关工具你的项目打算支持哪些浏览器版本。如果同时存在这两种配置，则优先使用 <code>.browserslistrc</code> 文件中的设置</p>
<p>另外，为了适应不同的开发环境（如生产环境与开发环境），可以通过设置环境变量 <code>BROWSERSLIST_ENV</code> 或者 <code>NODE_ENV</code> 来指定不同的浏览器查询条件。这允许你在不同环境中应用不同的优化策略，比如在开发阶段专注于最新的浏览器特性，而在生产环境中更广泛地覆盖用户群体）</p>
<h3 id="语言增强"><a href="#语言增强" class="headerlink" title="语言增强"></a>语言增强</h3><p>‌<strong>前端中的语言增强</strong>‌是指通过改进和扩展现有编程语言的功能和特性，以提升开发效率和代码质量。在前端开发中，语言增强主要体现在以下几个方面：</p>
<ol>
<li><p> ‌**<a class="link"   href="https://link.juejin.cn/?target=https://www.baidu.com/s?rsv_dl=re_dqa_generate&sa=re_dqa_generate&wd=ES6&rsv_pq=e576cb1c02987e83&oq=%25E5%2589%258D%25E7%25AB%25AF%25E4%25B8%25AD%25E7%259A%2584%25E8%25AF%25AD%25E8%25A8%2580%25E5%25A2%259E%25E5%25BC%25BA%25E6%2598%25AF%25E4%25BB%2580%25E4%25B9%2588&rsv_t=3e24QtyaKdHsvG/ccL+YoNpB0XIQLo6QnBzOYlc3h7vYC3UBixuJktVQ6/g&tn=baidu&ie=utf-8"  title="https://www.baidu.com/s?rsv_dl=re_dqa_generate&amp;sa=re_dqa_generate&amp;wd=ES6&amp;rsv_pq=e576cb1c02987e83&amp;oq=%E5%89%8D%E7%AB%AF%E4%B8%AD%E7%9A%84%E8%AF%AD%E8%A8%80%E5%A2%9E%E5%BC%BA%E6%98%AF%E4%BB%80%E4%B9%88&amp;rsv_t=3e24QtyaKdHsvG/ccL+YoNpB0XIQLo6QnBzOYlc3h7vYC3UBixuJktVQ6/g&amp;tn=baidu&amp;ie=utf-8">ES6**<i class="fas fa-external-link-alt"></i></a>及更高版本**‌：ES6引入了块级作用域、默认参数、箭头函数、解构赋值、扩展运算符、模板字符串等新特性，使得代码更加简洁、易于维护。此外，ES6还新增了<code>Map</code>、<code>Set</code>、<code>Proxy</code>、<code>Reflect</code>等数据结构和辅助函数，增强了处理对象的能力，使得异步编程更加直观‌1。</p>
</li>
<li><p> ‌**<a class="link"   href="https://link.juejin.cn/?target=https://www.baidu.com/s?rsv_dl=re_dqa_generate&sa=re_dqa_generate&wd=TypeScript&rsv_pq=e576cb1c02987e83&oq=%25E5%2589%258D%25E7%25AB%25AF%25E4%25B8%25AD%25E7%259A%2584%25E8%25AF%25AD%25E8%25A8%2580%25E5%25A2%259E%25E5%25BC%25BA%25E6%2598%25AF%25E4%25BB%2580%25E4%25B9%2588&rsv_t=3e24QtyaKdHsvG/ccL+YoNpB0XIQLo6QnBzOYlc3h7vYC3UBixuJktVQ6/g&tn=baidu&ie=utf-8"  title="https://www.baidu.com/s?rsv_dl=re_dqa_generate&amp;sa=re_dqa_generate&amp;wd=TypeScript&amp;rsv_pq=e576cb1c02987e83&amp;oq=%E5%89%8D%E7%AB%AF%E4%B8%AD%E7%9A%84%E8%AF%AD%E8%A8%80%E5%A2%9E%E5%BC%BA%E6%98%AF%E4%BB%80%E4%B9%88&amp;rsv_t=3e24QtyaKdHsvG/ccL+YoNpB0XIQLo6QnBzOYlc3h7vYC3UBixuJktVQ6/g&amp;tn=baidu&amp;ie=utf-8">TypeScript**<i class="fas fa-external-link-alt"></i></a>**‌：TypeScript是JavaScript的一个超集，添加了静态类型检查等特性。通过类型注解，TypeScript提供了更强的类型检查，帮助开发者在编码阶段发现潜在的类型错误，提高代码质量和开发效率‌2。</p>
</li>
<li><p> ‌**<a class="link"   href="https://link.juejin.cn/?target=https://www.baidu.com/s?rsv_dl=re_dqa_generate&sa=re_dqa_generate&wd=Babel&rsv_pq=e576cb1c02987e83&oq=%25E5%2589%258D%25E7%25AB%25AF%25E4%25B8%25AD%25E7%259A%2584%25E8%25AF%25AD%25E8%25A8%2580%25E5%25A2%259E%25E5%25BC%25BA%25E6%2598%25AF%25E4%25BB%2580%25E4%25B9%2588&rsv_t=3e24QtyaKdHsvG/ccL+YoNpB0XIQLo6QnBzOYlc3h7vYC3UBixuJktVQ6/g&tn=baidu&ie=utf-8"  title="https://www.baidu.com/s?rsv_dl=re_dqa_generate&amp;sa=re_dqa_generate&amp;wd=Babel&amp;rsv_pq=e576cb1c02987e83&amp;oq=%E5%89%8D%E7%AB%AF%E4%B8%AD%E7%9A%84%E8%AF%AD%E8%A8%80%E5%A2%9E%E5%BC%BA%E6%98%AF%E4%BB%80%E4%B9%88&amp;rsv_t=3e24QtyaKdHsvG/ccL+YoNpB0XIQLo6QnBzOYlc3h7vYC3UBixuJktVQ6/g&amp;tn=baidu&amp;ie=utf-8">Babel**<i class="fas fa-external-link-alt"></i></a>**‌：Babel是一个广泛使用的转译器，可以将ES6及更高版本的代码转译为向后兼容的JavaScript代码，使得开发者可以使用最新的JavaScript特性，同时保证老版本的浏览器也能正常运行代码‌1。</p>
</li>
<li><p> ‌**<a class="link"   href="https://link.juejin.cn/?target=https://www.baidu.com/s?rsv_dl=re_dqa_generate&sa=re_dqa_generate&wd=Webpack&rsv_pq=e576cb1c02987e83&oq=%25E5%2589%258D%25E7%25AB%25AF%25E4%25B8%25AD%25E7%259A%2584%25E8%25AF%25AD%25E8%25A8%2580%25E5%25A2%259E%25E5%25BC%25BA%25E6%2598%25AF%25E4%25BB%2580%25E4%25B9%2588&rsv_t=3e24QtyaKdHsvG/ccL+YoNpB0XIQLo6QnBzOYlc3h7vYC3UBixuJktVQ6/g&tn=baidu&ie=utf-8"  title="https://www.baidu.com/s?rsv_dl=re_dqa_generate&amp;sa=re_dqa_generate&amp;wd=Webpack&amp;rsv_pq=e576cb1c02987e83&amp;oq=%E5%89%8D%E7%AB%AF%E4%B8%AD%E7%9A%84%E8%AF%AD%E8%A8%80%E5%A2%9E%E5%BC%BA%E6%98%AF%E4%BB%80%E4%B9%88&amp;rsv_t=3e24QtyaKdHsvG/ccL+YoNpB0XIQLo6QnBzOYlc3h7vYC3UBixuJktVQ6/g&amp;tn=baidu&amp;ie=utf-8">Webpack**<i class="fas fa-external-link-alt"></i></a>和<a class="link"   href="https://link.juejin.cn/?target=https://www.baidu.com/s?rsv_dl=re_dqa_generate&sa=re_dqa_generate&wd=Rollup&rsv_pq=e576cb1c02987e83&oq=%25E5%2589%258D%25E7%25AB%25AF%25E4%25B8%25AD%25E7%259A%2584%25E8%25AF%25AD%25E8%25A8%2580%25E5%25A2%259E%25E5%25BC%25BA%25E6%2598%25AF%25E4%25BB%2580%25E4%25B9%2588&rsv_t=3e24QtyaKdHsvG/ccL+YoNpB0XIQLo6QnBzOYlc3h7vYC3UBixuJktVQ6/g&tn=baidu&ie=utf-8"  title="https://www.baidu.com/s?rsv_dl=re_dqa_generate&amp;sa=re_dqa_generate&amp;wd=Rollup&amp;rsv_pq=e576cb1c02987e83&amp;oq=%E5%89%8D%E7%AB%AF%E4%B8%AD%E7%9A%84%E8%AF%AD%E8%A8%80%E5%A2%9E%E5%BC%BA%E6%98%AF%E4%BB%80%E4%B9%88&amp;rsv_t=3e24QtyaKdHsvG/ccL+YoNpB0XIQLo6QnBzOYlc3h7vYC3UBixuJktVQ6/g&amp;tn=baidu&amp;ie=utf-8">Rollup**<i class="fas fa-external-link-alt"></i></a>**‌：这些模块打包工具支持ES6模块化开发，帮助开发者更好地组织和管理项目，提高开发效率和代码复用性‌1。</p>
</li>
<li><p> ‌**<a class="link"   href="https://link.juejin.cn/?target=https://www.baidu.com/s?rsv_dl=re_dqa_generate&sa=re_dqa_generate&wd=CSS%2520Modules&rsv_pq=e576cb1c02987e83&oq=%25E5%2589%258D%25E7%25AB%25AF%25E4%25B8%25AD%25E7%259A%2584%25E8%25AF%25AD%25E8%25A8%2580%25E5%25A2%259E%25E5%25BC%25BA%25E6%2598%25AF%25E4%25BB%2580%25E4%25B9%2588&rsv_t=3e24QtyaKdHsvG/ccL+YoNpB0XIQLo6QnBzOYlc3h7vYC3UBixuJktVQ6/g&tn=baidu&ie=utf-8"  title="https://www.baidu.com/s?rsv_dl=re_dqa_generate&amp;sa=re_dqa_generate&amp;wd=CSS%20Modules&amp;rsv_pq=e576cb1c02987e83&amp;oq=%E5%89%8D%E7%AB%AF%E4%B8%AD%E7%9A%84%E8%AF%AD%E8%A8%80%E5%A2%9E%E5%BC%BA%E6%98%AF%E4%BB%80%E4%B9%88&amp;rsv_t=3e24QtyaKdHsvG/ccL+YoNpB0XIQLo6QnBzOYlc3h7vYC3UBixuJktVQ6/g&amp;tn=baidu&amp;ie=utf-8">CSS Modules**<i class="fas fa-external-link-alt"></i></a>和<a class="link"   href="https://link.juejin.cn/?target=https://www.baidu.com/s?rsv_dl=re_dqa_generate&sa=re_dqa_generate&wd=Scoped%2520CSS&rsv_pq=e576cb1c02987e83&oq=%25E5%2589%258D%25E7%25AB%25AF%25E4%25B8%25AD%25E7%259A%2584%25E8%25AF%25AD%25E8%25A8%2580%25E5%25A2%259E%25E5%25BC%25BA%25E6%2598%25AF%25E4%25BB%2580%25E4%25B9%2588&rsv_t=3e24QtyaKdHsvG/ccL+YoNpB0XIQLo6QnBzOYlc3h7vYC3UBixuJktVQ6/g&tn=baidu&ie=utf-8"  title="https://www.baidu.com/s?rsv_dl=re_dqa_generate&amp;sa=re_dqa_generate&amp;wd=Scoped%20CSS&amp;rsv_pq=e576cb1c02987e83&amp;oq=%E5%89%8D%E7%AB%AF%E4%B8%AD%E7%9A%84%E8%AF%AD%E8%A8%80%E5%A2%9E%E5%BC%BA%E6%98%AF%E4%BB%80%E4%B9%88&amp;rsv_t=3e24QtyaKdHsvG/ccL+YoNpB0XIQLo6QnBzOYlc3h7vYC3UBixuJktVQ6/g&amp;tn=baidu&amp;ie=utf-8">Scoped CSS**<i class="fas fa-external-link-alt"></i></a>**‌：这些技术通过封装CSS，避免全局污染，使得组件化开发成为可能，提高了代码的可维护性和复用性‌3。</p>
</li>
<li><p> <strong>CSS 预处理器与 PostCSS</strong> 虽然 HTML 和 CSS 并不是传统意义上的编程语言，但它们同样经历了显著的增强。CSS 预处理器如 SASS/SCSS、LESS 和 Stylus 引入了变量、混合宏、嵌套规则等功能，极大地简化了复杂样式表的设计过程。而 PostCSS 则是一个强大的插件平台，它可以进一步扩展 CSS 的能力，例如自动添加供应商前缀、优化输出大小等。这些工具共同作用，使得 CSS 更加富有表现力且易于管理，同时也提高了开发效率和维护性。</p>
</li>
<li><p> <strong>WebAssembly (Wasm)</strong> WebAssembly 是一种新兴的二进制格式，允许 C、C++、Rust 等编译型语言编写的高性能代码直接在浏览器中执行。它为前端带来了前所未有的计算能力和速度优势，尤其是在处理图像处理、音频视频编码解码、游戏渲染等需要大量计算资源的任务时表现出色，随着 WebAssembly 生态系统的不断完善，越来越多的开发者开始探索将其应用于日常工作中，以提升应用性能并拓宽可用技术栈的选择范围。</p>
</li>
<li><p> <strong>渐进增强与响应式设计</strong> 渐进增强是一种开发策略，它强调以分层的方式构建网页，确保即使是最基础的内容和服务也能被所有用户访问到，无论他们使用何种设备或网络条件。这一理念鼓励开发者首先创建一个简单但功能完整的版本，然后再逐渐添加更多高级特性，如 JavaScript 动画、AJAX 请求等。与此相关联的是响应式设计，它确保网站能够在不同尺寸的屏幕上良好显示，从而提供一致且优质的用户体验</p>
</li>
</ol>
<p>通过这些语言增强技术，前端开发变得更加高效和可靠，同时也推动了前端工程化的发展。</p>
<h3 id="前端中的语法增强"><a href="#前端中的语法增强" class="headerlink" title="前端中的语法增强"></a>前端中的语法增强</h3><p>‌<strong>前端中的语法增强</strong>‌主要指的是在JavaScript中使用ES6（ECMAScript 2015）及更高版本中引入的新特性，这些特性能够简化代码编写，提高开发效率和代码的可读性</p>
<h3 id="什么是-Babel"><a href="#什么是-Babel" class="headerlink" title="什么是 Babel"></a>什么是 Babel</h3><p><a class="link"   href="https://link.juejin.cn/?target=https://www.babeljs.cn/docs/"  title="https://www.babeljs.cn/docs/">Babel<i class="fas fa-external-link-alt"></i></a> 是一个工具链，主要用于将采用 ECMAScript 2015+ 语法编写的代码转换为向后兼容的 JavaScript 语法，以便能够运行在当前和旧版本的浏览器或其他环境中</p>
<h3 id="如何使用-Babel"><a href="#如何使用-Babel" class="headerlink" title="如何使用 Babel"></a>如何使用 Babel</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pnpm add --save-dev @babel/core @babel/cli @babel/preset-env</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>babel.config.json / babel.config.js</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;presets&quot;: [</span><br><span class="line">    [</span><br><span class="line">      &quot;@babel/preset-env&quot;,</span><br><span class="line">      // 浏览器版本</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;targets&quot;: &#123;</span><br><span class="line">          &quot;edge&quot;: &quot;17&quot;,</span><br><span class="line">          &quot;firefox&quot;: &quot;60&quot;,</span><br><span class="line">          &quot;chrome&quot;: &quot;67&quot;,</span><br><span class="line">          &quot;safari&quot;: &quot;11.1&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        // 按需使用</span><br><span class="line">        &quot;useBuiltIns&quot;: &quot;usage&quot;,</span><br><span class="line">        // corejs版本</span><br><span class="line">        &quot;corejs&quot;: &quot;3.6.5&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Babel-工作流程-在线AST"><a href="#Babel-工作流程-在线AST" class="headerlink" title="Babel 工作流程 在线AST"></a>Babel 工作流程 <a class="link"   href="https://link.juejin.cn/?target=https://astexplorer.net/"  title="https://astexplorer.net/">在线AST<i class="fas fa-external-link-alt"></i></a></h3><p><img  
                     lazyload
                     alt="image"
                     data-src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/76e123f464fa4399986665b5deb2b1ad~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg6bG85qix5YmN56uv:q75.awebp?rk3s=f64ab15b&x-expires=1734834075&x-signature=ZRGOHQt9U/agQ78yWOkx5IM5YtU="
                      alt="image.png"
                ></p>
<h3 id="解析（Parsing）"><a href="#解析（Parsing）" class="headerlink" title="解析（Parsing）"></a>解析（Parsing）</h3><p>在编译的第一阶段，Babel 使用 <code>@babel/parser</code> 将源代码解析成抽象语法树（AST）。这个过程分为两个子步骤：词法分析和语法分析。词法分析会将原始代码拆分成一个个的 token（最小独立语法单元），而语法分析则负责将 tokens 数组递归处理，构建出 AST</p>
<p>例如，当我们将一段包含箭头函数的代码 <code>[1, 2, 3].map((n) =&gt; n + 1);</code> 输入给 Babel 时，它首先会被解析成相应的 AST 结构。这一阶段是所有后续操作的基础，因为 AST 提供了一种结构化的表示方法，使得我们可以对代码进行各种变换而不直接操作字符串。</p>
<h3 id="转换（Transforming）"><a href="#转换（Transforming）" class="headerlink" title="转换（Transforming）"></a>转换（Transforming）</h3><p>一旦生成了 AST，接下来就是对其进行遍历和修改。这一步骤由 <code>@babel/traverse</code> 完成，它可以提供深度遍历 AST 节点的能力，并允许通过插件来实现具体的转换逻辑。插件可以定义 visitor 函数，在进入或离开特定类型的节点时执行自定义的操作，比如添加、删除或替换节点</p>
<p>继续上面的例子，如果我们要将箭头函数转换为传统函数表达式，则会在转换阶段应用相应的插件，如 <code>@babel/plugin-transform-arrow-functions</code>。此插件会在遇到箭头函数节点时，用等价的传统函数表达式替换之，从而生成一个新的 AST。</p>
<h3 id="生成（Generating）"><a href="#生成（Generating）" class="headerlink" title="生成（Generating）"></a>生成（Generating）</h3><p>最后，经过转换后的 AST 需要被重新序列化为 JavaScript 代码。这是由 <code>@babel/generator</code> 负责完成的任务，它会遍历新的 AST 并打印出目标代码字符串，同时还可以生成 source map 文件，以便于调试</p>
<p>对于之前的例子而言，最终输出的代码将是 <code>[1, 2, 3].map(function(n) &#123; return n + 1; &#125;);</code>。此外，Babel 还支持通过 <code>@babel/code-frame</code> 在遇到错误时打印出详细的代码位置信息，帮助开发者快速定位问题所在。</p>
<h3 id="插件与-Preset"><a href="#插件与-Preset" class="headerlink" title="插件与 Preset"></a>插件与 Preset</h3><p>值得注意的是，<strong>Babel 本身并不会对代码做任何转换；所有的转换都是通过插件来实现的</strong>。插件通常针对某一类语法特性，如箭头函数、类属性等。为了简化配置，Babel 引入了 preset 的概念，它是多个相关插件的集合，旨在一次性解决一组相关的转换需求。例如，<code>@babel/preset-env</code> 可以根据指定的目标环境自动选择所需的转换规则，减少了手动配置的工作量</p>
<h3 id="babel-如何使用插件和预设"><a href="#babel-如何使用插件和预设" class="headerlink" title="babel 如何使用插件和预设"></a>babel 如何使用插件和预设</h3><p>Babel 的插件和预设是其功能的核心，它们使得开发者可以灵活地定制编译过程，以满足特定项目的需求。下面将详细介绍如何使用 Babel 的插件和预设，并解释两者之间的关系及配置方法。</p>
<h3 id="babel使用插件"><a href="#babel使用插件" class="headerlink" title="babel使用插件"></a>babel使用插件</h3><p>插件是 Babel 的基本构建块，每个插件负责处理一种或多种特定的 JavaScript 语法特性转换。例如，<code>@babel/plugin-transform-arrow-functions</code> 专门用于将 ES6 箭头函数转换为 ES5 兼容的形式。要使用某个插件，你需要先通过 npm 或 yarn 安装它，然后在 Babel 的配置文件中声明该插件。</p>
<h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save-dev @babel/plugin-transform-arrow-functions</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h4><p>你可以选择 <code>.babelrc</code>、<code>.babelrc.js</code>、<code>babel.config.js</code> 或者 <code>package.json</code> 中的一个来作为你的 Babel 配置文件。推荐使用带有 <code>.js</code> 扩展名的文件，因为这样可以在配置文件中编写逻辑代码，从而实现更复杂的配置控制。以下是一个简单的 <code>babel.config.js</code> 示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  plugins: [</span><br><span class="line">    &#x27;@babel/plugin-transform-arrow-functions&#x27;</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="babel使用预设"><a href="#babel使用预设" class="headerlink" title="babel使用预设"></a>babel使用预设</h3><p>预设是一组预先定义好的插件集合，旨在简化配置流程。比如，<code>@babel/preset-env</code> 是一个非常流行的预设，它可以自动检测目标环境并加载必要的转换插件，而无需手动指定每一个单独的插件。这意味着你只需要安装这一个预设，就能支持大多数现代 JavaScript 特性到旧版浏览器的兼容性转换。</p>
<h4 id="安装预设"><a href="#安装预设" class="headerlink" title="安装预设"></a>安装预设</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save-dev @babel/preset-env</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="配置预设"><a href="#配置预设" class="headerlink" title="配置预设"></a>配置预设</h4><p>同样地，在配置文件中添加预设也是非常直接的事情：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  presets: [</span><br><span class="line">    &#x27;@babel/preset-env&#x27;</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="插件与预设的关系"><a href="#插件与预设的关系" class="headerlink" title="插件与预设的关系"></a>插件与预设的关系</h3><p>当同时配置了插件和预设时，Babel 会按照如下顺序执行：<strong>先运行插件列表中的所有插件，然后再依次执行预设中的插件</strong>。因此，<strong>如果你在配置文件中同时指定了插件和预设，那么插件中的转换规则将会优先于预设中的规则被应用</strong>。此外，值得注意的是，即使某些插件已经在预设中包含，如果在插件列表中再次声明这些插件，则会覆盖预设中的设置。</p>
<h3 id="参数配置"><a href="#参数配置" class="headerlink" title="参数配置"></a>参数配置</h3><p>对于需要额外参数的插件或预设，可以通过传递对象形式的第二个参数来进行个性化配置。例如，<code>@babel/preset-env</code> 可以接受诸如 <code>targets</code>（定义支持的目标环境）、<code>useBuiltIns</code>（是否引入 polyfill）等选项。下面是如何配置 <code>@babel/preset-env</code> 的例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  presets: [</span><br><span class="line">    [&#x27;@babel/preset-env&#x27;, &#123;</span><br><span class="line">      targets: &quot;&gt; 0.25%, not dead&quot;,</span><br><span class="line">      useBuiltIns: &quot;usage&quot;,</span><br><span class="line">      corejs: 3</span><br><span class="line">    &#125;]</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>在这个例子中，我们设置了 <code>targets</code> 来指示 Babel 根据 <a class="link"   href="https://link.juejin.cn/?target=https://caniuse.com/"  title="https://caniuse.com/">Can I Use<i class="fas fa-external-link-alt"></i></a> 数据确定哪些浏览器版本应该被支持；同时启用了按需加载 polyfills 的功能，并指定了使用的 <code>core-js</code> 版本为 3 。</p>
<h3 id="Babel-的-API"><a href="#Babel-的-API" class="headerlink" title="Babel 的 API"></a>Babel 的 API</h3><p>Babel 提供了一系列的 API，使得开发者可以在不同的场景下灵活地集成和使用 Babel 的功能。这些 API 主要集中在几个关键包中：<code>@babel/core</code>、<code>@babel/parser</code>、<code>@babel/traverse</code>、<code>@babel/generator</code> 和 <code>@babel/types</code> 等。下面将详细介绍这些核心 API 及其用途。</p>
<h3 id="babel-core"><a href="#babel-core" class="headerlink" title="@babel/core"></a>@babel/core</h3><p><code>@babel/core</code> 是 Babel 的核心模块，它封装了整个编译流程，并提供了简单的接口来执行代码转换。这个包最常用的 API 包括：</p>
<ul>
<li>  <strong>transformSync(code, options)</strong>: 同步地从源代码开始处理，最终生成目标代码和 sourceMap。</li>
<li>  <strong>transformAsync(code, options)</strong>: 异步版本的 <code>transformSync</code>，返回一个 Promise。</li>
<li>  <strong>transformFileSync(filename, options)</strong>: 从文件读取源代码并同步地进行转换。</li>
<li>  <strong>transformFromAstSync(ast, code, options)</strong>: 接受已经解析好的 AST 和原始代码作为输入，然后生成目标代码和 sourceMap。</li>
<li>  <strong>transformFromAstAsync(ast, code, options)</strong>: 异步版本的 <code>transformFromAstSync</code> 。</li>
</ul>
<p>这些 API 的 <code>options</code> 参数主要用于配置插件和预设，以指定具体的转换规则。此外，还可以通过选项配置输出格式、source maps 以及其他高级设置。</p>
<h3 id="babel-parser"><a href="#babel-parser" class="headerlink" title="@babel/parser"></a>@babel/parser</h3><p><code>@babel/parser</code>（之前称为 babylon）用于将 JavaScript 源代码解析为抽象语法树（AST）。默认情况下，它可以解析标准的 JavaScript 语法，但也可以通过插件扩展以支持 JSX、TypeScript 等非标准语法。例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const parser = require(&#x27;@babel/parser&#x27;);</span><br><span class="line">const ast = parser.parse(&#x27;const x = () =&gt; 42;&#x27;, &#123;</span><br><span class="line">  sourceType: &#x27;module&#x27;,</span><br><span class="line">  plugins: [&#x27;jsx&#x27;, &#x27;typescript&#x27;]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="babel-traverse"><a href="#babel-traverse" class="headerlink" title="@babel/traverse"></a>@babel/traverse</h3><p><code>@babel/traverse</code> 提供了一个强大的工具集，可以遍历 AST 并在遍历过程中对特定节点进行操作。它允许你定义 visitor 函数，在进入或离开某个节点时触发特定的行为。每个 visitor 函数接收两个参数：path 和 state。Path 对象包含了关于当前节点的信息以及一系列用于修改 AST 的方法；而 State 则是在遍历期间传递数据的一种方式。</p>
<h3 id="babel-generator"><a href="#babel-generator" class="headerlink" title="@babel/generator"></a>@babel/generator</h3><p><code>@babel/generator</code> 负责将 AST 转换回 JavaScript 代码字符串，并且可以选择性地生成 source map 文件。该过程与解析相反，旨在确保转换后的代码能够正确反映 AST 的结构变化。</p>
<h3 id="babel-types"><a href="#babel-types" class="headerlink" title="@babel/types"></a>@babel/types</h3><p><code>@babel/types</code> 提供了一组实用函数，用于创建、检查和验证 AST 节点。这对于编写复杂的 Babel 插件尤其有用，因为它可以帮助开发者更方便地构建和操作 AST 。</p>
<h3 id="示例：自定义-Babel-插件"><a href="#示例：自定义-Babel-插件" class="headerlink" title="示例：自定义 Babel 插件"></a>示例：自定义 Babel 插件</h3><p>结合上述 API，我们可以创建一个简单的 Babel 插件，比如将所有箭头函数转换为普通函数表达式。首先，我们需要安装必要的依赖项：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save-dev @babel/core @babel/parser @babel/traverse @babel/generator @babel/types</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>然后编写插件代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">module.exports = function (&#123; types: t &#125;) &#123;</span><br><span class="line">  return &#123;</span><br><span class="line">    visitor: &#123;</span><br><span class="line">      ArrowFunctionExpression(path) &#123;</span><br><span class="line">        const &#123; node &#125; = path;</span><br><span class="line">        // 创建一个新的函数表达式节点</span><br><span class="line">        const newFunction = t.functionExpression(</span><br><span class="line">          null,</span><br><span class="line">          node.params,</span><br><span class="line">          node.body,</span><br><span class="line">          node.async,</span><br><span class="line">          true</span><br><span class="line">        );</span><br><span class="line">        // 替换旧的箭头函数</span><br><span class="line">        path.replaceWith(newFunction);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="自定义babel插件"><a href="#自定义babel插件" class="headerlink" title="自定义babel插件"></a>自定义babel插件</h3><p>创建 Babel 自定义插件是一个强大且灵活的过程，它允许开发者根据自身需求对 JavaScript 代码进行特定的转换。Babel 插件的核心在于操作抽象语法树（AST），通过解析、转换和生成三个步骤来修改代码。下面将详细介绍如何开发一个 Babel 自定义插件，并提供一些实用的例子。</p>
<h4 id="创建自定义插件的基本结构"><a href="#创建自定义插件的基本结构" class="headerlink" title="创建自定义插件的基本结构"></a>创建自定义插件的基本结构</h4><p>一个典型的 Babel 插件遵循以下格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">module.exports = function (babel) &#123;</span><br><span class="line">  const t = babel.types;</span><br><span class="line">  return &#123;</span><br><span class="line">    name: &#x27;my-custom-plugin&#x27;, // 插件名称</span><br><span class="line">    visitor: &#123;</span><br><span class="line">      // 定义访问者模式下的节点处理逻辑</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>在这个基本结构中，<code>babel</code> 对象包含了所有 Babel 提供的方法和工具，而 <code>visitor</code> 属性则用于定义当遍历 AST 时遇到特定类型的节点时要执行的操作。</p>
<h3 id="使用-Visitor-模式"><a href="#使用-Visitor-模式" class="headerlink" title="使用 Visitor 模式"></a>使用 Visitor 模式</h3><p>在 Babel 中，遍历 AST 的方式是基于访问者模式的。这意味着你可以为不同的 AST 节点类型定义特定的行为。例如，如果你想改变所有的标识符（Identifier）从 <code>n</code> 变成 <code>x</code>，可以这样做：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">visitor: &#123;</span><br><span class="line">  Identifier(path) &#123;</span><br><span class="line">    if (path.node.name === &#x27;n&#x27;) &#123;</span><br><span class="line">      path.node.name = &#x27;x&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这段代码会检查每一个标识符节点的名字是否为 <code>n</code>，如果是，则将其改为 <code>x</code>。</p>
<h4 id="示例：向-console-log-添加调用位置信息"><a href="#示例：向-console-log-添加调用位置信息" class="headerlink" title="示例：向 console.log 添加调用位置信息"></a>示例：向 console.log 添加调用位置信息</h4><p>假设我们想要创建一个插件，它可以在每次调用 <code>console.log</code> 时自动添加当前调用的位置信息。这可以通过监听 <code>CallExpression</code> 类型的节点并检查其是否为 <code>console.log</code> 来实现：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">module.exports = function (babel) &#123;</span><br><span class="line">  const t = babel.types;</span><br><span class="line">  return &#123;</span><br><span class="line">    name: &#x27;custom-babel-plugin-demo&#x27;,</span><br><span class="line">    visitor: &#123;</span><br><span class="line">      CallExpression(path) &#123;</span><br><span class="line">        const obj = path.node.callee.object;</span><br><span class="line">        const prop = path.node.callee.property;</span><br><span class="line"></span><br><span class="line">        if (</span><br><span class="line">          t.isIdentifier(obj) &amp;&amp;</span><br><span class="line">          t.isIdentifier(prop) &amp;&amp;</span><br><span class="line">          obj.name === &#x27;console&#x27; &amp;&amp;</span><br><span class="line">          prop.name === &#x27;log&#x27;</span><br><span class="line">        ) &#123;</span><br><span class="line">          const location = `---trace: line $&#123;path.node.loc.start.line&#125;, column $&#123;path.node.loc.start.column&#125;---`;</span><br><span class="line">          path.node.arguments.push(t.stringLiteral(location));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>此插件会在每个 <code>console.log</code> 的参数列表末尾添加一行文本，指示该日志语句所在的行号和列号。</p>
<h4 id="测试你的插件"><a href="#测试你的插件" class="headerlink" title="测试你的插件"></a>测试你的插件</h4><p>为了确保插件按预期工作，建议编写测试用例。可以使用 <code>@babel/core</code> 的 <code>transformSync</code> 方法来编译一段测试代码，并验证输出是否符合预期。此外，还可以利用 <code>babel-plugin-tester</code> 库简化测试流程。</p>
<h4 id="发布你的插件"><a href="#发布你的插件" class="headerlink" title="发布你的插件"></a>发布你的插件</h4><p>一旦你完成了插件的开发并且经过充分测试后，就可以考虑将其打包并发布到 npm 上了。首先需要创建一个 <code>package.json</code> 文件描述你的插件元数据，然后通过 <code>npm publish</code> 命令发布。</p>
<p>总之，<a class="link"   href="https://link.juejin.cn/?target=https://github.com/jamiebuilds/babel-handbook"  title="https://github.com/jamiebuilds/babel-handbook">Babel 自定义插件<i class="fas fa-external-link-alt"></i></a>的开发不仅限于上述例子；实际上，任何你能想到的代码转换都可以通过这种方式来实现。掌握这些基础知识后，你可以开始探索更多复杂的场景，比如优化性能、清理不必要的代码或是集成其他工具和服务。</p>
<h3 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h3><p>综上所述，Babel 的核心在于它能够将现代 JavaScript 代码解析为 AST，然后通过一系列插件对该 AST 进行转换，最后再生成符合目标环境要求的新代码。</p>
<h2 id="CSS工具链"><a href="#CSS工具链" class="headerlink" title="CSS工具链"></a>CSS工具链</h2><p><img  
                     lazyload
                     alt="image"
                     data-src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/fc6cfd66d0764b7fa5b81885cfb1312e~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg6bG85qix5YmN56uv:q75.awebp?rk3s=f64ab15b&x-expires=1734834075&x-signature=lHOlonnVU1WrkPF5rJ7WHqTy2P8="
                      alt="image.png"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/ac3ee4da67ef4e35b0e4cbef7675e511~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg6bG85qix5YmN56uv:q75.awebp?rk3s=f64ab15b&x-expires=1734834075&x-signature=Wf1FQOqFA1mK/4CWH3OO9v4pMZE="
                      alt="image.png"
                > <img  
                     lazyload
                     alt="image"
                     data-src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/17bbb2352a5e4c2b92be2a8646a599fd~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg6bG85qix5YmN56uv:q75.awebp?rk3s=f64ab15b&x-expires=1734834075&x-signature=p+3+q6taC65kpi3DdKM/Hq8Zx5E="
                      alt="image.png"
                ></p>
<p>在Web开发中，CSS代码压缩和剪枝是优化网站性能的重要步骤。通过移除不必要的字符、注释以及未使用的样式规则，可以显著减少CSS文件的大小，从而加快页面加载速度。以下是几种常用的插件和技术，用于实现CSS代码的压缩和剪枝。</p>
<h3 id="CSS代码压缩"><a href="#CSS代码压缩" class="headerlink" title="CSS代码压缩"></a>CSS代码压缩</h3><h4 id="CssNano"><a href="#CssNano" class="headerlink" title="CssNano"></a><a class="link"   href="https://link.juejin.cn/?target=https://www.cssnano.cn/docs/introduction/"  title="https://www.cssnano.cn/docs/introduction/">CssNano<i class="fas fa-external-link-alt"></i></a></h4><p><code>CssNano</code> 是一个基于PostCSS的CSS优化工具，它能够在保持CSS代码语义不变的情况下，执行一系列优化操作，如删除多余的空白符及注释、简化选择器等，以确保最终生成的CSS文件尽可能小。此外，<code>CssNano</code> 还支持多种配置选项，允许开发者根据项目需求调整优化级别。</p>
<h4 id="Optimize-css-assets-webpack-plugin"><a href="#Optimize-css-assets-webpack-plugin" class="headerlink" title="Optimize-css-assets-webpack-plugin"></a><a class="link"   href="https://link.juejin.cn/?target=https://github.com/NMFR/optimize-css-assets-webpack-plugin"  title="https://github.com/NMFR/optimize-css-assets-webpack-plugin">Optimize-css-assets-webpack-plugin<i class="fas fa-external-link-alt"></i></a></h4><p>对于使用Webpack构建系统的项目而言，<code>optimize-css-assets-webpack-plugin</code> 插件是一个不错的选择。该插件可以在生产模式下自动压缩CSS文件，并且兼容其他类型的资源优化插件。安装后，只需将其添加到Webpack配置中的<code>optimization.minimizer</code>数组即可启用压缩功能。</p>
<h4 id="CssMinimizerWebpackPlugin"><a href="#CssMinimizerWebpackPlugin" class="headerlink" title="CssMinimizerWebpackPlugin"></a><a class="link"   href="https://link.juejin.cn/?target=https://webpack.js.org/plugins/css-minimizer-webpack-plugin/"  title="https://webpack.js.org/plugins/css-minimizer-webpack-plugin/">CssMinimizerWebpackPlugin<i class="fas fa-external-link-alt"></i></a></h4><p>随着Webpack 5的到来，推荐使用<code>css-minimizer-webpack-plugin</code>来替代旧版本中的<code>optimize-css-assets-webpack-plugin</code><strong>进行CSS压缩</strong>。此插件同样依赖于<code>cssnano</code>作为其内部引擎之一，提供了更好的性能和更丰富的特性集。</p>
<h3 id="CSS代码剪枝"><a href="#CSS代码剪枝" class="headerlink" title="CSS代码剪枝"></a>CSS代码剪枝</h3><h4 id="PurifyCSS"><a href="#PurifyCSS" class="headerlink" title="PurifyCSS"></a><a class="link"   href="https://link.juejin.cn/?target=https://www.purgecss.cn/comparison/"  title="https://www.purgecss.cn/comparison/">PurifyCSS<i class="fas fa-external-link-alt"></i></a></h4><p><code>PurifyCSS</code> 是一款专门用来清除未使用CSS代码的工具。它可以分析HTML文档并与之关联的CSS文件对比，识别出哪些样式规则实际上并未被应用，进而将这些冗余部分从最终输出中剔除。这种方式不仅有助于减小文件体积，还能改善浏览器渲染效率。</p>
<h4 id="UnCSS-github-amp-UnCSS在线效果"><a href="#UnCSS-github-amp-UnCSS在线效果" class="headerlink" title="UnCSS github &amp; UnCSS在线效果"></a><a class="link"   href="https://link.juejin.cn/?target=https://github.com/uncss/uncss"  title="https://github.com/uncss/uncss">UnCSS github<i class="fas fa-external-link-alt"></i></a> &amp; <a class="link"   href="https://link.juejin.cn/?target=https://uncss-online.com/"  title="https://uncss-online.com/">UnCSS在线效果<i class="fas fa-external-link-alt"></i></a></h4><p>与<code>PurifyCSS</code>类似，<code>UnCSS</code>也是一个能够检测并移除网页中未引用CSS规则的工具。不过，<code>UnCSS</code>更加注重对动态内容的支持，例如JavaScript生成的DOM元素或AJAX加载的内容。这意味着即使是在复杂的交互式页面上，也能有效去除无用样式。</p>
<h3 id="结合使用"><a href="#结合使用" class="headerlink" title="结合使用"></a>结合使用</h3><p>为了达到最佳效果，通常建议结合多种工具共同作用。例如，在Webpack工作流中，首先利用<code>MiniCssExtractPlugin</code>将所有CSS文件抽离成独立文件，然后借助上述提到的任何一个压缩工具对其进行进一步优化；与此同时，可以运行<code>PurifyCSS</code>或<code>UnCSS</code>来进行代码剪枝，确保只保留真正需要的样式规则。</p>
<h3 id="postcss"><a href="#postcss" class="headerlink" title="postcss"></a><a class="link"   href="https://link.juejin.cn/?target=https://www.postcss.com.cn/docs/postcss-architecture"  title="https://www.postcss.com.cn/docs/postcss-architecture">postcss<i class="fas fa-external-link-alt"></i></a></h3><p><img  
                     lazyload
                     alt="image"
                     data-src="https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/556e1f527037403aa549608ff8ea3e66~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg6bG85qix5YmN56uv:q75.awebp?rk3s=f64ab15b&x-expires=1734834075&x-signature=omc746WC3oI4BI00wvRp3DC5jTU="
                      alt="image.png"
                ></p>
<p>PostCSS 是一个强大的工具，它使用 JavaScript 插件来转换 CSS 代码。与传统的 CSS 预处理器不同，PostCSS 自身并不提供特定的语法或功能集，而是作为一个平台，允许开发者通过丰富的插件生态系统扩展和定制其功能。这使得 PostCSS 成为了一个灵活且高效的解决方案，适用于各种前端开发场景。</p>
<h4 id="主要作用"><a href="#主要作用" class="headerlink" title="主要作用"></a>主要作用</h4><ol>
<li><p> <strong>增强CSS功能</strong>：通过一系列插件，PostCSS 可以为标准的 CSS 添加额外的功能，如变量、混合（mixins）、嵌套规则等。这意味着开发者可以编写更简洁、更具表现力的样式表，同时保持与现有浏览器的良好兼容性</p>
</li>
<li><p> <strong>自动化任务处理</strong>：PostCSS 的插件能够自动执行许多常见的 CSS 相关任务，例如添加供应商前缀（vendor prefixes），检查代码质量（linting），以及压缩文件大小。这些操作不仅提高了工作效率，还确保了生成的 CSS 文件既高效又符合最佳实践</p>
</li>
<li><p> <strong>支持未来标准</strong>：借助像 <code>postcss-preset-env</code> 这样的插件，PostCSS 允许开发者立即采用最新的 CSS 规范和技术，即使它们尚未被所有主流浏览器完全支持。该插件会根据指定的目标浏览器列表自动将现代特性编译成向后兼容的形式</p>
</li>
<li><p> <strong>优化性能</strong>：除了简化开发流程外，PostCSS 还可以帮助改善网站的整体性能。例如，<code>cssnano</code> 插件可以在不影响视觉效果的前提下大幅缩减 CSS 文件体积；而 <code>purgecss</code> 则可用于移除未使用的样式声明，从而减少不必要的网络传输开销</p>
</li>
<li><p> <strong>促进团队协作</strong>：由于 PostCSS 支持多种格式化的输入输出，并且提供了详细的源映射（source maps）选项，因此非常适合多人协作环境下的项目管理。此外，某些插件还能强制实施统一的编码风格指南，进一步增强了代码的一致性和可维护性</p>
</li>
<li><p> <strong>与其他工具集成</strong>：作为 Node.js 生态系统的一部分，PostCSS 轻松集成了 Webpack、Gulp、Grunt 等流行的构建工具，形成了完整的前端工作流。这意味着无论你选择哪种方式组织项目，都能轻松地将 PostCSS 整合进来，享受其带来的便利</p>
</li>
</ol>
<h4 id="功能示例"><a href="#功能示例" class="headerlink" title="功能示例"></a>功能示例</h4><ul>
<li><p>  <strong>Autoprefixer</strong>：这是一个非常受欢迎的 PostCSS 插件，用于自动为 CSS 属性添加必要的浏览器前缀。它基于 Can I Use 数据库确定哪些前缀是必需的，并根据配置的目标浏览器范围进行相应的调整</p>
</li>
<li><p>  <strong>PreCSS</strong>：此插件集成了多个有用的功能，包括但不限于变量、嵌套、继承等 Sass 类似特性。它让那些习惯于预处理器语法的人能够在不改变原有工作流的情况下快速上手 PostCSS</p>
</li>
<li><p>  <strong>Stylelint</strong>：作为一种先进的 Linter 工具，Stylelint 可以帮助开发者发现潜在的问题，比如拼写错误、冗余选择器或是不符合团队约定俗成的格式化问题。这对于维持高质量的代码库至关重要</p>
</li>
</ul>
<h4 id="如何使用和配置-官方按使用构建工具分情况"><a href="#如何使用和配置-官方按使用构建工具分情况" class="headerlink" title="如何使用和配置 官方按使用构建工具分情况"></a>如何使用和配置 <a class="link"   href="https://link.juejin.cn/?target=https://github.com/postcss/postcss%23usage"  title="https://github.com/postcss/postcss#usage">官方按使用构建工具分情况<i class="fas fa-external-link-alt"></i></a></h4><p>使用和配置PostCSS涉及几个关键步骤，包括安装必要的工具、创建配置文件以及选择适当的插件来满足特定需求。以下是详细的指南，帮助你顺利地开始使用PostCSS。</p>
<h4 id="安装PostCSS"><a href="#安装PostCSS" class="headerlink" title="安装PostCSS"></a>安装PostCSS</h4><p>首先，确保你的开发环境中已经安装了Node.js，因为PostCSS依赖于Node.js环境。接着，你可以通过npm（Node Package Manager）或yarn来安装PostCSS及其所需的插件。对于全局安装PostCSS CLI，可以使用以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g postcss-cli</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>如果你打算在某个具体的项目中使用PostCSS，则应该在该项目根目录下创建一个<code>package.json</code>文件（如果还没有的话，可以通过<code>npm init</code>命令初始化项目），然后为该项目安装PostCSS作为本地开发依赖项：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save-dev postcss postcss-cli</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>此外，还需要根据项目的需要安装额外的插件，例如用于自动添加浏览器前缀的<code>autoprefixer</code>插件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save-dev autoprefixer</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h4><p>安装完成后，下一步是创建一个配置文件来指定要使用的PostCSS插件及其配置。通常，这个配置文件命名为<code>postcss.config.js</code>，并放置在项目的根目录中。下面是一个简单的例子，展示了如何配置<code>autoprefixer</code>插件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  plugins: [</span><br><span class="line">    require(&#x27;autoprefixer&#x27;)(&#123;</span><br><span class="line">      // 兼容市面上所有版本浏览器</span><br><span class="line">      browsers: [&#x27;&gt; 0%&#x27;]</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>对于更复杂的设置，比如当你想要整合其他CSS预处理器或者应用更多的优化规则时，可以在同一个配置文件中添加多个插件。例如，结合<code>postcss-import</code>插件来导入外部样式表，或是使用<code>cssnano</code>进行代码压缩。</p>
<h4 id="配置Vite项目中的PostCSS"><a href="#配置Vite项目中的PostCSS" class="headerlink" title="配置Vite项目中的PostCSS"></a>配置Vite项目中的PostCSS</h4><p>如果你正在使用Vite构建工具，那么可以直接在<code>vite.config.js</code>内的<code>css.postcss</code>属性内进行PostCSS配置。例如，使用<code>postcss-preset-env</code>插件可以帮助你将最新的CSS语法转换为向后兼容的形式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import &#123; defineConfig &#125; from &#x27;vite&#x27;;</span><br><span class="line">const postcssPresetEnv = require(&#x27;postcss-preset-env&#x27;);</span><br><span class="line"></span><br><span class="line">export default defineConfig(&#123;</span><br><span class="line">  css: &#123;</span><br><span class="line">    postcss: &#123;</span><br><span class="line">      plugins: [postcssPresetEnv()]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="运行PostCSS处理CSS文件"><a href="#运行PostCSS处理CSS文件" class="headerlink" title="运行PostCSS处理CSS文件"></a>运行PostCSS处理CSS文件</h4><p>完成上述配置后，你可以使用PostCSS CLI工具来运行PostCSS并处理CSS文件。例如，假设你的主CSS文件名为<code>main.css</code>，并且你想要将处理后的CSS输出到<code>build/main.css</code>，可以运行以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npx postcss main.css -o build/main.css</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这条命令会读取<code>main.css</code>的内容，按照<code>postcss.config.js</code>中定义的规则对其进行转换，并将结果保存到指定的目标路径下。</p>
<h4 id="构建流程集成"><a href="#构建流程集成" class="headerlink" title="构建流程集成"></a>构建流程集成</h4><p>在实际开发过程中，PostCSS常常被集成到构建工具（如Webpack、Gulp、Grunt等）中，以便自动化地处理CSS文件并在开发和构建阶段执行编译和优化。以Webpack为例，你需要安装<code>postcss-loader</code>，并通过修改<code>webpack.config.js</code>来包含PostCSS处理逻辑：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.css$/,</span><br><span class="line">        use: [&#x27;style-loader&#x27;, &#x27;css-loader&#x27;, &#x27;postcss-loader&#x27;]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  postcss: function() &#123;</span><br><span class="line">    return [</span><br><span class="line">      require(&#x27;autoprefixer&#x27;)(&#123; browsers: [&#x27;last 2 versions&#x27;] &#125;)</span><br><span class="line">    ];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>以上就是PostCSS的基本安装和配置流程。通过合理利用PostCSS提供的强大功能和丰富的插件库，你可以极大地简化CSS开发过程，同时确保生成的样式表既高效又符合现代Web标准的要求。</p>
<h3 id="CSS原子化概念"><a href="#CSS原子化概念" class="headerlink" title="CSS原子化概念"></a>CSS原子化概念</h3><p>CSS原子化（Atomic CSS）是一种<strong>CSS架构方式</strong>，它提倡<strong>将样式拆分为最小且独立的单位</strong>——即“原子”。<strong>每个原子类只包含一个或少数几个特定的样式属性</strong>，如颜色、边距、字体大小等。这些原子类可以组合起来创建复杂的样式效果，从而实现样式的模块化和复用性。与传统的面向组件的CSS编写方法不同，<strong>原子化CSS强调的是通过一系列小型、单一用途的类来构建页面，而非为每个UI组件定义专门的样式规则</strong>。</p>
<h4 id="核心特点"><a href="#核心特点" class="headerlink" title="核心特点"></a>核心特点</h4><ul>
<li>  <strong>单一样式属性</strong>：每个类名通常对应一个具体的样式属性，比如<code>.p-4</code>代表<code>padding: 4px;</code>，这使得开发者能够直观地理解类的作用。</li>
<li>  <strong>高度可复用</strong>：由于类是高度独立的，它们可以在不同的上下文中被自由组合使用，减少了重复定义样式的需求。</li>
<li>  <strong>减少冗余代码</strong>：原子化CSS有助于消除不必要的CSS文件膨胀问题，因为它避免了大量未使用的样式规则堆积。</li>
<li>  <strong>易于维护</strong>：当需要调整某个特定的样式时，只需更改相应的HTML标签上的类名即可，无需修改CSS文件本身。</li>
<li>  <strong>基于视觉功能命名</strong>：类名往往直接反映了其在界面上的表现形式，例如<code>.text-center</code>表示文本居中显示。</li>
</ul>
<h4 id="CSS原子化解决方案"><a href="#CSS原子化解决方案" class="headerlink" title="CSS原子化解决方案"></a>CSS原子化解决方案</h4><p>随着Web开发社区对高效、灵活的样式管理方案的需求增长，出现了多个优秀的CSS原子化框架和工具，其中最著名的包括：</p>
<h4 id="Tailwind-CSS"><a href="#Tailwind-CSS" class="headerlink" title="Tailwind CSS"></a><a class="link"   href="https://link.juejin.cn/?target=https://tailwindcss.com/"  title="https://tailwindcss.com/">Tailwind CSS<i class="fas fa-external-link-alt"></i></a></h4><p>Tailwind CSS 是目前最受欢迎的功能优先型CSS框架之一。它提供了丰富的预设样式类库，允许开发者直接在HTML中组合这些类以快速搭建界面。Tailwind的设计理念非常符合原子化CSS的原则，它的类名简洁明了，并且支持自定义主题配置。此外，Tailwind还内置了大量的实用工具类，涵盖了从布局到动画的各种场景，极大地简化了前端开发流程。</p>
<h4 id="Windi-CSS"><a href="#Windi-CSS" class="headerlink" title="Windi CSS"></a><a class="link"   href="https://link.juejin.cn/?target=https://windicss.org/"  title="https://windicss.org/">Windi CSS<i class="fas fa-external-link-alt"></i></a></h4><p>Windi CSS 是另一个高效的原子化CSS框架，它的工作原理类似于Tailwind，但更加注重性能优化。Windi采用了按需生成策略，只有当某些样式类真正出现在HTML文档中时才会被编译进最终输出的CSS文件里，这样可以进一步降低资源消耗。同时，Windi也支持多种插件扩展，满足不同项目的个性化需求。</p>
<h4 id="UnoCSS"><a href="#UnoCSS" class="headerlink" title="UnoCSS"></a><a class="link"   href="https://link.juejin.cn/?target=https://unocss.dev/"  title="https://unocss.dev/">UnoCSS<i class="fas fa-external-link-alt"></i></a></h4><p>不同于前面提到的两个框架，UnoCSS更像是一个引擎而不是固定框架。它允许用户定义自己的原子化规则集，提供了极大的灵活性。UnoCSS的核心优势在于它可以与Vite等现代构建工具无缝集成，实现了真正的按需加载机制，确保只有必要的样式才会被打包进去。此外，UnoCSS还支持自动前缀添加、媒体查询等功能，帮助开发者轻松应对跨浏览器兼容性挑战。</p>
<h4 id="Basscss"><a href="#Basscss" class="headerlink" title="Basscss"></a><a class="link"   href="https://link.juejin.cn/?target=https://basscss.com/"  title="https://basscss.com/">Basscss<i class="fas fa-external-link-alt"></i></a></h4><p>Basscss 是一款轻量级的原子化CSS框架，旨在提供一组简单而有效的基础样式类。尽管它的规模较小，但对于那些追求极简风格的应用程序来说却是理想的选择。Basscss遵循了原子化CSS的核心思想，即通过少量的基础类构建出复杂多变的用户界面。不过，相比其他更全面的框架，Basscss提供的功能相对有限，更适合小型项目或者作为更大框架的一部分使用。</p>
<h4 id="Tachyons"><a href="#Tachyons" class="headerlink" title="Tachyons"></a><a class="link"   href="https://link.juejin.cn/?target=https://tachyons.io/docs/"  title="https://tachyons.io/docs/">Tachyons<i class="fas fa-external-link-alt"></i></a></h4><p>Tachyons 是一个专注于速度和响应式的原子化CSS框架。它不仅拥有庞大的样式类库，而且经过精心设计以保证良好的渲染性能。Tachyons的类名遵循了一套清晰易懂的命名约定，便于记忆和使用。该框架特别适合需要快速迭代的设计原型或是要求极高加载效率的应用场景。</p>
<p>综上所述，CSS原子化不仅仅是一个理论上的概念，而是已经被广泛应用于实际项目中的有效实践。通过采用上述任何一个或多个框架，开发者可以获得更好的开发体验、更高的生产力以及更优质的用户体验。值得注意的是，虽然原子化CSS带来了诸多便利之处，但<strong>它也可能导致HTML标记变得冗长复杂维护困难</strong>，因此在选择是否采用此方法之前，应当充分考虑项目的具体情况和技术栈特性。</p>
<h2 id="构建工具和脚手架"><a href="#构建工具和脚手架" class="headerlink" title="构建工具和脚手架"></a>构建工具和脚手架</h2><p>在2024年，前端开发领域继续快速发展，构建工具和脚手架作为提高开发效率、简化项目初始化过程的关键组成部分，也在不断演进。这一年中，一些构建工具和脚手架因其卓越的性能、简便的配置以及强大的社区支持而脱颖而出。</p>
<h3 id="构建工具-将开发者编写的源代码转换成浏览器能够理解和执行的形式"><a href="#构建工具-将开发者编写的源代码转换成浏览器能够理解和执行的形式" class="headerlink" title="构建工具 (将开发者编写的源代码转换成浏览器能够理解和执行的形式)"></a>构建工具 (将开发者编写的源代码转换成浏览器能够理解和执行的形式)</h3><h4 id="Vite"><a href="#Vite" class="headerlink" title="Vite"></a><a class="link"   href="https://link.juejin.cn/?target=https://cn.vitejs.dev/"  title="https://cn.vitejs.dev/">Vite<i class="fas fa-external-link-alt"></i></a></h4><p>Vite 是一个新兴的构建工具（都vite6.0了），它凭借其出色的启动速度和热更新能力，在2024年成为了许多开发者的新宠。与传统的 Webpack 相比，Vite 在开发阶段的构建速度提升了数倍，这得益于它基于原生 ES 模块（ESM）的工作原理。Vite 通过即时编译请求模块来实现快速反馈循环，并且提供了开箱即用的 TypeScript 支持。此外，Vite 还拥有丰富的插件生态系统，能够满足多样化的开发需求。对于 Vue 生态系统而言，Vite 已经成为新项目的首选构建工具。双引擎（<a class="link"   href="https://link.juejin.cn/?target=https://esbuild.bootcss.com/"  title="https://esbuild.bootcss.com/">esbuild<i class="fas fa-external-link-alt"></i></a>和<a class="link"   href="https://link.juejin.cn/?target=https://www.rollupjs.com/"  title="https://www.rollupjs.com/">rollup<i class="fas fa-external-link-alt"></i></a>）</p>
<h4 id="Webpack"><a href="#Webpack" class="headerlink" title="Webpack"></a><a class="link"   href="https://link.juejin.cn/?target=https://webpack.p2hp.com/"  title="https://webpack.p2hp.com/">Webpack<i class="fas fa-external-link-alt"></i></a></h4><p>尽管有新的挑战者出现，Webpack 仍然是最流行的 JavaScript 应用构建工具之一。它以其灵活性和强大的功能著称，支持模块化开发、代码分割、懒加载等功能。Webpack 的插件机制允许开发者根据需要定制化构建流程，适用于各种规模的应用程序。然而，随着其他工具如 Vite 的崛起，Webpack 面临着一定的竞争压力。为了保持竞争力，Webpack 社区也在持续改进其性能和用户体验。</p>
<h4 id="Turbopack"><a href="#Turbopack" class="headerlink" title="Turbopack"></a><a class="link"   href="https://link.juejin.cn/?target=https://vercel.com/blog/turbopack"  title="https://vercel.com/blog/turbopack">Turbopack<i class="fas fa-external-link-alt"></i></a></h4><p>Turbopack 是由 Webpack 的作者使用 Rust 开发的一款高性能打包工具，旨在对抗 Vite。它的目标是提供更快的增量构建时间和更小的输出文件大小。虽然 Turbopack 尚处于早期发展阶段，但它已经吸引了部分开发者的注意，并有可能在未来成为重要的构建选项之一。</p>
<h4 id="Rspack"><a href="#Rspack" class="headerlink" title="Rspack"></a><a class="link"   href="https://link.juejin.cn/?target=https://rspack.dev/"  title="https://rspack.dev/">Rspack<i class="fas fa-external-link-alt"></i></a></h4><p>Rspack 是一款基于 Rust 编写的高性能 JavaScript 打包工具，它被设计成 Webpack 的直接替代品，并且提供了与 Webpack 生态系统的高度兼容性。这意味着开发者可以轻松地将现有的 Webpack 项目迁移到 Rspack 上，同时享受到显著的构建速度提升。根据官方提供的信息，Rspack 可以提供比 Webpack 快 5 到 10 倍的构建性能</p>
<h3 id="脚手架-提供界面交互和基础工程模板"><a href="#脚手架-提供界面交互和基础工程模板" class="headerlink" title="脚手架 (提供界面交互和基础工程模板)"></a>脚手架 (提供界面交互和基础工程模板)</h3><h4 id="Create-React-App-CRA"><a href="#Create-React-App-CRA" class="headerlink" title="Create React App (CRA)"></a><a class="link"   href="https://link.juejin.cn/?target=https://cra.nodejs.cn/"  title="https://cra.nodejs.cn/">Create React App (CRA)<i class="fas fa-external-link-alt"></i></a></h4><p>Create React App 是官方推荐的 React 应用创建工具，它为开发者提供了一个无需配置的环境来快速搭建 React 项目。CRA 内置了对 Babel、ESLint 和 Webpack 的支持，使得开发者可以专注于业务逻辑而非繁琐的工具链设置。尽管 Vite 等新型构建工具带来了挑战，但 CRA 依然保持着广泛的用户基础，并且不断更新以适应最新的 React 版本和技术趋势。</p>
<h4 id="Vue-CLI"><a href="#Vue-CLI" class="headerlink" title="Vue CLI"></a><a class="link"   href="https://link.juejin.cn/?target=https://cli.vuejs.org/"  title="https://cli.vuejs.org/">Vue CLI<i class="fas fa-external-link-alt"></i></a></h4><p>Vue CLI 是 Vue.js 官方提供的命令行工具，用于生成完整的项目结构并集成常用的构建工具和库。它不仅简化了项目的初始设置，还提供了灵活的插件系统，允许开发者轻松扩展功能。Vue CLI 支持多种模板选择，包括但不限于 Webpack、Parcel 和 Vite，这让开发者可以根据具体需求做出最佳选择。特别是结合 Vite 使用时，Vue CLI 可以为开发者带来极佳的开发体验。</p>
<h4 id="Angular-CLI"><a href="#Angular-CLI" class="headerlink" title="Angular CLI"></a><a class="link"   href="https://link.juejin.cn/?target=https://angular.dev/tools/cli"  title="https://angular.dev/tools/cli">Angular CLI<i class="fas fa-external-link-alt"></i></a></h4><p>Angular CLI 是 Angular 团队维护的一个命令行界面工具，帮助开发者快速启动 Angular 应用。它集成了诸如路由配置、状态管理等常用特性，并且内置了对服务端渲染（SSR）、Progressive Web Apps (PWA) 等高级特性的支持。Angular CLI 的优势在于其紧密集成 Angular 生态系统的能力，使得开发者可以利用丰富的官方资源和文档进行高效开发。</p>
<h4 id="Next-js"><a href="#Next-js" class="headerlink" title="Next.js"></a><a class="link"   href="https://link.juejin.cn/?target=https://nextjs.org/"  title="https://nextjs.org/">Next.js<i class="fas fa-external-link-alt"></i></a></h4><p>Next.js 是一个React框架，它不仅仅是一个简单的脚手架工具，而是提供了完整的解决方案，包括服务器端渲染（SSR）、静态站点生成（SSG）、API路由等功能。Next.js 的特点是易于上手且功能强大，适合构建从简单博客到复杂电子商务平台等各种类型的Web应用。随着React Server Components 和 Server Actions 等新技术的引入，Next.js 在2024年的地位更加稳固。</p>
<h4 id="Nuxtjs"><a href="#Nuxtjs" class="headerlink" title="Nuxtjs"></a><a class="link"   href="https://link.juejin.cn/?target=https://www.nuxtjs.cn/"  title="https://www.nuxtjs.cn/">Nuxtjs<i class="fas fa-external-link-alt"></i></a></h4><p>Nuxt.js 是一个基于 Vue.js 的框架，它为开发者提供了一种直观且可扩展的方式来创建类型安全、性能优越以及适合生产环境的全栈 Web 应用程序。Nuxt.js 不仅简化了服务器端渲染（SSR）和静态站点生成（SSG）应用的构建过程，还通过其内置的功能如自动路由、中间件支持、布局支持等特性极大地提升了开发效率</p>
<h4 id="Nestjs"><a href="#Nestjs" class="headerlink" title="Nestjs"></a><a class="link"   href="https://link.juejin.cn/?target=https://docs.nestjs.com/"  title="https://docs.nestjs.com/">Nestjs<i class="fas fa-external-link-alt"></i></a></h4><p>NestJS 是一个用于构建高效、可扩展的 Node.js 服务器端应用程序的框架，它使用渐进式 JavaScript 构建，并且完全支持 TypeScript（尽管开发者仍然可以选择使用纯 JavaScript）。NestJS 的设计理念深受 Angular 框架的影响，同时借鉴了后端开发中常用的 Java 技术栈 Spring 框架的最佳实践</p>
<p>综上所述，2024年的前端构建工具和脚手架市场呈现出多元化的发展态势。无论是追求极致性能还是希望获得全面的功能支持，开发者都能找到适合自己项目需求的理想工具。值得注意的是，技术进步永无止境，未来几年内可能会有更多的创新涌现，推动整个行业向前发展。</p>
<h2 id="前端主流框架技术"><a href="#前端主流框架技术" class="headerlink" title="前端主流框架技术"></a>前端主流框架技术</h2><p>在2024年，前端开发领域继续快速发展，主流框架也在不断进化以适应新的需求和技术趋势。根据最新的资料，<strong>React、Vue、Angular仍然是最受欢迎的三大前端框架</strong>，但同时一些新兴框架如Svelte和SolidJS也逐渐崭露头角。</p>
<h3 id="React-js"><a href="#React-js" class="headerlink" title="React.js"></a><a class="link"   href="https://link.juejin.cn/?target=https://www.php.cn/doc/react/"  title="https://www.php.cn/doc/react/">React.js<i class="fas fa-external-link-alt"></i></a></h3><p>React 作为由Facebook维护的JavaScript库，在2024年依然是构建用户界面组件的强大工具。React 19版本引入了React Server Components（RSC），这是一种新的架构风格，它允许开发者编写只在服务器上运行的React组件，并且可以与客户端组件无缝协作。此外，React团队还在持续扩展其生态系统，包括React Compiler和Server Actions等功能，这些特性不仅增强了React的能力，还进一步提升了开发者的体验。React的优势在于其庞大的社区支持、丰富的插件系统以及虚拟DOM带来的性能优势。</p>
<h3 id="Vue-js"><a href="#Vue-js" class="headerlink" title="Vue.js"></a><a class="link"   href="https://link.juejin.cn/?target=https://cn.vuejs.org/"  title="https://cn.vuejs.org/">Vue.js<i class="fas fa-external-link-alt"></i></a></h3><p>Vue 3.4版本带来了显著的技术革新，例如完全重写的解析器提高了编译速度，更快的单文件组件（SFC）编译流程，以及一个经过优化的响应式系统，提高了重新计算的效率。更重要的是，Vue正在开发中的Vapor模式，这是一种可选的、以性能为导向的编译策略，旨在生成比现有方法更高效的代码，甚至可以在所有组件中使用时消除对虚拟DOM的需求，从而减少打包大小。此外，Vue 3.4还稳定了<code>defineModel</code>宏，并引入了v-bind简写等新特性，进一步简化了开发过程。</p>
<h3 id="Angular-js"><a href="#Angular-js" class="headerlink" title="Angular.js"></a><a class="link"   href="https://link.juejin.cn/?target=https://angular.dev/"  title="https://angular.dev/">Angular.js<i class="fas fa-external-link-alt"></i></a></h3><p>Angular 在2024年的更新中引入了信号机制、可延迟视图、NgOptimizedImage组件等一系列新功能，旨在提高应用性能并改善开发者体验。特别是信号机制，它提供了一种更加直观的方式来进行状态管理和组件间通信。非破坏性预加载和即将推出的部分预加载特性，则有助于加快页面加载速度，提升用户体验。尽管Angular的学习曲线较为陡峭，但对于大型复杂的企业级应用来说，Angular仍然是一个强有力的选择。</p>
<h3 id="Svelte-js"><a href="#Svelte-js" class="headerlink" title="Svelte.js"></a><a class="link"   href="https://link.juejin.cn/?target=https://www.svelte.cn/"  title="https://www.svelte.cn/">Svelte.js<i class="fas fa-external-link-alt"></i></a></h3><p>Svelte 是一个相对较新的框架，但在2024年已经获得了相当大的关注。它的独特之处在于编译时框架的概念，这意味着Svelte会在构建阶段处理掉大部分逻辑，最终生成的代码没有额外的运行时开销，这使得应用程序启动更快、体积更小。Svelte 4版本强调细粒度响应性，允许开发者在全栈应用中使用，并提供了强大的开发者体验，包括单次飞行变异以避免服务器上的瀑布流效应，请求和资源去重等功能。</p>
<h3 id="SolidJS"><a href="#SolidJS" class="headerlink" title="SolidJS"></a><a class="link"   href="https://link.juejin.cn/?target=https://www.solidjs.com/"  title="https://www.solidjs.com/">SolidJS<i class="fas fa-external-link-alt"></i></a></h3><p>SolidJS以其细粒度响应性和高效的性能而闻名，它允许开发者创建高性能的应用程序，而不需要担心复杂的依赖跟踪或手动管理副作用。SolidStart是用于构建SolidJS应用的一个框架，在最新版本中，它整合了多个独立的包以提供完整的功能，并且每个部分都可以被替换为开发者自己的实现。这种灵活性使得SolidJS成为那些寻求快速迭代和高度定制化解决方案的理想选择。</p>
<h3 id="其他值得关注的框架"><a href="#其他值得关注的框架" class="headerlink" title="其他值得关注的框架"></a>其他值得关注的框架</h3><p>除了上述提到的主要框架外，还有一些其他值得注意的选项，如Astro、Next.js、Nuxt.js等。其中，Astro作为一个前沿的静态网站构建器，因其对性能和开发者体验的深入优化而在业界引起了广泛关注；Next.js则是React生态中最受欢迎的框架之一，特别适合需要服务器端渲染的应用；而Nuxt.js则专注于Vue生态，提供了类似的服务器端渲染能力。</p>
<p>综上所述，2024年的前端开发环境充满了机遇与挑战，从成熟稳定的React、Vue、Angular到快速崛起的Svelte和SolidJS，每个框架都有其独特的魅力和适用场景。开发者应根据项目需求和个人偏好来选择最适合自己的工具链。随着技术的进步，未来几年内我们可以期待更多令人兴奋的变化和发展。</p>
<h2 id="写在结尾"><a href="#写在结尾" class="headerlink" title="写在结尾"></a>写在结尾</h2><p>2024年，前端工程化方案和技术继续向着智能化、模块化、跨平台的方向演进。随着Web技术的发展，前端开发不仅在框架和工具链的选择上更加多样化，而且在构建高性能、可维护的应用方面也提出了更高的要求。以下是当前主流的前端工程化方案和技术趋势。</p>
<h3 id="智能化工具与AI辅助开发"><a href="#智能化工具与AI辅助开发" class="headerlink" title="智能化工具与AI辅助开发"></a>智能化工具与AI辅助开发</h3><p>人工智能（AI）正在深刻改变前端开发的方式。AI驱动的开发工具如cursor、GitHub Copilot、CodeGeeX等已经能够在项目中自动完成一些重复性的编码任务，并根据描述自动生成代码片段或继续书写代码。这类工具不仅提高了开发效率，还降低了新手学习成本，使得开发者可以更专注于业务逻辑的设计。此外，AI还可以用于自动化测试、智能优化以及个性化用户体验等多个方面，为前端开发带来更多可能性。</p>
<h3 id="微前端架构"><a href="#微前端架构" class="headerlink" title="微前端架构"></a>微前端架构</h3><p>微前端作为一种将大型单体应用拆分为多个独立部署的小型应用的方法，在2024年得到了广泛应用。通过采用微前端架构，企业能够实现不同团队并行开发、快速迭代的同时保持系统的灵活性和稳定性。目前流行的微前端解决方案包括qiankun、Module Federation（模块联邦）等，它们提供了不同的隔离机制和服务通信方式来满足多样化的应用场景需求。例如，Module Federation允许不同技术栈的应用共享公共模块，从而减少了冗余代码并提升了整体性能。</p>
<h3 id="WebAssembly-Wasm-的普及"><a href="#WebAssembly-Wasm-的普及" class="headerlink" title="WebAssembly (Wasm) 的普及"></a>WebAssembly (Wasm) 的普及</h3><p>WebAssembly作为一种高效的字节码格式，因其接近本机执行的速度而受到越来越多的关注。它允许开发者使用C/C++、Rust等多种编程语言编写高性能的应用程序，并将其编译成可以在浏览器环境中运行的wasm文件。特别是在处理复杂计算任务如图像处理、3D渲染等领域时，WebAssembly表现出了极大的优势。2024年预计会有更多框架开始支持WebAssembly，进一步推动其在前端领域的应用范围。</p>
<h3 id="静态站点生成器-SSG"><a href="#静态站点生成器-SSG" class="headerlink" title="静态站点生成器(SSG)"></a>静态站点生成器(SSG)</h3><p>静态站点生成器（SSG）如Gatsby、Next.js、Nuxt.js等已经成为构建高效网站的重要手段之一。这些工具可以通过预渲染页面内容生成静态HTML文件，显著提高首屏加载速度并改善SEO效果。对于那些不需要频繁更新内容的企业官网或者博客类站点来说，SSG提供了一种简单且有效的解决方案。同时，结合服务端渲染（SSR），还可以兼顾动态数据展示的需求。</p>
<h3 id="跨平台开发-推荐看看大前端跨端开发指南"><a href="#跨平台开发-推荐看看大前端跨端开发指南" class="headerlink" title="跨平台开发 推荐看看大前端跨端开发指南"></a>跨平台开发 <a class="link"   href="https://s.juejin.cn/ds/iUhLCEut/"  title="https://s.juejin.cn/ds/iUhLCEut/">推荐看看大前端跨端开发指南<i class="fas fa-external-link-alt"></i></a></h3><p>为了减少多平台适配的工作量并提升开发效率，“一次编写，各处运行”的理念越来越受到重视。React Native、Flutter等移动端跨平台框架让开发者可以用一套代码库创建iOS和Android应用；而对于桌面应用程序，则有Electron、Tauri等选择。这些框架不仅简化了开发流程，同时也保证了用户体验的一致性。</p>
<h3 id="前端性能优化"><a href="#前端性能优化" class="headerlink" title="前端性能优化"></a>前端性能优化</h3><p>随着用户期望的不断提高，性能优化成为了前端开发中的关键考虑因素。开发者需要关注资源的有效加载、动画平滑过渡、无障碍设计等方面，以确保所有用户都能获得优质的体验。具体措施包括但不限于：懒加载图片和其他非必要资源、利用CDN加速全球访问、实施缓存策略、压缩传输的数据量等。此外，Core Web Vitals等评估标准的普及促使开发者更加注重核心指标如LCP（最大内容绘制）、FID（首次输入延迟）等。</p>
<h3 id="TypeScript-和静态类型检查"><a href="#TypeScript-和静态类型检查" class="headerlink" title="TypeScript 和静态类型检查"></a>TypeScript 和静态类型检查</h3><p>TypeScript作为JavaScript的超集，凭借其静态类型系统有效减少了潜在错误的发生几率，并提高了代码质量和可读性。2024年，TypeScript的使用预计将更加普遍，尤其是在大型团队和企业级项目中。除了增强代码健壮性和开发效率外，TypeScript还带来了更好的IDE支持，比如代码补全和错误提示等功能。</p>
<h3 id="构建自动化与CI-CD"><a href="#构建自动化与CI-CD" class="headerlink" title="构建自动化与CI/CD"></a>构建自动化与CI/CD</h3><p>构建自动化是指利用脚本或专门的工具链来完成重复性的任务，例如代码格式化、单元测试执行、ESLint检查等。持续集成/持续部署（CI/CD）则进一步扩展了这一概念，确保每次提交都能经过严格的验证流程后自动发布到生产环境。常用的CI/CD平台包括GitHub Actions、GitLab CI、CircleCI等，它们提供了丰富的插件生态系统，可以帮助团队快速设置并运行流水线</p>
<h3 id="环境变量管理"><a href="#环境变量管理" class="headerlink" title="环境变量管理"></a>环境变量管理</h3><p>在多环境部署的情况下，合理配置环境变量至关重要。通过<code>.env</code>文件或其他形式的配置机制，开发者可以在不同阶段（如开发、测试、生产）之间轻松切换API地址、密钥等敏感信息。以Vue CLI为例，它内置了对多种模式的支持，允许用户通过命令行参数指定要使用的环境配置文件，同时结合cross-env这样的跨平台解决方案，确保所有操作系统下都能正确读取NODE_ENV等关键变量</p>
<h3 id="代码质量控制"><a href="#代码质量控制" class="headerlink" title="代码质量控制"></a>代码质量控制</h3><p>为了保证代码的一致性和高质量，许多项目都会引入静态分析工具，如ESLint用于JavaScript/TypeScript代码规范检查；Prettier负责统一代码风格；Stylelint则是针对CSS/SASS/Less等样式文件的审查利器。这些工具往往可以通过编辑器插件直接集成到日常编码过程中，实时给出反馈，帮助开发者养成良好的习惯</p>
<p>综上所述，2024年的<strong>前端工程化不仅仅局限于某个特定的技术或工具</strong>，而是涵盖了<strong>从开发流程到最终产品交付的全过程</strong>。面对不断变化的技术环境，持续学习新技术、紧跟行业发展步伐将是每个前端工程师成长道路上不可或缺的一部分。通过合理运用上述提到的各项技术和方法，我们可以构建出既美观又实用的现代化Web应用，为用户提供卓越的数字体验。</p>
<p>本文转自 <a class="link"   href="https://juejin.cn/post/7448191774537842714#heading-0" >https://juejin.cn/post/7448191774537842714#heading-0<i class="fas fa-external-link-alt"></i></a>，如有侵权，请联系删除。</p>
]]></content>
      <categories>
        <category>frontend</category>
      </categories>
      <tags>
        <tag>frontend</tag>
        <tag>前端</tag>
      </tags>
  </entry>
</search>
